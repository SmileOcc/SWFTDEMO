// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Ts.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - OBJECT_QUOTETsRoot

@implementation OBJECT_QUOTETsRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - OBJECT_QUOTETsRoot_FileDescriptor

static GPBFileDescriptor *OBJECT_QUOTETsRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"yx.quote.v2.object.quote"
                                                 objcPrefix:@"OBJECT_QUOTE"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - OBJECT_QUOTETSData

@implementation OBJECT_QUOTETSData

@dynamic latestTime;
@dynamic preClose;
@dynamic price;
@dynamic avg;
@dynamic volume;
@dynamic amount;
@dynamic netchng;
@dynamic pctchng;
@dynamic avgIndex;

typedef struct OBJECT_QUOTETSData__storage_ {
  uint32_t _has_storage_[1];
  int32_t pctchng;
  uint64_t latestTime;
  int64_t preClose;
  int64_t price;
  int64_t avg;
  uint64_t volume;
  int64_t amount;
  int64_t netchng;
  int64_t avgIndex;
} OBJECT_QUOTETSData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "latestTime",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_LatestTime,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, latestTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "preClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_PreClose,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, preClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "price",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Price,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, price),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "avg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Avg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, avg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Volume,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, volume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "amount",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Amount,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, amount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Netchng,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, netchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_Pctchng,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, pctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "avgIndex",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTETSData_FieldNumber_AvgIndex,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTETSData__storage_, avgIndex),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTETSData class]
                                     rootClass:[OBJECT_QUOTETsRoot class]
                                          file:OBJECT_QUOTETsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTETSData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\n\000\002\010\000\t\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
