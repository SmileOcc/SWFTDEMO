// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kline.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum OBJECT_QUOTEKLineType

/** K线类型 */
typedef GPB_ENUM(OBJECT_QUOTEKLineType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_QUOTEKLineType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_QUOTEKLineType_KtNone = 0,

  /** 01分钟数据 */
  OBJECT_QUOTEKLineType_KtMin1 = 1,

  /** 05分钟数据 */
  OBJECT_QUOTEKLineType_KtMin5 = 2,

  /** 10分钟数据 */
  OBJECT_QUOTEKLineType_KtMin10 = 3,

  /** 15分钟数据 */
  OBJECT_QUOTEKLineType_KtMin15 = 4,

  /** 30分钟数据 */
  OBJECT_QUOTEKLineType_KtMin30 = 5,

  /** 60分钟数据 */
  OBJECT_QUOTEKLineType_KtMin60 = 6,

  /** 日K线数据 */
  OBJECT_QUOTEKLineType_KtDay = 7,

  /** 周K线数据 */
  OBJECT_QUOTEKLineType_KtWeek = 8,

  /** 月K线数据 */
  OBJECT_QUOTEKLineType_KtMonth = 9,

  /** 季K线数据 */
  OBJECT_QUOTEKLineType_KtMnt3 = 10,

  /** 半年K线数据 */
  OBJECT_QUOTEKLineType_KtMnt6 = 11,

  /** 年K线数据 */
  OBJECT_QUOTEKLineType_KtMnt12 = 12,
};

GPBEnumDescriptor *OBJECT_QUOTEKLineType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_QUOTEKLineType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_QUOTEKLineDirection

/** K线复权方向 */
typedef GPB_ENUM(OBJECT_QUOTEKLineDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_QUOTEKLineDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_QUOTEKLineDirection_KdNone = 0,
  OBJECT_QUOTEKLineDirection_KdForward = 1,
  OBJECT_QUOTEKLineDirection_KdBackward = 2,
};

GPBEnumDescriptor *OBJECT_QUOTEKLineDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_QUOTEKLineDirection_IsValidValue(int32_t value);

#pragma mark - OBJECT_QUOTEKlineRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface OBJECT_QUOTEKlineRoot : GPBRootObject
@end

#pragma mark - OBJECT_QUOTEKLineData

typedef GPB_ENUM(OBJECT_QUOTEKLineData_FieldNumber) {
  OBJECT_QUOTEKLineData_FieldNumber_LatestTime = 1,
  OBJECT_QUOTEKLineData_FieldNumber_PreClose = 2,
  OBJECT_QUOTEKLineData_FieldNumber_Open = 3,
  OBJECT_QUOTEKLineData_FieldNumber_Close = 4,
  OBJECT_QUOTEKLineData_FieldNumber_High = 5,
  OBJECT_QUOTEKLineData_FieldNumber_Low = 6,
  OBJECT_QUOTEKLineData_FieldNumber_Avg = 7,
  OBJECT_QUOTEKLineData_FieldNumber_Volume = 8,
  OBJECT_QUOTEKLineData_FieldNumber_Amount = 9,
  OBJECT_QUOTEKLineData_FieldNumber_Netchng = 10,
  OBJECT_QUOTEKLineData_FieldNumber_Pctchng = 11,
  OBJECT_QUOTEKLineData_FieldNumber_TurnoverRate = 12,
  OBJECT_QUOTEKLineData_FieldNumber_PostVolume = 13,
  OBJECT_QUOTEKLineData_FieldNumber_PostAmount = 14,
  OBJECT_QUOTEKLineData_FieldNumber_ImpliedVolatility = 15,
};

/**
 * k线数据元素
 **/
GPB_FINAL @interface OBJECT_QUOTEKLineData : GPBMessage

/** k线最后更新时间，时间戳(毫秒) */
@property(nonatomic, readwrite) uint64_t latestTime;

/** 周期昨收价 */
@property(nonatomic, readwrite) int64_t preClose;

/** 周期开盘价 */
@property(nonatomic, readwrite) int64_t open;

/** 周期收盘价 */
@property(nonatomic, readwrite) int64_t close;

/** 周期最高价 */
@property(nonatomic, readwrite) int64_t high;

/** 周期最低价 */
@property(nonatomic, readwrite) int64_t low;

/** 周期均价 */
@property(nonatomic, readwrite) int64_t avg;

/** 周期成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 周期成交金额 */
@property(nonatomic, readwrite) int64_t amount;

/** 涨跌值 */
@property(nonatomic, readwrite) int64_t netchng;

/** 涨跌幅, 使用时除以 100 */
@property(nonatomic, readwrite) int32_t pctchng;

/** 换手率, 使用时除以 100 */
@property(nonatomic, readwrite) int32_t turnoverRate;

/** 盘后量,科创板使用 */
@property(nonatomic, readwrite) uint64_t postVolume;

/** 盘后额，科创板使用 */
@property(nonatomic, readwrite) int64_t postAmount;

/** 期权隐含波动率，使用时除以10000 */
@property(nonatomic, readwrite) int64_t impliedVolatility;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
