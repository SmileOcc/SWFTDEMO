// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: const.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum COMMONPageDirection

/** 数据翻页方向 */
typedef GPB_ENUM(COMMONPageDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  COMMONPageDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  COMMONPageDirection_PdNext = 0,
  COMMONPageDirection_PdPrev = 1,
};

GPBEnumDescriptor *COMMONPageDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL COMMONPageDirection_IsValidValue(int32_t value);

#pragma mark - Enum COMMONSortDirection

/** 排序方向 */
typedef GPB_ENUM(COMMONSortDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  COMMONSortDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  COMMONSortDirection_SdAsc = 0,
  COMMONSortDirection_SdDesc = 1,
};

GPBEnumDescriptor *COMMONSortDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL COMMONSortDirection_IsValidValue(int32_t value);

#pragma mark - Enum COMMONSectorCode

/** 自定义板块 */
typedef GPB_ENUM(COMMONSectorCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  COMMONSectorCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  COMMONSectorCode_ScNone = 0,

  /** A 股 */
  COMMONSectorCode_ScHsA = 990001,

  /** B 股 */
  COMMONSectorCode_ScHsB = 990002,

  /** 上海 A 股 */
  COMMONSectorCode_ScSseA = 990003,

  /** 上海 B 股 */
  COMMONSectorCode_ScSseB = 990004,

  /** 深圳 A 股 */
  COMMONSectorCode_ScSzseA = 990005,

  /** 深圳 B 股 */
  COMMONSectorCode_ScSzseB = 990006,

  /** 基金 */
  COMMONSectorCode_ScHsFund = 990007,

  /** 权证 */
  COMMONSectorCode_ScHsOption = 990008,

  /** 指数 */
  COMMONSectorCode_ScHsIndex = 990009,

  /** 债券 */
  COMMONSectorCode_ScHsBond = 990010,

  /** 创业板 */
  COMMONSectorCode_ScHsGemb = 990012,

  /** 中小板 */
  COMMONSectorCode_ScHsSmeb = 990013,

  /** 三板 */
  COMMONSectorCode_ScHsThird = 990014,

  /** 沪股通 */
  COMMONSectorCode_ScHkSh = 990015,

  /** 深股通 */
  COMMONSectorCode_ScHkSz = 990016,

  /** 国债逆回购 */
  COMMONSectorCode_ScHsNdrr = 990017,

  /** 存托凭证 */
  COMMONSectorCode_ScHsCdr = 990018,

  /** 创新企业 */
  COMMONSectorCode_ScHsIe = 990019,

  /** 港股 */
  COMMONSectorCode_ScHkex = 990031,

  /** 港股指数 */
  COMMONSectorCode_ScHkIndex = 990033,

  /** 港股主板 */
  COMMONSectorCode_ScHkMain = 990034,

  /** 港股创业板 */
  COMMONSectorCode_ScHkGemb = 990035,

  /** 港股ETF */
  COMMONSectorCode_ScHkEtf = 990036,

  /** 港股涡轮 */
  COMMONSectorCode_ScHkDw = 990037,

  /** 港股牛熊证 */
  COMMONSectorCode_ScHkCbbc = 990038,

  /** 港股通（沪） */
  COMMONSectorCode_ScShHk = 990040,

  /** 港股通（深） */
  COMMONSectorCode_ScSzHk = 990041,

  /** 990201～990299 美股自定义板块区段，超出注意修改代码 */
  COMMONSectorCode_ScUs = 990201,

  /** 纽交所 */
  COMMONSectorCode_ScNyse = 990202,

  /** 纳斯达克 */
  COMMONSectorCode_ScNasdaq = 990203,

  /** 美股指数 */
  COMMONSectorCode_ScUsIndex = 990204,

  /** 美股ETF */
  COMMONSectorCode_ScUsEtf = 990205,

  /** 中概股 */
  COMMONSectorCode_ScChinaConcept = 990206,

  /** 明星股 */
  COMMONSectorCode_ScUsStars = 990207,

  /** 热门板块 */
  COMMONSectorCode_ScHsHot = 991001,

  /** 行业板块 */
  COMMONSectorCode_ScHsIndustry = 991002,

  /** 地区板块 */
  COMMONSectorCode_ScHsRegion = 991003,

  /** 概念板块 */
  COMMONSectorCode_ScHsConcept = 991004,

  /** 排行板块 */
  COMMONSectorCode_ScHsRank = 991005,

  /** 港股行业板块 */
  COMMONSectorCode_ScHkIndustry = 991010,

  /** 美股行业板块 */
  COMMONSectorCode_ScUsIndustry = 991011,

  /** AH股 */
  COMMONSectorCode_ScAh = 992001,
};

GPBEnumDescriptor *COMMONSectorCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL COMMONSectorCode_IsValidValue(int32_t value);

#pragma mark - Enum COMMONLangType

typedef GPB_ENUM(COMMONLangType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  COMMONLangType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  COMMONLangType_LangNone = 0,

  /** 简体中文 */
  COMMONLangType_LangChn = 1,

  /** 繁体中文 */
  COMMONLangType_LangChi = 2,

  /** 英文 */
  COMMONLangType_LangEng = 3,
};

GPBEnumDescriptor *COMMONLangType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL COMMONLangType_IsValidValue(int32_t value);

#pragma mark - COMMONConstRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface COMMONConstRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
