// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Meta.pbobjc.h"
#import "Market.pbobjc.h"
#import "Secu.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(OBJECT_SECUCharaterData);
GPBObjCClassDeclaration(OBJECT_SECUConceptionMeta);
GPBObjCClassDeclaration(OBJECT_SECUFullID);
GPBObjCClassDeclaration(OBJECT_SECUIndustryMeta);

#pragma mark - OBJECT_SECUMetaRoot

@implementation OBJECT_SECUMetaRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - OBJECT_SECUMetaRoot_FileDescriptor

static GPBFileDescriptor *OBJECT_SECUMetaRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"yx.quote.v2.object.secu"
                                                 objcPrefix:@"OBJECT_SECU"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum OBJECT_SECUTradingDayType

GPBEnumDescriptor *OBJECT_SECUTradingDayType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Not\000All\000Morning\000Afternoon\000";
    static const int32_t values[] = {
        OBJECT_SECUTradingDayType_Not,
        OBJECT_SECUTradingDayType_All,
        OBJECT_SECUTradingDayType_Morning,
        OBJECT_SECUTradingDayType_Afternoon,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(OBJECT_SECUTradingDayType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:OBJECT_SECUTradingDayType_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL OBJECT_SECUTradingDayType_IsValidValue(int32_t value__) {
  switch (value__) {
    case OBJECT_SECUTradingDayType_Not:
    case OBJECT_SECUTradingDayType_All:
    case OBJECT_SECUTradingDayType_Morning:
    case OBJECT_SECUTradingDayType_Afternoon:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum OBJECT_SECUDayType

GPBEnumDescriptor *OBJECT_SECUDayType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "DayUnknown\000Day5\000DayThisWeek\000Day10\000Day20\000"
        "Day30\000Day60\000Day100\000Day120\000Day250\000DayThis"
        "Year\000Day52Week\000";
    static const int32_t values[] = {
        OBJECT_SECUDayType_DayUnknown,
        OBJECT_SECUDayType_Day5,
        OBJECT_SECUDayType_DayThisWeek,
        OBJECT_SECUDayType_Day10,
        OBJECT_SECUDayType_Day20,
        OBJECT_SECUDayType_Day30,
        OBJECT_SECUDayType_Day60,
        OBJECT_SECUDayType_Day100,
        OBJECT_SECUDayType_Day120,
        OBJECT_SECUDayType_Day250,
        OBJECT_SECUDayType_DayThisYear,
        OBJECT_SECUDayType_Day52Week,
    };
    static const char *extraTextFormatInfo = "\t\001c\201\000\003c\202\000\004c\202\000\005c\202\000\006c\202\000\007c\203\000\010c\203\000\tc\203\000\013c\202\344\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(OBJECT_SECUDayType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:OBJECT_SECUDayType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL OBJECT_SECUDayType_IsValidValue(int32_t value__) {
  switch (value__) {
    case OBJECT_SECUDayType_DayUnknown:
    case OBJECT_SECUDayType_Day5:
    case OBJECT_SECUDayType_DayThisWeek:
    case OBJECT_SECUDayType_Day10:
    case OBJECT_SECUDayType_Day20:
    case OBJECT_SECUDayType_Day30:
    case OBJECT_SECUDayType_Day60:
    case OBJECT_SECUDayType_Day100:
    case OBJECT_SECUDayType_Day120:
    case OBJECT_SECUDayType_Day250:
    case OBJECT_SECUDayType_DayThisYear:
    case OBJECT_SECUDayType_Day52Week:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - OBJECT_SECUBasicMeta

@implementation OBJECT_SECUBasicMeta

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic chsName;
@dynamic chsNameAbbr;
@dynamic zhhantNameAbbr;
@dynamic enName;
@dynamic enNameAbbr;
@dynamic pyName;
@dynamic listStatus;
@dynamic currency;
@dynamic listDate;
@dynamic delistDate;
@dynamic sector;
@dynamic isinCode;
@dynamic type1;
@dynamic type2;
@dynamic type3;
@dynamic vcmCode;
@dynamic casCode;
@dynamic shortSellCode;
@dynamic lotSize;
@dynamic codeViewOrNot;
@dynamic sectorName;
@dynamic isshsc;
@dynamic buyVolUnit;
@dynamic sellVolUnit;
@dynamic financeTargetFlag;
@dynamic marginTargetFlag;
@dynamic spereadTabCode;
@dynamic isGrey;
@dynamic high52Week;
@dynamic low52Week;
@dynamic highest;
@dynamic lowest;
@dynamic priceBase;
@dynamic margin;
@dynamic marginRadio;
@dynamic dailyMargin;
@dynamic dailyMarginGearing;
@dynamic stockFlag;
@dynamic hktempCode;
@dynamic hkStockFlag;
@dynamic closeThisYear;
@dynamic close5Day;
@dynamic spreadTab;

typedef struct OBJECT_SECUBasicMeta__storage_ {
  uint32_t _has_storage_[2];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  OBJECT_SECUListStatus listStatus;
  OBJECT_SECUCurrencyType currency;
  OBJECT_MARKETListedSector sector;
  OBJECT_SECUSecuType1 type1;
  OBJECT_SECUSecuType2 type2;
  OBJECT_SECUSecuType3 type3;
  int32_t vcmCode;
  int32_t casCode;
  int32_t shortSellCode;
  int32_t lotSize;
  int32_t codeViewOrNot;
  int32_t isshsc;
  int32_t buyVolUnit;
  int32_t sellVolUnit;
  int32_t financeTargetFlag;
  int32_t marginTargetFlag;
  int32_t spereadTabCode;
  int32_t isGrey;
  uint32_t priceBase;
  int32_t margin;
  int32_t stockFlag;
  int32_t hkStockFlag;
  NSString *code;
  NSString *chsName;
  NSString *chsNameAbbr;
  NSString *zhhantNameAbbr;
  NSString *enName;
  NSString *enNameAbbr;
  NSString *pyName;
  NSString *isinCode;
  NSString *sectorName;
  NSString *hktempCode;
  NSString *spreadTab;
  uint64_t listDate;
  uint64_t delistDate;
  int64_t high52Week;
  int64_t low52Week;
  int64_t highest;
  int64_t lowest;
  double marginRadio;
  double dailyMarginGearing;
  int64_t closeThisYear;
  int64_t close5Day;
} OBJECT_SECUBasicMeta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ChsName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, chsName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ChsNameAbbr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "zhhantNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ZhhantNameAbbr,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, zhhantNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "enName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_EnName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, enName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "enNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_EnNameAbbr,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, enNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pyName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_PyName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, pyName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "listStatus",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUListStatus_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ListStatus,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, listStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "currency",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Currency,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "listDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ListDate,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, listDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "delistDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_DelistDate,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, delistDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sector",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETListedSector_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Sector,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, sector),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "isinCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_IsinCode,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, isinCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "type1",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUSecuType1_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Type1,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, type1),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "type2",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUSecuType2_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Type2,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, type2),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "type3",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUSecuType3_EnumDescriptor,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Type3,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, type3),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "vcmCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_VcmCode,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, vcmCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "casCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_CasCode,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, casCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shortSellCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_ShortSellCode,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, shortSellCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "lotSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_LotSize,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, lotSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "codeViewOrNot",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_CodeViewOrNot,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, codeViewOrNot),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sectorName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_SectorName,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, sectorName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "isshsc",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Isshsc,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, isshsc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "buyVolUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_BuyVolUnit,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, buyVolUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sellVolUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_SellVolUnit,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, sellVolUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "financeTargetFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_FinanceTargetFlag,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, financeTargetFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "marginTargetFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_MarginTargetFlag,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, marginTargetFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "spereadTabCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_SpereadTabCode,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, spereadTabCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "isGrey",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_IsGrey,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, isGrey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "high52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_High52Week,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, high52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "low52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Low52Week,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, low52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "highest",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Highest,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, highest),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lowest",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Lowest,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, lowest),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_PriceBase,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "margin",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Margin,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, margin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "marginRadio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_MarginRadio,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, marginRadio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "dailyMargin",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_DailyMargin,
        .hasIndex = 38,
        .offset = 39,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "dailyMarginGearing",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_DailyMarginGearing,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, dailyMarginGearing),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "stockFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_StockFlag,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, stockFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hktempCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_HktempCode,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, hktempCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hkStockFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_HkStockFlag,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, hkStockFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "closeThisYear",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_CloseThisYear,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, closeThisYear),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "close5Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_Close5Day,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, close5Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "spreadTab",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUBasicMeta_FieldNumber_SpreadTab,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(OBJECT_SECUBasicMeta__storage_, spreadTab),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUBasicMeta class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUBasicMeta__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006!\004\202\244\000\"\003\202\244\000(\013\000)\022\000-\r\000.\006#\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUBasicMeta_Exchange_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Exchange_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Market_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Market_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_ListStatus_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_ListStatus];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_ListStatus_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_ListStatus];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Currency_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Currency];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Currency_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Currency];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Sector_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Sector];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Sector_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Sector];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Type1_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type1];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Type1_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type1];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Type2_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type2];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Type2_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type2];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUBasicMeta_Type3_RawValue(OBJECT_SECUBasicMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type3];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUBasicMeta_Type3_RawValue(OBJECT_SECUBasicMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUBasicMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUBasicMeta_FieldNumber_Type3];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUWarrantMeta

@implementation OBJECT_SECUWarrantMeta

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic warrantCategory;
@dynamic listStatus;
@dynamic warrantType;
@dynamic warrantCharacter;
@dynamic exerciseStyle;
@dynamic settlementMode;
@dynamic leverageRatio;
@dynamic effectiveGearing;
@dynamic impliedVolatility;
@dynamic listedDate;
@dynamic tradingUnit;
@dynamic lastTradeDay;
@dynamic maturityDate;
@dynamic issueVol;
@dynamic premium;
@dynamic stillOutVol;
@dynamic percOfStillOut;
@dynamic exercisePrice;
@dynamic recoveryPrice;
@dynamic daysRemain;
@dynamic entRatio;
@dynamic moneyness;
@dynamic breakEvenPrice;
@dynamic gearing;
@dynamic targetChsNameAbbr;
@dynamic targetChtNameAbbr;
@dynamic targetEnNameAbbr;
@dynamic targetSecuCode;
@dynamic targetSecuMarket;
@dynamic targetType;
@dynamic targetCurrencyUnit;
@dynamic targetPerValue;
@dynamic issuerChs;
@dynamic issuerCht;
@dynamic issuerEn;
@dynamic priceBase;
@dynamic secChsNameAbbr;
@dynamic secChtNameAbbr;
@dynamic secEnNameAbbr;
@dynamic secuState;
@dynamic priceFloor;
@dynamic priceCeilling;
@dynamic yrMatHibor;
@dynamic tarhvolatl30D;
@dynamic warrantCprice;
@dynamic stockClosePrice;
@dynamic warTheoryPrice;
@dynamic vega;
@dynamic gamma;
@dynamic rho;
@dynamic theta;

typedef struct OBJECT_SECUWarrantMeta__storage_ {
  uint32_t _has_storage_[2];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  uint32_t warrantCategory;
  OBJECT_SECUListStatus listStatus;
  OBJECT_SECUWarrantType warrantType;
  OBJECT_SECUWarrantCharacter warrantCharacter;
  OBJECT_SECUExerciseStyle exerciseStyle;
  OBJECT_SECUSettleMode settlementMode;
  uint32_t tradingUnit;
  uint32_t daysRemain;
  OBJECT_MARKETMarketId targetSecuMarket;
  uint32_t targetType;
  uint32_t targetCurrencyUnit;
  uint32_t priceBase;
  int32_t secuState;
  NSString *code;
  NSString *targetChsNameAbbr;
  NSString *targetChtNameAbbr;
  NSString *targetEnNameAbbr;
  NSString *targetSecuCode;
  NSString *issuerChs;
  NSString *issuerCht;
  NSString *issuerEn;
  NSString *secChsNameAbbr;
  NSString *secChtNameAbbr;
  NSString *secEnNameAbbr;
  int64_t leverageRatio;
  int64_t effectiveGearing;
  int64_t impliedVolatility;
  uint64_t listedDate;
  uint64_t lastTradeDay;
  uint64_t maturityDate;
  int64_t issueVol;
  int64_t premium;
  int64_t stillOutVol;
  int64_t percOfStillOut;
  int64_t exercisePrice;
  int64_t recoveryPrice;
  int64_t entRatio;
  int64_t moneyness;
  int64_t breakEvenPrice;
  int64_t gearing;
  int64_t targetPerValue;
  int64_t priceFloor;
  int64_t priceCeilling;
  double yrMatHibor;
  double tarhvolatl30D;
  double warrantCprice;
  double stockClosePrice;
  double warTheoryPrice;
  double vega;
  double gamma;
  double rho;
  double theta;
} OBJECT_SECUWarrantMeta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "warrantCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_WarrantCategory,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, warrantCategory),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "listStatus",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUListStatus_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_ListStatus,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, listStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "warrantType",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUWarrantType_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_WarrantType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, warrantType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "warrantCharacter",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUWarrantCharacter_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_WarrantCharacter,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, warrantCharacter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "exerciseStyle",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUExerciseStyle_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_ExerciseStyle,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, exerciseStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "settlementMode",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUSettleMode_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_SettlementMode,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, settlementMode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "leverageRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_LeverageRatio,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, leverageRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "effectiveGearing",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_EffectiveGearing,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, effectiveGearing),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "impliedVolatility",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_ImpliedVolatility,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, impliedVolatility),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "listedDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_ListedDate,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, listedDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "tradingUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TradingUnit,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, tradingUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lastTradeDay",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_LastTradeDay,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, lastTradeDay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "maturityDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_MaturityDate,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, maturityDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "issueVol",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_IssueVol,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, issueVol),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "premium",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Premium,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, premium),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "stillOutVol",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_StillOutVol,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, stillOutVol),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "percOfStillOut",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_PercOfStillOut,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, percOfStillOut),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "exercisePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_ExercisePrice,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, exercisePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "recoveryPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_RecoveryPrice,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, recoveryPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "daysRemain",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_DaysRemain,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, daysRemain),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "entRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_EntRatio,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, entRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "moneyness",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Moneyness,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, moneyness),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "breakEvenPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_BreakEvenPrice,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, breakEvenPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "gearing",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Gearing,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, gearing),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "targetChsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetChsNameAbbr,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetChsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetChtNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetChtNameAbbr,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetChtNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetEnNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetEnNameAbbr,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetEnNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetSecuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetSecuCode,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetSecuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetSecuMarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetSecuMarket,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetSecuMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "targetType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetType,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "targetCurrencyUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetCurrencyUnit,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetCurrencyUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "targetPerValue",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_TargetPerValue,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, targetPerValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "issuerChs",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_IssuerChs,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, issuerChs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "issuerCht",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_IssuerCht,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, issuerCht),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "issuerEn",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_IssuerEn,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, issuerEn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_PriceBase,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "secChsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_SecChsNameAbbr,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, secChsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secChtNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_SecChtNameAbbr,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, secChtNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secEnNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_SecEnNameAbbr,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, secEnNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuState",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_SecuState,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, secuState),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "priceFloor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_PriceFloor,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, priceFloor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceCeilling",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_PriceCeilling,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, priceCeilling),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "yrMatHibor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_YrMatHibor,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, yrMatHibor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "tarhvolatl30D",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Tarhvolatl30D,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, tarhvolatl30D),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "warrantCprice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_WarrantCprice,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, warrantCprice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "stockClosePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_StockClosePrice,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, stockClosePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "warTheoryPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_WarTheoryPrice,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, warTheoryPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "vega",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Vega,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, vega),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "gamma",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Gamma,
        .hasIndex = 51,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, gamma),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "rho",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Rho,
        .hasIndex = 52,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, rho),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "theta",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUWarrantMeta_FieldNumber_Theta,
        .hasIndex = 53,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantMeta__storage_, theta),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUWarrantMeta class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUWarrantMeta__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\0015\n\202!\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUWarrantMeta_Exchange_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_Exchange_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_Market_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_Market_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_ListStatus_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_ListStatus];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_ListStatus_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_ListStatus];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_WarrantType_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_WarrantType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_WarrantType_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_WarrantType];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_WarrantCharacter_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_WarrantCharacter];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_WarrantCharacter_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_WarrantCharacter];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_ExerciseStyle_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_ExerciseStyle];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_ExerciseStyle_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_ExerciseStyle];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_SettlementMode_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_SettlementMode];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_SettlementMode_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_SettlementMode];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUWarrantMeta_TargetSecuMarket_RawValue(OBJECT_SECUWarrantMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_TargetSecuMarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUWarrantMeta_TargetSecuMarket_RawValue(OBJECT_SECUWarrantMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUWarrantMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUWarrantMeta_FieldNumber_TargetSecuMarket];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUTradingPeriod

@implementation OBJECT_SECUTradingPeriod

@dynamic begining;
@dynamic ending;
@dynamic desChs;
@dynamic desCht;
@dynamic desEn;
@dynamic status;
@dynamic stage;

typedef struct OBJECT_SECUTradingPeriod__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketStatus stage;
  NSString *desChs;
  NSString *desCht;
  NSString *desEn;
  NSString *status;
  uint64_t begining;
  uint64_t ending;
} OBJECT_SECUTradingPeriod__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "begining",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_Begining,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, begining),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "ending",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_Ending,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, ending),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "desChs",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_DesChs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, desChs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desCht",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_DesCht,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, desCht),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "desEn",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_DesEn,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, desEn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "status",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_Status,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "stage",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketStatus_EnumDescriptor,
        .number = OBJECT_SECUTradingPeriod_FieldNumber_Stage,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUTradingPeriod__storage_, stage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUTradingPeriod class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUTradingPeriod__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\003\004b\000\004\004b\000\005\004A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUTradingPeriod_Stage_RawValue(OBJECT_SECUTradingPeriod *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUTradingPeriod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUTradingPeriod_FieldNumber_Stage];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUTradingPeriod_Stage_RawValue(OBJECT_SECUTradingPeriod *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUTradingPeriod descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUTradingPeriod_FieldNumber_Stage];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUHistoryQuote

@implementation OBJECT_SECUHistoryQuote

@dynamic market;
@dynamic code;
@dynamic date;
@dynamic open;
@dynamic close;
@dynamic low;
@dynamic high;
@dynamic turnover;
@dynamic turnoverVolume;
@dynamic lotSize;
@dynamic changes;
@dynamic pclose;
@dynamic currency;
@dynamic annualHigh;
@dynamic annualLow;
@dynamic priceBase;

typedef struct OBJECT_SECUHistoryQuote__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  OBJECT_SECUCurrencyType currency;
  uint32_t priceBase;
  NSString *code;
  uint64_t date;
  int64_t open;
  int64_t close;
  int64_t low;
  int64_t high;
  int64_t turnover;
  uint64_t turnoverVolume;
  int64_t lotSize;
  int64_t changes;
  int64_t pclose;
  int64_t annualHigh;
  int64_t annualLow;
} OBJECT_SECUHistoryQuote__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Date,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "open",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Open,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, open),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "close",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Close,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, close),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "low",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Low,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, low),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "high",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_High,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, high),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "turnover",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Turnover,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, turnover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "turnoverVolume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_TurnoverVolume,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, turnoverVolume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lotSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_LotSize,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, lotSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "changes",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Changes,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, changes),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pclose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Pclose,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, pclose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "currency",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_Currency,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "annualHigh",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_AnnualHigh,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, annualHigh),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "annualLow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_AnnualLow,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, annualLow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryQuote_FieldNumber_PriceBase,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryQuote__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUHistoryQuote class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUHistoryQuote__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\t\016\000\n\007\000\016\n\000\017\t\000\020\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUHistoryQuote_Market_RawValue(OBJECT_SECUHistoryQuote *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryQuote descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryQuote_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUHistoryQuote_Market_RawValue(OBJECT_SECUHistoryQuote *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryQuote descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryQuote_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUHistoryQuote_Currency_RawValue(OBJECT_SECUHistoryQuote *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryQuote descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryQuote_FieldNumber_Currency];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUHistoryQuote_Currency_RawValue(OBJECT_SECUHistoryQuote *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryQuote descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryQuote_FieldNumber_Currency];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUShareInfo

@implementation OBJECT_SECUShareInfo

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic priceBase;
@dynamic limitedShares;
@dynamic eps;
@dynamic netAssetPs;
@dynamic dividend;
@dynamic epsPrediction;
@dynamic marketCap;
@dynamic outstandingCap;
@dynamic lotSize;
@dynamic shares;
@dynamic notHkShares;
@dynamic annoDate;
@dynamic turnoverRate;
@dynamic peStatic;
@dynamic peDyn;
@dynamic peTtm;
@dynamic dividendRadio;
@dynamic pb;
@dynamic netIncomeLtm;
@dynamic netIncomeNs;
@dynamic netIncomeLastYear;
@dynamic netAsset;
@dynamic currUnit;
@dynamic currType;
@dynamic qtLimitedShares;
@dynamic qtCirculatedShare;
@dynamic totalShares;
@dynamic circulatedShare;
@dynamic totalDividend;
@dynamic high52Week;
@dynamic low52Week;
@dynamic closePriceDay;
@dynamic openPrice;
@dynamic closePrice;
@dynamic highPriceLimit;
@dynamic lowPriceLimit;
@dynamic priceLevel;
@dynamic freeShare;
@dynamic highest;
@dynamic lowest;
@dynamic epsTtm;
@dynamic totalRevenues;

typedef struct OBJECT_SECUShareInfo__storage_ {
  uint32_t _has_storage_[2];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  uint32_t priceBase;
  int32_t lotSize;
  int32_t currUnit;
  OBJECT_SECUCurrencyType currType;
  NSString *code;
  int64_t limitedShares;
  int64_t eps;
  int64_t netAssetPs;
  int64_t dividend;
  int64_t epsPrediction;
  int64_t marketCap;
  int64_t outstandingCap;
  int64_t shares;
  int64_t notHkShares;
  int64_t annoDate;
  int64_t turnoverRate;
  int64_t peStatic;
  int64_t peDyn;
  int64_t peTtm;
  int64_t dividendRadio;
  int64_t pb;
  int64_t netIncomeLtm;
  int64_t netIncomeNs;
  int64_t netIncomeLastYear;
  int64_t netAsset;
  int64_t qtLimitedShares;
  int64_t qtCirculatedShare;
  int64_t totalShares;
  int64_t circulatedShare;
  int64_t totalDividend;
  int64_t high52Week;
  int64_t low52Week;
  int64_t closePriceDay;
  int64_t openPrice;
  int64_t closePrice;
  int64_t highPriceLimit;
  int64_t lowPriceLimit;
  int64_t priceLevel;
  int64_t freeShare;
  int64_t highest;
  int64_t lowest;
  int64_t epsTtm;
  int64_t totalRevenues;
} OBJECT_SECUShareInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUShareInfo_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUShareInfo_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_PriceBase,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "limitedShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_LimitedShares,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, limitedShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "eps",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Eps,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, eps),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netAssetPs",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NetAssetPs,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, netAssetPs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "dividend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Dividend,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, dividend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "epsPrediction",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_EpsPrediction,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, epsPrediction),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "marketCap",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_MarketCap,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, marketCap),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "outstandingCap",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_OutstandingCap,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, outstandingCap),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lotSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_LotSize,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, lotSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Shares,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, shares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "notHkShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NotHkShares,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, notHkShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "annoDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_AnnoDate,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, annoDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "turnoverRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_TurnoverRate,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, turnoverRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "peStatic",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_PeStatic,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, peStatic),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "peDyn",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_PeDyn,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, peDyn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "peTtm",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_PeTtm,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, peTtm),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "dividendRadio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_DividendRadio,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, dividendRadio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pb",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Pb,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, pb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netIncomeLtm",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NetIncomeLtm,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, netIncomeLtm),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netIncomeNs",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NetIncomeNs,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, netIncomeNs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netIncomeLastYear",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NetIncomeLastYear,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, netIncomeLastYear),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netAsset",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_NetAsset,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, netAsset),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "currUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_CurrUnit,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, currUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "currType",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUShareInfo_FieldNumber_CurrType,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, currType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "qtLimitedShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_QtLimitedShares,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, qtLimitedShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "qtCirculatedShare",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_QtCirculatedShare,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, qtCirculatedShare),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_TotalShares,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, totalShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "circulatedShare",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_CirculatedShare,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, circulatedShare),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalDividend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_TotalDividend,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, totalDividend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "high52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_High52Week,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, high52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "low52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Low52Week,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, low52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "closePriceDay",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_ClosePriceDay,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, closePriceDay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "openPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_OpenPrice,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, openPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "closePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_ClosePrice,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, closePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "highPriceLimit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_HighPriceLimit,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, highPriceLimit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lowPriceLimit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_LowPriceLimit,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, lowPriceLimit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceLevel",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_PriceLevel,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, priceLevel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "freeShare",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_FreeShare,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, freeShare),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "highest",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Highest,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, highest),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lowest",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_Lowest,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, lowest),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "epsTtm",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_EpsTtm,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, epsTtm),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalRevenues",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUShareInfo_FieldNumber_TotalRevenues,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(OBJECT_SECUShareInfo__storage_, totalRevenues),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUShareInfo class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUShareInfo__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002!\004\202\244\000\"\003\202\244\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUShareInfo_Exchange_RawValue(OBJECT_SECUShareInfo *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUShareInfo_Exchange_RawValue(OBJECT_SECUShareInfo *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUShareInfo_Market_RawValue(OBJECT_SECUShareInfo *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUShareInfo_Market_RawValue(OBJECT_SECUShareInfo *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUShareInfo_CurrType_RawValue(OBJECT_SECUShareInfo *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_CurrType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUShareInfo_CurrType_RawValue(OBJECT_SECUShareInfo *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUShareInfo descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUShareInfo_FieldNumber_CurrType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUEtf

@implementation OBJECT_SECUEtf

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic chsNameAbbr;
@dynamic lotUnit;
@dynamic infoPublDate;
@dynamic unitNv;
@dynamic unitNvCurr;
@dynamic accuUnitNv;
@dynamic accuUnitNvCurr;
@dynamic shareIssued;
@dynamic hkShareIssued;
@dynamic totalAssetNv;
@dynamic totalAssetNvCurr;
@dynamic hkTotalAssetNv;
@dynamic hkTotalAssetNvCurr;
@dynamic premiumDiscount;
@dynamic unitDiviEquAmo;
@dynamic equAmoCurr;
@dynamic unitDiviEquAmoAdded;
@dynamic equAmoCurrAdded;
@dynamic unitBalaCashAmoAdded;
@dynamic balancingCurr;
@dynamic priceBase;
@dynamic lever;
@dynamic currency;
@dynamic assetCategory;

typedef struct OBJECT_SECUEtf__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  int32_t lotUnit;
  int32_t unitNvCurr;
  int32_t accuUnitNvCurr;
  int32_t totalAssetNvCurr;
  int32_t hkTotalAssetNvCurr;
  int32_t equAmoCurr;
  int32_t equAmoCurrAdded;
  int32_t balancingCurr;
  uint32_t priceBase;
  int32_t lever;
  int32_t currency;
  int32_t assetCategory;
  NSString *code;
  NSString *chsNameAbbr;
  int64_t infoPublDate;
  int64_t unitNv;
  int64_t accuUnitNv;
  int64_t shareIssued;
  int64_t hkShareIssued;
  int64_t totalAssetNv;
  int64_t hkTotalAssetNv;
  int64_t premiumDiscount;
  int64_t unitDiviEquAmo;
  int64_t unitDiviEquAmoAdded;
  int64_t unitBalaCashAmoAdded;
} OBJECT_SECUEtf__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUEtf_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUEtf_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_ChsNameAbbr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lotUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_LotUnit,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, lotUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "infoPublDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_InfoPublDate,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, infoPublDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_UnitNv,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, unitNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_UnitNvCurr,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, unitNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "accuUnitNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_AccuUnitNv,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, accuUnitNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "accuUnitNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_AccuUnitNvCurr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, accuUnitNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shareIssued",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_ShareIssued,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, shareIssued),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "hkShareIssued",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_HkShareIssued,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, hkShareIssued),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalAssetNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_TotalAssetNv,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, totalAssetNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalAssetNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_TotalAssetNvCurr,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, totalAssetNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hkTotalAssetNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_HkTotalAssetNv,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, hkTotalAssetNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "hkTotalAssetNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_HkTotalAssetNvCurr,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, hkTotalAssetNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "premiumDiscount",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_PremiumDiscount,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, premiumDiscount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitDiviEquAmo",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_UnitDiviEquAmo,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, unitDiviEquAmo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "equAmoCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_EquAmoCurr,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, equAmoCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unitDiviEquAmoAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_UnitDiviEquAmoAdded,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, unitDiviEquAmoAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "equAmoCurrAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_EquAmoCurrAdded,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, equAmoCurrAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unitBalaCashAmoAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_UnitBalaCashAmoAdded,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, unitBalaCashAmoAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "balancingCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_BalancingCurr,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, balancingCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_PriceBase,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lever",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_Lever,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, lever),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_Currency,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "assetCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtf_FieldNumber_AssetCategory,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtf__storage_, assetCategory),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUEtf class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUEtf__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUEtf_Exchange_RawValue(OBJECT_SECUEtf *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtf descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtf_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtf_Exchange_RawValue(OBJECT_SECUEtf *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtf descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtf_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUEtf_Market_RawValue(OBJECT_SECUEtf *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtf descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtf_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtf_Market_RawValue(OBJECT_SECUEtf *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtf descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtf_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUEtfContent

@implementation OBJECT_SECUEtfContent

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic uniCode;
@dynamic secuChsName;
@dynamic secuEngName;
@dynamic etfChsName;
@dynamic etfEngName;

typedef struct OBJECT_SECUEtfContent__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *uniCode;
  NSString *secuChsName;
  NSString *secuEngName;
  NSString *etfChsName;
  NSString *etfEngName;
} OBJECT_SECUEtfContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUEtfContent_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUEtfContent_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "uniCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_UniCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, uniCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuChsName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_SecuChsName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, secuChsName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuEngName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_SecuEngName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, secuEngName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "etfChsName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_EtfChsName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, etfChsName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "etfEngName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtfContent_FieldNumber_EtfEngName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtfContent__storage_, etfEngName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUEtfContent class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUEtfContent__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUEtfContent_Exchange_RawValue(OBJECT_SECUEtfContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtfContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtfContent_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtfContent_Exchange_RawValue(OBJECT_SECUEtfContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtfContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtfContent_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUEtfContent_Market_RawValue(OBJECT_SECUEtfContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtfContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtfContent_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtfContent_Market_RawValue(OBJECT_SECUEtfContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtfContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtfContent_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIndex

@implementation OBJECT_SECUIndex

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic currency;
@dynamic secuType;
@dynamic pubAgentCode;
@dynamic pubAgentName;
@dynamic orgCode;
@dynamic orgName;
@dynamic weightMethod;
@dynamic indexType;
@dynamic indexSummary;
@dynamic indexPriceType;
@dynamic indexDesignType;
@dynamic indexSimpleChName;
@dynamic indexFullChName;
@dynamic industryStandard;
@dynamic indexEngName;
@dynamic indexEngPinyin;
@dynamic indexSimpleName;
@dynamic indexChPinyin;
@dynamic windIndexCode;
@dynamic basePer;
@dynamic basePt;
@dynamic publisher;
@dynamic weightType;

typedef struct OBJECT_SECUIndex__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  int32_t currency;
  int32_t secuType;
  int32_t pubAgentCode;
  int32_t orgCode;
  int32_t weightMethod;
  int32_t indexType;
  int32_t indexPriceType;
  int32_t indexDesignType;
  int32_t industryStandard;
  int32_t weightType;
  NSString *code;
  NSString *pubAgentName;
  NSString *orgName;
  NSString *indexSummary;
  NSString *indexSimpleChName;
  NSString *indexFullChName;
  NSString *indexEngName;
  NSString *indexEngPinyin;
  NSString *indexSimpleName;
  NSString *indexChPinyin;
  NSString *windIndexCode;
  NSString *publisher;
  int64_t basePer;
  double basePt;
} OBJECT_SECUIndex__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUIndex_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIndex_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_Currency,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "secuType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_SecuType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, secuType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pubAgentCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_PubAgentCode,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, pubAgentCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pubAgentName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_PubAgentName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, pubAgentName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "orgCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_OrgCode,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, orgCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "orgName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_OrgName,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, orgName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weightMethod",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_WeightMethod,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, weightMethod),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "indexType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexType,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "indexSummary",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexSummary,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexSummary),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexPriceType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexPriceType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexPriceType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "indexDesignType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexDesignType,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexDesignType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "indexSimpleChName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexSimpleChName,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexSimpleChName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexFullChName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexFullChName,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexFullChName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "industryStandard",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndustryStandard,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, industryStandard),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "indexEngName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexEngName,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexEngName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexEngPinyin",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexEngPinyin,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexEngPinyin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexSimpleName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexSimpleName,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexSimpleName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexChPinyin",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_IndexChPinyin,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, indexChPinyin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "windIndexCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_WindIndexCode,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, windIndexCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "basePer",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_BasePer,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, basePer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "basePt",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_BasePt,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, basePt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "publisher",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_Publisher,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, publisher),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "weightType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndex_FieldNumber_WeightType,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndex__storage_, weightType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIndex class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIndex__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\005H\000\nL\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIndex_Exchange_RawValue(OBJECT_SECUIndex *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndex descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndex_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndex_Exchange_RawValue(OBJECT_SECUIndex *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndex descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndex_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUIndex_Market_RawValue(OBJECT_SECUIndex *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndex descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndex_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndex_Market_RawValue(OBJECT_SECUIndex *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndex descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndex_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIndexContent

@implementation OBJECT_SECUIndexContent

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic indexUniCode;

typedef struct OBJECT_SECUIndexContent__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *indexUniCode;
} OBJECT_SECUIndexContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUIndexContent_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndexContent__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIndexContent_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndexContent__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndexContent_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndexContent__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "indexUniCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndexContent_FieldNumber_IndexUniCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndexContent__storage_, indexUniCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIndexContent class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIndexContent__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIndexContent_Exchange_RawValue(OBJECT_SECUIndexContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndexContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndexContent_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndexContent_Exchange_RawValue(OBJECT_SECUIndexContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndexContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndexContent_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUIndexContent_Market_RawValue(OBJECT_SECUIndexContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndexContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndexContent_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndexContent_Market_RawValue(OBJECT_SECUIndexContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndexContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndexContent_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIndustry

@implementation OBJECT_SECUIndustry

@dynamic market;
@dynamic securityCode;
@dynamic securityName;
@dynamic companyName;
@dynamic companySimpleName;
@dynamic level;
@dynamic industryCode;
@dynamic industryDesc;
@dynamic yxCode;
@dynamic industryTradDesc;
@dynamic industryEngDesc;

typedef struct OBJECT_SECUIndustry__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  int32_t level;
  NSString *securityCode;
  NSString *securityName;
  NSString *companyName;
  NSString *companySimpleName;
  NSString *industryDesc;
  NSString *yxCode;
  NSString *industryTradDesc;
  NSString *industryEngDesc;
  int64_t industryCode;
} OBJECT_SECUIndustry__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIndustry_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "securityCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_SecurityCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, securityCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "securityName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_SecurityName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, securityName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_CompanyName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, companyName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companySimpleName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_CompanySimpleName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, companySimpleName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_Level,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "industryCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_IndustryCode,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, industryCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "industryDesc",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_IndustryDesc,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, industryDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "yxCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_YxCode,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, yxCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "industryTradDesc",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_IndustryTradDesc,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, industryTradDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "industryEngDesc",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustry_FieldNumber_IndustryEngDesc,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustry__storage_, industryEngDesc),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIndustry class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIndustry__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIndustry_Market_RawValue(OBJECT_SECUIndustry *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustry descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustry_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndustry_Market_RawValue(OBJECT_SECUIndustry *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustry descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustry_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUAH

@implementation OBJECT_SECUAH

@dynamic code;
@dynamic acode;
@dynamic hcode;
@dynamic amarket;
@dynamic hmarket;

typedef struct OBJECT_SECUAH__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId amarket;
  OBJECT_MARKETMarketId hmarket;
  NSString *code;
  NSString *acode;
  NSString *hcode;
} OBJECT_SECUAH__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAH_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUAH__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "acode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAH_FieldNumber_Acode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUAH__storage_, acode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hcode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAH_FieldNumber_Hcode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUAH__storage_, hcode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUAH_FieldNumber_Amarket,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUAH__storage_, amarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "hmarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUAH_FieldNumber_Hmarket,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUAH__storage_, hmarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUAH class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUAH__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUAH_Amarket_RawValue(OBJECT_SECUAH *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAH descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAH_FieldNumber_Amarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAH_Amarket_RawValue(OBJECT_SECUAH *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAH descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAH_FieldNumber_Amarket];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUAH_Hmarket_RawValue(OBJECT_SECUAH *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAH descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAH_FieldNumber_Hmarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAH_Hmarket_RawValue(OBJECT_SECUAH *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAH descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAH_FieldNumber_Hmarket];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIPO

@implementation OBJECT_SECUIPO

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic secuCode;
@dynamic chsNameAbbr;
@dynamic issueType;
@dynamic issueObject;
@dynamic tradingCurrUnit;
@dynamic tradingUnit;
@dynamic listedDate;
@dynamic issuePrice;
@dynamic firstDayClosePrice;
@dynamic priceBase;
@dynamic greyClosePrice;
@dynamic greyChgNet;
@dynamic greyChgPct;
@dynamic winningRate;

typedef struct OBJECT_SECUIPO__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  int32_t issueType;
  int32_t issueObject;
  int32_t tradingCurrUnit;
  int32_t tradingUnit;
  uint32_t priceBase;
  NSString *code;
  NSString *secuCode;
  NSString *chsNameAbbr;
  int64_t listedDate;
  int64_t issuePrice;
  int64_t firstDayClosePrice;
  int64_t greyClosePrice;
  int64_t greyChgNet;
  double greyChgPct;
  double winningRate;
} OBJECT_SECUIPO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUIPO_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIPO_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_SecuCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_ChsNameAbbr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "issueType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_IssueType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, issueType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "issueObject",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_IssueObject,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, issueObject),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tradingCurrUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_TradingCurrUnit,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, tradingCurrUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tradingUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_TradingUnit,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, tradingUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "listedDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_ListedDate,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, listedDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "issuePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_IssuePrice,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, issuePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "firstDayClosePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_FirstDayClosePrice,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, firstDayClosePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_PriceBase,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "greyClosePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_GreyClosePrice,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, greyClosePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "greyChgNet",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_GreyChgNet,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, greyChgNet),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "greyChgPct",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_GreyChgPct,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, greyChgPct),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "winningRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIPO_FieldNumber_WinningRate,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUIPO__storage_, winningRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIPO class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIPO__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\014\005\200\243\245\245\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIPO_Exchange_RawValue(OBJECT_SECUIPO *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIPO descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIPO_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIPO_Exchange_RawValue(OBJECT_SECUIPO *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIPO descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIPO_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUIPO_Market_RawValue(OBJECT_SECUIPO *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIPO descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIPO_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIPO_Market_RawValue(OBJECT_SECUIPO *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIPO descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIPO_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUPreList

@implementation OBJECT_SECUPreList

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic chsNameAbbr;
@dynamic listDate;
@dynamic lotSize;
@dynamic currency;
@dynamic purPriceInterval;
@dynamic admissionFee;
@dynamic issuePrice;
@dynamic priceBase;
@dynamic issueType;

typedef struct OBJECT_SECUPreList__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  int32_t lotSize;
  int32_t currency;
  uint32_t priceBase;
  int32_t issueType;
  NSString *code;
  NSString *chsNameAbbr;
  NSString *purPriceInterval;
  int64_t listDate;
  int64_t admissionFee;
  int64_t issuePrice;
} OBJECT_SECUPreList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUPreList_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUPreList_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_ChsNameAbbr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "listDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_ListDate,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, listDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "lotSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_LotSize,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, lotSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_Currency,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "purPriceInterval",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_PurPriceInterval,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, purPriceInterval),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admissionFee",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_AdmissionFee,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, admissionFee),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "issuePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_IssuePrice,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, issuePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_PriceBase,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "issueType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUPreList_FieldNumber_IssueType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUPreList__storage_, issueType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUPreList class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUPreList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUPreList_Exchange_RawValue(OBJECT_SECUPreList *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUPreList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUPreList_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUPreList_Exchange_RawValue(OBJECT_SECUPreList *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUPreList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUPreList_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUPreList_Market_RawValue(OBJECT_SECUPreList *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUPreList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUPreList_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUPreList_Market_RawValue(OBJECT_SECUPreList *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUPreList descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUPreList_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUFamous

@implementation OBJECT_SECUFamous

@dynamic market;
@dynamic code;
@dynamic chsNameAbbr;
@dynamic secuType;
@dynamic firstClass;
@dynamic secondClass;
@dynamic thirdClass;

typedef struct OBJECT_SECUFamous__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *chsNameAbbr;
  NSString *secuType;
  NSString *firstClass;
  NSString *secondClass;
  NSString *thirdClass;
} OBJECT_SECUFamous__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUFamous_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_ChsNameAbbr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_SecuType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, secuType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_FirstClass,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, firstClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_SecondClass,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, secondClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thirdClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFamous_FieldNumber_ThirdClass,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUFamous__storage_, thirdClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUFamous class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUFamous__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUFamous_Market_RawValue(OBJECT_SECUFamous *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUFamous descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUFamous_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUFamous_Market_RawValue(OBJECT_SECUFamous *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUFamous descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUFamous_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUChinaConcept

@implementation OBJECT_SECUChinaConcept

@dynamic market;
@dynamic code;
@dynamic chsNameAbbr;
@dynamic secuType;
@dynamic firstClass;
@dynamic secondClass;
@dynamic thirdClass;

typedef struct OBJECT_SECUChinaConcept__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *chsNameAbbr;
  NSString *secuType;
  NSString *firstClass;
  NSString *secondClass;
  NSString *thirdClass;
} OBJECT_SECUChinaConcept__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUChinaConcept_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_ChsNameAbbr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuType",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_SecuType,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, secuType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_FirstClass,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, firstClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_SecondClass,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, secondClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "thirdClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUChinaConcept_FieldNumber_ThirdClass,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUChinaConcept__storage_, thirdClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUChinaConcept class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUChinaConcept__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUChinaConcept_Market_RawValue(OBJECT_SECUChinaConcept *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUChinaConcept descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUChinaConcept_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUChinaConcept_Market_RawValue(OBJECT_SECUChinaConcept *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUChinaConcept descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUChinaConcept_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUAdjustFactor

@implementation OBJECT_SECUAdjustFactor

@dynamic market;
@dynamic code;
@dynamic backwardFactor;
@dynamic accumulateFactor;
@dynamic forwardFactor;
@dynamic adjustingFactor;
@dynamic adjustingConst;
@dynamic adjustFactor;
@dynamic adjustConst;
@dynamic radioAdjustingFactor;
@dynamic exDividendDate;

typedef struct OBJECT_SECUAdjustFactor__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  double backwardFactor;
  double accumulateFactor;
  double forwardFactor;
  double adjustingFactor;
  double adjustingConst;
  double adjustFactor;
  double adjustConst;
  double radioAdjustingFactor;
  uint64_t exDividendDate;
} OBJECT_SECUAdjustFactor__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "backwardFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_BackwardFactor,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, backwardFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "accumulateFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_AccumulateFactor,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, accumulateFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "forwardFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_ForwardFactor,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, forwardFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "adjustingFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_AdjustingFactor,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, adjustingFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "adjustingConst",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_AdjustingConst,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, adjustingConst),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "adjustFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_AdjustFactor,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, adjustFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "adjustConst",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_AdjustConst,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, adjustConst),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "radioAdjustingFactor",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_RadioAdjustingFactor,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, radioAdjustingFactor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "exDividendDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdjustFactor_FieldNumber_ExDividendDate,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdjustFactor__storage_, exDividendDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUAdjustFactor class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUAdjustFactor__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUAdjustFactor_Market_RawValue(OBJECT_SECUAdjustFactor *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdjustFactor descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdjustFactor_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAdjustFactor_Market_RawValue(OBJECT_SECUAdjustFactor *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdjustFactor descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdjustFactor_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUConception

@implementation OBJECT_SECUConception

@dynamic market;
@dynamic code;
@dynamic conceptionCode;
@dynamic conceptionName;
@dynamic yxCode;
@dynamic conceptionTradName;
@dynamic conceptionEngName;

typedef struct OBJECT_SECUConception__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *conceptionCode;
  NSString *conceptionName;
  NSString *yxCode;
  NSString *conceptionTradName;
  NSString *conceptionEngName;
} OBJECT_SECUConception__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUConception_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_ConceptionCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, conceptionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_ConceptionName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, conceptionName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "yxCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_YxCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, yxCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionTradName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_ConceptionTradName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, conceptionTradName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionEngName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConception_FieldNumber_ConceptionEngName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUConception__storage_, conceptionEngName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUConception class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUConception__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUConception_Market_RawValue(OBJECT_SECUConception *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUConception descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConception_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUConception_Market_RawValue(OBJECT_SECUConception *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUConception descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConception_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUDealer

@implementation OBJECT_SECUDealer

@dynamic participantId;
@dynamic traditionalFullName;
@dynamic englishFullName;
@dynamic traditionalAbbName;
@dynamic simplifiedAbbName;
@dynamic englishAbbName;

typedef struct OBJECT_SECUDealer__storage_ {
  uint32_t _has_storage_[1];
  NSString *participantId;
  NSString *traditionalFullName;
  NSString *englishFullName;
  NSString *traditionalAbbName;
  NSString *simplifiedAbbName;
  NSString *englishAbbName;
} OBJECT_SECUDealer__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "participantId",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_ParticipantId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, participantId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "traditionalFullName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_TraditionalFullName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, traditionalFullName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "englishFullName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_EnglishFullName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, englishFullName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "traditionalAbbName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_TraditionalAbbName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, traditionalAbbName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "simplifiedAbbName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_SimplifiedAbbName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, simplifiedAbbName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "englishAbbName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDealer_FieldNumber_EnglishAbbName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUDealer__storage_, englishAbbName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUDealer class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUDealer__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_SECUExchangeRate

@implementation OBJECT_SECUExchangeRate

@dynamic currency;
@dynamic unit;
@dynamic buyPrice;
@dynamic buyCurrency;
@dynamic priceBase;
@dynamic updatedAt;

typedef struct OBJECT_SECUExchangeRate__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_SECUCurrencyType currency;
  uint32_t unit;
  uint32_t buyPrice;
  OBJECT_SECUCurrencyType buyCurrency;
  uint32_t priceBase;
  uint64_t updatedAt;
} OBJECT_SECUExchangeRate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "currency",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUExchangeRate_FieldNumber_Currency,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "unit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUExchangeRate_FieldNumber_Unit,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, unit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "buyPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUExchangeRate_FieldNumber_BuyPrice,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, buyPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "buyCurrency",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUExchangeRate_FieldNumber_BuyCurrency,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, buyCurrency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUExchangeRate_FieldNumber_PriceBase,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "updatedAt",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUExchangeRate_FieldNumber_UpdatedAt,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUExchangeRate__storage_, updatedAt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUExchangeRate class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUExchangeRate__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUExchangeRate_Currency_RawValue(OBJECT_SECUExchangeRate *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUExchangeRate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUExchangeRate_FieldNumber_Currency];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUExchangeRate_Currency_RawValue(OBJECT_SECUExchangeRate *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUExchangeRate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUExchangeRate_FieldNumber_Currency];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUExchangeRate_BuyCurrency_RawValue(OBJECT_SECUExchangeRate *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUExchangeRate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUExchangeRate_FieldNumber_BuyCurrency];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUExchangeRate_BuyCurrency_RawValue(OBJECT_SECUExchangeRate *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUExchangeRate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUExchangeRate_FieldNumber_BuyCurrency];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUGreyIPO

@implementation OBJECT_SECUGreyIPO

@dynamic hasId_p, id_p;
@dynamic name;
@dynamic engName;
@dynamic listAt;
@dynamic ipoPrice;
@dynamic priceBase;
@dynamic greyTradeAt;
@dynamic greyFlag;
@dynamic tradeFlag;
@dynamic greyStyle;

typedef struct OBJECT_SECUGreyIPO__storage_ {
  uint32_t _has_storage_[1];
  uint32_t priceBase;
  OBJECT_SECUFullID *id_p;
  NSString *name;
  NSString *engName;
  uint64_t listAt;
  uint64_t ipoPrice;
  uint64_t greyTradeAt;
  uint64_t greyFlag;
  uint64_t tradeFlag;
  uint64_t greyStyle;
} OBJECT_SECUGreyIPO__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUFullID),
        .number = OBJECT_SECUGreyIPO_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "engName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_EngName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, engName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "listAt",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_ListAt,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, listAt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "ipoPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_IpoPrice,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, ipoPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_PriceBase,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "greyTradeAt",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_GreyTradeAt,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, greyTradeAt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "greyFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_GreyFlag,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, greyFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "tradeFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_TradeFlag,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, tradeFlag),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "greyStyle",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUGreyIPO_FieldNumber_GreyStyle,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUGreyIPO__storage_, greyStyle),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUGreyIPO class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUGreyIPO__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_SECUAdr

@implementation OBJECT_SECUAdr

@dynamic exchange;
@dynamic market;
@dynamic adrCode;
@dynamic adrAbbr;
@dynamic adrTradAbbr;
@dynamic adrEngAbbr;
@dynamic code;
@dynamic abbr;
@dynamic tradAbbr;
@dynamic engAbbr;
@dynamic fromMarket;
@dynamic afChange;

typedef struct OBJECT_SECUAdr__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  OBJECT_MARKETMarketId fromMarket;
  NSString *adrCode;
  NSString *adrAbbr;
  NSString *adrTradAbbr;
  NSString *adrEngAbbr;
  NSString *code;
  NSString *abbr;
  NSString *tradAbbr;
  NSString *engAbbr;
  double afChange;
} OBJECT_SECUAdr__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUAdr_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUAdr_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "adrCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_AdrCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, adrCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_AdrAbbr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, adrAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrTradAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_AdrTradAbbr,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, adrTradAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrEngAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_AdrEngAbbr,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, adrEngAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_Code,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "abbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_Abbr,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, abbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tradAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_TradAbbr,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, tradAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "engAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_EngAbbr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, engAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromMarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUAdr_FieldNumber_FromMarket,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, fromMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "afChange",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUAdr_FieldNumber_AfChange,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUAdr__storage_, afChange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUAdr class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUAdr__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUAdr_Exchange_RawValue(OBJECT_SECUAdr *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAdr_Exchange_RawValue(OBJECT_SECUAdr *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUAdr_Market_RawValue(OBJECT_SECUAdr *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAdr_Market_RawValue(OBJECT_SECUAdr *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUAdr_FromMarket_RawValue(OBJECT_SECUAdr *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_FromMarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUAdr_FromMarket_RawValue(OBJECT_SECUAdr *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUAdr_FieldNumber_FromMarket];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIndustryMeta

@implementation OBJECT_SECUIndustryMeta

@dynamic market;
@dynamic securityCode;
@dynamic securityName;
@dynamic companyName;
@dynamic companySimpleName;

typedef struct OBJECT_SECUIndustryMeta__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *securityCode;
  NSString *securityName;
  NSString *companyName;
  NSString *companySimpleName;
} OBJECT_SECUIndustryMeta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIndustryMeta_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryMeta__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "securityCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryMeta_FieldNumber_SecurityCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryMeta__storage_, securityCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "securityName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryMeta_FieldNumber_SecurityName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryMeta__storage_, securityName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companyName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryMeta_FieldNumber_CompanyName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryMeta__storage_, companyName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "companySimpleName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryMeta_FieldNumber_CompanySimpleName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryMeta__storage_, companySimpleName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIndustryMeta class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIndustryMeta__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIndustryMeta_Market_RawValue(OBJECT_SECUIndustryMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustryMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustryMeta_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndustryMeta_Market_RawValue(OBJECT_SECUIndustryMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustryMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustryMeta_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUIndustryContent

@implementation OBJECT_SECUIndustryContent

@dynamic market;
@dynamic industryInnerCode;
@dynamic industryCode;
@dynamic industryName;
@dynamic level;
@dynamic contentsArray, contentsArray_Count;
@dynamic industryNameTrad;
@dynamic industryNameEng;

typedef struct OBJECT_SECUIndustryContent__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  int32_t level;
  NSString *industryInnerCode;
  NSString *industryName;
  NSMutableArray *contentsArray;
  NSString *industryNameTrad;
  NSString *industryNameEng;
  int64_t industryCode;
} OBJECT_SECUIndustryContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUIndustryContent_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "industryInnerCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_IndustryInnerCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, industryInnerCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "industryCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_IndustryCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, industryCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "industryName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_IndustryName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, industryName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_Level,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "contentsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUIndustryMeta),
        .number = OBJECT_SECUIndustryContent_FieldNumber_ContentsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, contentsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "industryNameTrad",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_IndustryNameTrad,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, industryNameTrad),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "industryNameEng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUIndustryContent_FieldNumber_IndustryNameEng,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUIndustryContent__storage_, industryNameEng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUIndustryContent class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUIndustryContent__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUIndustryContent_Market_RawValue(OBJECT_SECUIndustryContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustryContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustryContent_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUIndustryContent_Market_RawValue(OBJECT_SECUIndustryContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUIndustryContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUIndustryContent_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUConceptionMeta

@implementation OBJECT_SECUConceptionMeta

@dynamic market;
@dynamic code;

typedef struct OBJECT_SECUConceptionMeta__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
} OBJECT_SECUConceptionMeta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUConceptionMeta_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionMeta__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConceptionMeta_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionMeta__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUConceptionMeta class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUConceptionMeta__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUConceptionMeta_Market_RawValue(OBJECT_SECUConceptionMeta *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUConceptionMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConceptionMeta_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUConceptionMeta_Market_RawValue(OBJECT_SECUConceptionMeta *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUConceptionMeta descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConceptionMeta_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUConceptionContent

@implementation OBJECT_SECUConceptionContent

@dynamic market;
@dynamic conceptionInnerCode;
@dynamic conceptionCode;
@dynamic conceptionName;
@dynamic contentsArray, contentsArray_Count;

typedef struct OBJECT_SECUConceptionContent__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *conceptionInnerCode;
  NSString *conceptionCode;
  NSString *conceptionName;
  NSMutableArray *contentsArray;
} OBJECT_SECUConceptionContent__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUConceptionContent_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionContent__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "conceptionInnerCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConceptionContent_FieldNumber_ConceptionInnerCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionContent__storage_, conceptionInnerCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConceptionContent_FieldNumber_ConceptionCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionContent__storage_, conceptionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "conceptionName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUConceptionContent_FieldNumber_ConceptionName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionContent__storage_, conceptionName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUConceptionMeta),
        .number = OBJECT_SECUConceptionContent_FieldNumber_ContentsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_SECUConceptionContent__storage_, contentsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUConceptionContent class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUConceptionContent__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUConceptionContent_Market_RawValue(OBJECT_SECUConceptionContent *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUConceptionContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConceptionContent_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUConceptionContent_Market_RawValue(OBJECT_SECUConceptionContent *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUConceptionContent descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUConceptionContent_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUHotAdr

@implementation OBJECT_SECUHotAdr

@dynamic market;
@dynamic code;

typedef struct OBJECT_SECUHotAdr__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
} OBJECT_SECUHotAdr__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUHotAdr_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotAdr__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotAdr_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotAdr__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUHotAdr class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUHotAdr__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUHotAdr_Market_RawValue(OBJECT_SECUHotAdr *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUHotAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHotAdr_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUHotAdr_Market_RawValue(OBJECT_SECUHotAdr *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUHotAdr descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHotAdr_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUOTC

@implementation OBJECT_SECUOTC

@dynamic market;
@dynamic code;
@dynamic supportTrade;

typedef struct OBJECT_SECUOTC__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  int32_t supportTrade;
  NSString *code;
} OBJECT_SECUOTC__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUOTC_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUOTC__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUOTC_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUOTC__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "supportTrade",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUOTC_FieldNumber_SupportTrade,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUOTC__storage_, supportTrade),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUOTC class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUOTC__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUOTC_Market_RawValue(OBJECT_SECUOTC *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUOTC descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUOTC_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUOTC_Market_RawValue(OBJECT_SECUOTC *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUOTC descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUOTC_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUFinancial

@implementation OBJECT_SECUFinancial

@dynamic market;
@dynamic code;
@dynamic date;

typedef struct OBJECT_SECUFinancial__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  int64_t date;
} OBJECT_SECUFinancial__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUFinancial_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUFinancial__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFinancial_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUFinancial__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUFinancial_FieldNumber_Date,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUFinancial__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUFinancial class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUFinancial__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUFinancial_Market_RawValue(OBJECT_SECUFinancial *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUFinancial descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUFinancial_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUFinancial_Market_RawValue(OBJECT_SECUFinancial *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUFinancial descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUFinancial_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUWarrantUnderly

@implementation OBJECT_SECUWarrantUnderly

@dynamic warrantDataArray, warrantDataArray_Count;
@dynamic bullDataArray, bullDataArray_Count;
@dynamic bearDataArray, bearDataArray_Count;

typedef struct OBJECT_SECUWarrantUnderly__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *warrantDataArray;
  NSMutableArray *bullDataArray;
  NSMutableArray *bearDataArray;
} OBJECT_SECUWarrantUnderly__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "warrantDataArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUCharaterData),
        .number = OBJECT_SECUWarrantUnderly_FieldNumber_WarrantDataArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantUnderly__storage_, warrantDataArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "bullDataArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUCharaterData),
        .number = OBJECT_SECUWarrantUnderly_FieldNumber_BullDataArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantUnderly__storage_, bullDataArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "bearDataArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_SECUCharaterData),
        .number = OBJECT_SECUWarrantUnderly_FieldNumber_BearDataArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_SECUWarrantUnderly__storage_, bearDataArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUWarrantUnderly class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUWarrantUnderly__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_SECUCharaterData

@implementation OBJECT_SECUCharaterData

@dynamic market;
@dynamic code;

typedef struct OBJECT_SECUCharaterData__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
} OBJECT_SECUCharaterData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUCharaterData_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUCharaterData__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUCharaterData_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUCharaterData__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUCharaterData class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUCharaterData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUCharaterData_Market_RawValue(OBJECT_SECUCharaterData *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUCharaterData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUCharaterData_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUCharaterData_Market_RawValue(OBJECT_SECUCharaterData *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUCharaterData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUCharaterData_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUStar

@implementation OBJECT_SECUStar

@dynamic market;
@dynamic code;
@dynamic simpleName;
@dynamic tradName;
@dynamic engName;

typedef struct OBJECT_SECUStar__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  NSString *simpleName;
  NSString *tradName;
  NSString *engName;
} OBJECT_SECUStar__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUStar_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUStar__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUStar_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUStar__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "simpleName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUStar_FieldNumber_SimpleName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUStar__storage_, simpleName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tradName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUStar_FieldNumber_TradName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUStar__storage_, tradName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "engName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUStar_FieldNumber_EngName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUStar__storage_, engName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUStar class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUStar__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUStar_Market_RawValue(OBJECT_SECUStar *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUStar descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUStar_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUStar_Market_RawValue(OBJECT_SECUStar *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUStar descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUStar_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUHotETF

@implementation OBJECT_SECUHotETF

@dynamic market;
@dynamic code;
@dynamic firstClass;
@dynamic secondClass;
@dynamic firstName;
@dynamic firstNameTr;
@dynamic firstNameEng;
@dynamic secondName;
@dynamic secondNameTr;
@dynamic secondNameEng;
@dynamic firstWeight;
@dynamic secondWeight;

typedef struct OBJECT_SECUHotETF__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  int32_t firstWeight;
  int32_t secondWeight;
  NSString *code;
  NSString *firstClass;
  NSString *secondClass;
  NSString *firstName;
  NSString *firstNameTr;
  NSString *firstNameEng;
  NSString *secondName;
  NSString *secondNameTr;
  NSString *secondNameEng;
} OBJECT_SECUHotETF__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUHotETF_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_FirstClass,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, firstClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondClass",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_SecondClass,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, secondClass),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_FirstName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, firstName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstNameTr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_FirstNameTr,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, firstNameTr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstNameEng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_FirstNameEng,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, firstNameEng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_SecondName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, secondName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondNameTr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_SecondNameTr,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, secondNameTr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secondNameEng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_SecondNameEng,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, secondNameEng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "firstWeight",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_FirstWeight,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, firstWeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "secondWeight",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHotETF_FieldNumber_SecondWeight,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUHotETF__storage_, secondWeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUHotETF class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUHotETF__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUHotETF_Market_RawValue(OBJECT_SECUHotETF *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUHotETF descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHotETF_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUHotETF_Market_RawValue(OBJECT_SECUHotETF *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUHotETF descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHotETF_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUHistoryClose

@implementation OBJECT_SECUHistoryClose

@dynamic close;
@dynamic tradingDay;
@dynamic dayType;

typedef struct OBJECT_SECUHistoryClose__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_SECUDayType dayType;
  int64_t close;
  uint64_t tradingDay;
} OBJECT_SECUHistoryClose__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "close",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryClose_FieldNumber_Close,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryClose__storage_, close),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "tradingDay",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHistoryClose_FieldNumber_TradingDay,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryClose__storage_, tradingDay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "dayType",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUDayType_EnumDescriptor,
        .number = OBJECT_SECUHistoryClose_FieldNumber_DayType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUHistoryClose__storage_, dayType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUHistoryClose class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUHistoryClose__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUHistoryClose_DayType_RawValue(OBJECT_SECUHistoryClose *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryClose descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryClose_FieldNumber_DayType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUHistoryClose_DayType_RawValue(OBJECT_SECUHistoryClose *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUHistoryClose descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUHistoryClose_FieldNumber_DayType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUMargin

@implementation OBJECT_SECUMargin

@dynamic market;
@dynamic code;
@dynamic mortgageRadio;

typedef struct OBJECT_SECUMargin__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  double mortgageRadio;
} OBJECT_SECUMargin__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUMargin_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUMargin__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMargin_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUMargin__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mortgageRadio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMargin_FieldNumber_MortgageRadio,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUMargin__storage_, mortgageRadio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUMargin class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUMargin__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUMargin_Market_RawValue(OBJECT_SECUMargin *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUMargin descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUMargin_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUMargin_Market_RawValue(OBJECT_SECUMargin *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUMargin descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUMargin_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECURiNeiRong

@implementation OBJECT_SECURiNeiRong

@dynamic market;
@dynamic code;
@dynamic gearing;

typedef struct OBJECT_SECURiNeiRong__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *code;
  double gearing;
} OBJECT_SECURiNeiRong__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECURiNeiRong_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECURiNeiRong__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECURiNeiRong_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECURiNeiRong__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gearing",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECURiNeiRong_FieldNumber_Gearing,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECURiNeiRong__storage_, gearing),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECURiNeiRong class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECURiNeiRong__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECURiNeiRong_Market_RawValue(OBJECT_SECURiNeiRong *message) {
  GPBDescriptor *descriptor = [OBJECT_SECURiNeiRong descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECURiNeiRong_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECURiNeiRong_Market_RawValue(OBJECT_SECURiNeiRong *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECURiNeiRong descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECURiNeiRong_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUUS2HKRelation

@implementation OBJECT_SECUUS2HKRelation

@dynamic hkCode;
@dynamic hkAbbr;
@dynamic hkTrad;
@dynamic hkEng;
@dynamic usCode;
@dynamic usAbbr;
@dynamic usTrad;
@dynamic usEng;
@dynamic hkMarket;
@dynamic usMarket;

typedef struct OBJECT_SECUUS2HKRelation__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId hkMarket;
  OBJECT_MARKETMarketId usMarket;
  NSString *hkCode;
  NSString *hkAbbr;
  NSString *hkTrad;
  NSString *hkEng;
  NSString *usCode;
  NSString *usAbbr;
  NSString *usTrad;
  NSString *usEng;
} OBJECT_SECUUS2HKRelation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hkCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_HkCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, hkCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hkAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_HkAbbr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, hkAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hkTrad",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_HkTrad,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, hkTrad),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hkEng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_HkEng,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, hkEng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_UsCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, usCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_UsAbbr,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, usAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usTrad",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_UsTrad,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, usTrad),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usEng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_UsEng,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, usEng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hkMarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_HkMarket,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, hkMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "usMarket",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUUS2HKRelation_FieldNumber_UsMarket,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUUS2HKRelation__storage_, usMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUUS2HKRelation class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUUS2HKRelation__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUUS2HKRelation_HkMarket_RawValue(OBJECT_SECUUS2HKRelation *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUUS2HKRelation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUUS2HKRelation_FieldNumber_HkMarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUUS2HKRelation_HkMarket_RawValue(OBJECT_SECUUS2HKRelation *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUUS2HKRelation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUUS2HKRelation_FieldNumber_HkMarket];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUUS2HKRelation_UsMarket_RawValue(OBJECT_SECUUS2HKRelation *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUUS2HKRelation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUUS2HKRelation_FieldNumber_UsMarket];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUUS2HKRelation_UsMarket_RawValue(OBJECT_SECUUS2HKRelation *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUUS2HKRelation descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUUS2HKRelation_FieldNumber_UsMarket];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUHKTemp

@implementation OBJECT_SECUHKTemp

@dynamic code;
@dynamic tempCode;

typedef struct OBJECT_SECUHKTemp__storage_ {
  uint32_t _has_storage_[1];
  NSString *code;
  NSString *tempCode;
} OBJECT_SECUHKTemp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHKTemp_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUHKTemp__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tempCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUHKTemp_FieldNumber_TempCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUHKTemp__storage_, tempCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUHKTemp class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUHKTemp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_SECUMonthlyStock

@implementation OBJECT_SECUMonthlyStock

@dynamic market;
@dynamic planCode;
@dynamic stockCode;
@dynamic stockName;
@dynamic planNum;

typedef struct OBJECT_SECUMonthlyStock__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  int32_t planNum;
  NSString *planCode;
  NSString *stockCode;
  NSString *stockName;
} OBJECT_SECUMonthlyStock__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUMonthlyStock_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUMonthlyStock__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "planCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMonthlyStock_FieldNumber_PlanCode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUMonthlyStock__storage_, planCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "stockCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMonthlyStock_FieldNumber_StockCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUMonthlyStock__storage_, stockCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "stockName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMonthlyStock_FieldNumber_StockName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUMonthlyStock__storage_, stockName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "planNum",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUMonthlyStock_FieldNumber_PlanNum,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUMonthlyStock__storage_, planNum),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUMonthlyStock class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUMonthlyStock__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\002H\000\003I\000\004I\000\005G\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUMonthlyStock_Market_RawValue(OBJECT_SECUMonthlyStock *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUMonthlyStock descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUMonthlyStock_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUMonthlyStock_Market_RawValue(OBJECT_SECUMonthlyStock *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUMonthlyStock descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUMonthlyStock_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUEtn

@implementation OBJECT_SECUEtn

@dynamic exchange;
@dynamic market;
@dynamic code;
@dynamic chsNameAbbr;
@dynamic lotUnit;
@dynamic infoPublDate;
@dynamic unitNv;
@dynamic unitNvCurr;
@dynamic accuUnitNv;
@dynamic accuUnitNvCurr;
@dynamic shareIssued;
@dynamic hkShareIssued;
@dynamic totalAssetNv;
@dynamic totalAssetNvCurr;
@dynamic hkTotalAssetNv;
@dynamic hkTotalAssetNvCurr;
@dynamic premiumDiscount;
@dynamic unitDiviEquAmo;
@dynamic equAmoCurr;
@dynamic unitDiviEquAmoAdded;
@dynamic equAmoCurrAdded;
@dynamic unitBalaCashAmoAdded;
@dynamic balancingCurr;
@dynamic priceBase;
@dynamic lever;
@dynamic currency;
@dynamic assetCategory;

typedef struct OBJECT_SECUEtn__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETExchange exchange;
  OBJECT_MARKETMarketId market;
  int32_t lotUnit;
  int32_t unitNvCurr;
  int32_t accuUnitNvCurr;
  int32_t totalAssetNvCurr;
  int32_t hkTotalAssetNvCurr;
  int32_t equAmoCurr;
  int32_t equAmoCurrAdded;
  int32_t balancingCurr;
  uint32_t priceBase;
  int32_t lever;
  int32_t currency;
  int32_t assetCategory;
  NSString *code;
  NSString *chsNameAbbr;
  int64_t infoPublDate;
  int64_t unitNv;
  int64_t accuUnitNv;
  int64_t shareIssued;
  int64_t hkShareIssued;
  int64_t totalAssetNv;
  int64_t hkTotalAssetNv;
  int64_t premiumDiscount;
  int64_t unitDiviEquAmo;
  int64_t unitDiviEquAmoAdded;
  int64_t unitBalaCashAmoAdded;
} OBJECT_SECUEtn__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "exchange",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETExchange_EnumDescriptor,
        .number = OBJECT_SECUEtn_FieldNumber_Exchange,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, exchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUEtn_FieldNumber_Market,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_Code,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_ChsNameAbbr,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lotUnit",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_LotUnit,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, lotUnit),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "infoPublDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_InfoPublDate,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, infoPublDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_UnitNv,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, unitNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_UnitNvCurr,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, unitNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "accuUnitNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_AccuUnitNv,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, accuUnitNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "accuUnitNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_AccuUnitNvCurr,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, accuUnitNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "shareIssued",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_ShareIssued,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, shareIssued),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "hkShareIssued",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_HkShareIssued,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, hkShareIssued),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalAssetNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_TotalAssetNv,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, totalAssetNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "totalAssetNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_TotalAssetNvCurr,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, totalAssetNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "hkTotalAssetNv",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_HkTotalAssetNv,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, hkTotalAssetNv),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "hkTotalAssetNvCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_HkTotalAssetNvCurr,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, hkTotalAssetNvCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "premiumDiscount",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_PremiumDiscount,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, premiumDiscount),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "unitDiviEquAmo",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_UnitDiviEquAmo,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, unitDiviEquAmo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "equAmoCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_EquAmoCurr,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, equAmoCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unitDiviEquAmoAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_UnitDiviEquAmoAdded,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, unitDiviEquAmoAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "equAmoCurrAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_EquAmoCurrAdded,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, equAmoCurrAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unitBalaCashAmoAdded",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_UnitBalaCashAmoAdded,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, unitBalaCashAmoAdded),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "balancingCurr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_BalancingCurr,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, balancingCurr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_PriceBase,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "lever",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_Lever,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, lever),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_Currency,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "assetCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUEtn_FieldNumber_AssetCategory,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_SECUEtn__storage_, assetCategory),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUEtn class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUEtn__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUEtn_Exchange_RawValue(OBJECT_SECUEtn *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtn descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtn_FieldNumber_Exchange];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtn_Exchange_RawValue(OBJECT_SECUEtn *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtn descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtn_FieldNumber_Exchange];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUEtn_Market_RawValue(OBJECT_SECUEtn *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtn descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtn_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUEtn_Market_RawValue(OBJECT_SECUEtn *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUEtn descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUEtn_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUReits

@implementation OBJECT_SECUReits

@dynamic market;
@dynamic symbol;
@dynamic secuCode;

typedef struct OBJECT_SECUReits__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSString *symbol;
  NSString *secuCode;
} OBJECT_SECUReits__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUReits_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUReits__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "symbol",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUReits_FieldNumber_Symbol,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUReits__storage_, symbol),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUReits_FieldNumber_SecuCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUReits__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUReits class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUReits__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUReits_Market_RawValue(OBJECT_SECUReits *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUReits descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUReits_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUReits_Market_RawValue(OBJECT_SECUReits *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUReits descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUReits_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_SECUDLCS

@implementation OBJECT_SECUDLCS

@dynamic market;
@dynamic symbol;
@dynamic secuCode;
@dynamic currency;
@dynamic maturityDate;

typedef struct OBJECT_SECUDLCS__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  OBJECT_SECUCurrencyType currency;
  NSString *symbol;
  NSString *secuCode;
  NSString *maturityDate;
} OBJECT_SECUDLCS__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_SECUDLCS_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_SECUDLCS__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "symbol",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDLCS_FieldNumber_Symbol,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_SECUDLCS__storage_, symbol),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDLCS_FieldNumber_SecuCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_SECUDLCS__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currency",
        .dataTypeSpecific.enumDescFunc = OBJECT_SECUCurrencyType_EnumDescriptor,
        .number = OBJECT_SECUDLCS_FieldNumber_Currency,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_SECUDLCS__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "maturityDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_SECUDLCS_FieldNumber_MaturityDate,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_SECUDLCS__storage_, maturityDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_SECUDLCS class]
                                     rootClass:[OBJECT_SECUMetaRoot class]
                                          file:OBJECT_SECUMetaRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_SECUDLCS__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_SECUDLCS_Market_RawValue(OBJECT_SECUDLCS *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUDLCS descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUDLCS_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUDLCS_Market_RawValue(OBJECT_SECUDLCS *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUDLCS descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUDLCS_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_SECUDLCS_Currency_RawValue(OBJECT_SECUDLCS *message) {
  GPBDescriptor *descriptor = [OBJECT_SECUDLCS descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUDLCS_FieldNumber_Currency];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_SECUDLCS_Currency_RawValue(OBJECT_SECUDLCS *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_SECUDLCS descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_SECUDLCS_FieldNumber_Currency];
  GPBSetMessageRawEnumField(message, field, value);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
