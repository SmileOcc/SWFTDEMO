// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rank.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class OBJECT_QUOTERankReq;
@class OBJECT_QUOTERankReqV2;
@class OBJECT_QUOTERankRespList;
@class OBJECT_QUOTERankRespListV2;
@class OBJECT_QUOTERankSectorGatherResp;
@class OBJECT_QUOTERankSectorGatherRespV2;
@class OBJECT_QUOTERankSectorResp;
@class OBJECT_QUOTERankSectorRespData;
@class OBJECT_QUOTERankSectorRespDataV2;
@class OBJECT_QUOTERankSectorRespV2;
@class OBJECT_QUOTERankStockGatherResp;
@class OBJECT_QUOTERankStockGatherRespV2;
@class OBJECT_QUOTERankStockResp;
@class OBJECT_QUOTERankStockRespData;
@class OBJECT_QUOTERankStockRespDataV2;
@class OBJECT_QUOTERankStockRespV2;
@class OBJECT_QUOTESectorData;
@class OBJECT_QUOTESectorHistoryData;
@class OBJECT_QUOTEStockData;
@class OBJECT_QUOTEStockHistoryData;
GPB_ENUM_FWD_DECLARE(COMMONLangType);
GPB_ENUM_FWD_DECLARE(COMMONPageDirection);
GPB_ENUM_FWD_DECLARE(COMMONSortDirection);
GPB_ENUM_FWD_DECLARE(OBJECT_MARKETMarketId);
GPB_ENUM_FWD_DECLARE(OBJECT_QUOTEQuoteType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum OBJECT_QUOTERankSortType

/** 排序字段 */
typedef GPB_ENUM(OBJECT_QUOTERankSortType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_QUOTERankSortType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_QUOTERankSortType_RstNone = 0,

  /** 涨跌幅 */
  OBJECT_QUOTERankSortType_RstChangePct = 1,

  /** 最新价 */
  OBJECT_QUOTERankSortType_RstNow = 2,

  /** 昨收价 */
  OBJECT_QUOTERankSortType_RstPclose = 3,

  /** 成交数量 */
  OBJECT_QUOTERankSortType_RstVolume = 4,

  /** 成交金额 */
  OBJECT_QUOTERankSortType_RstAmount = 5,

  /** 今开价 */
  OBJECT_QUOTERankSortType_RstOpen = 6,

  /** 最高价 */
  OBJECT_QUOTERankSortType_RstHigh = 7,

  /** 最低价 */
  OBJECT_QUOTERankSortType_RstLow = 8,

  /** 代码 */
  OBJECT_QUOTERankSortType_RstCode = 9,

  /** 换手率 */
  OBJECT_QUOTERankSortType_RstTurnover = 10,

  /** 市盈率 */
  OBJECT_QUOTERankSortType_RstPe = 11,

  /** 涨跌值 */
  OBJECT_QUOTERankSortType_RstChange = 12,

  /** 用户关注度，只用于指数 */
  OBJECT_QUOTERankSortType_RstFav = 13,

  /** 振幅 */
  OBJECT_QUOTERankSortType_RstAmplitude = 14,

  /** 5分钟涨速 */
  OBJECT_QUOTERankSortType_RstAccer5Min = 15,

  /** 资金净流入 */
  OBJECT_QUOTERankSortType_RstNetInflow = 16,

  /** 指数或者板块贡献 */
  OBJECT_QUOTERankSortType_RstContribution = 17,

  /** 溢价率，只用于AH */
  OBJECT_QUOTERankSortType_RstPremium = 18,

  /** 到期时间，涡轮、牛熊证 */
  OBJECT_QUOTERankSortType_RstMarturityDate = 19,

  /** 股票流通市值 */
  OBJECT_QUOTERankSortType_RstShareValue = 20,
  OBJECT_QUOTERankSortType_RstPb = 21,

  /** 新股排序指标 */
  OBJECT_QUOTERankSortType_RstListDate = 22,

  /** 发行价 */
  OBJECT_QUOTERankSortType_RstIssuePrice = 23,

  /** 上市天数 */
  OBJECT_QUOTERankSortType_RstListDays = 24,

  /** 上市日收盘价 */
  OBJECT_QUOTERankSortType_RstIpoDayClose = 25,

  /** 上市日涨跌幅 */
  OBJECT_QUOTERankSortType_RstIpoDayChangePct = 26,

  /** 累计涨跌幅 */
  OBJECT_QUOTERankSortType_RstAccuChangePct = 27,

  /** 暗盘涨跌幅 */
  OBJECT_QUOTERankSortType_RstGreyChgPct = 28,

  /** 一手中签率 */
  OBJECT_QUOTERankSortType_RstWinningRate = 29,

  /** 量比 */
  OBJECT_QUOTERankSortType_RstVolRatio = 40,

  /** 以下为AH中按A股排序 */
  OBJECT_QUOTERankSortType_RstChangePctAhA = 50,

  /** 最新价 */
  OBJECT_QUOTERankSortType_RstNowAhA = 51,

  /** 代码 */
  OBJECT_QUOTERankSortType_RstCodeAhA = 52,

  /** 涨跌值 */
  OBJECT_QUOTERankSortType_RstChangeAhA = 53,

  /** 3分钟涨速 */
  OBJECT_QUOTERankSortType_RstAccer3Min = 60,

  /** 股息率 */
  OBJECT_QUOTERankSortType_RstDividendYield = 61,

  /** 主力净流入 */
  OBJECT_QUOTERankSortType_RstMainNetin = 62,

  /** 资金流入 */
  OBJECT_QUOTERankSortType_RstInFlow = 63,

  /** 资金流出 */
  OBJECT_QUOTERankSortType_RstOutFlow = 64,

  /** 融资比例 */
  OBJECT_QUOTERankSortType_RstMargin = 65,

  /** 保证金 */
  OBJECT_QUOTERankSortType_RstBail = 66,
  OBJECT_QUOTERankSortType_Rst5DayChgPct = 67,
  OBJECT_QUOTERankSortType_Rst10DayChgPct = 68,
  OBJECT_QUOTERankSortType_Rst30DayChgPct = 69,
  OBJECT_QUOTERankSortType_Rst60DayChgPct = 70,
  OBJECT_QUOTERankSortType_Rst120DayChgPct = 71,
  OBJECT_QUOTERankSortType_Rst250DayChgPct = 72,
  OBJECT_QUOTERankSortType_Rst1YearChgPct = 73,
  OBJECT_QUOTERankSortType_RstGearingRatio = 74,

  /** 月供人数 */
  OBJECT_QUOTERankSortType_RstMonthPlanUserNum = 75,
  OBJECT_QUOTERankSortType_RstLastweekChgPct = 76,
};

GPBEnumDescriptor *OBJECT_QUOTERankSortType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_QUOTERankSortType_IsValidValue(int32_t value);

#pragma mark - OBJECT_QUOTERankRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface OBJECT_QUOTERankRoot : GPBRootObject
@end

#pragma mark - OBJECT_QUOTERankReq

typedef GPB_ENUM(OBJECT_QUOTERankReq_FieldNumber) {
  OBJECT_QUOTERankReq_FieldNumber_Sorttype = 1,
  OBJECT_QUOTERankReq_FieldNumber_Sortdirection = 2,
  OBJECT_QUOTERankReq_FieldNumber_Pagedirection = 3,
  OBJECT_QUOTERankReq_FieldNumber_From = 4,
  OBJECT_QUOTERankReq_FieldNumber_Count = 5,
  OBJECT_QUOTERankReq_FieldNumber_Code = 6,
  OBJECT_QUOTERankReq_FieldNumber_Market = 7,
  OBJECT_QUOTERankReq_FieldNumber_Lang = 8,
  OBJECT_QUOTERankReq_FieldNumber_Level = 9,
};

GPB_FINAL @interface OBJECT_QUOTERankReq : GPBMessage

@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sorttype;

@property(nonatomic, readwrite) int32_t sortdirection;

@property(nonatomic, readwrite) int32_t pagedirection;

@property(nonatomic, readwrite) int32_t from;

@property(nonatomic, readwrite) uint64_t count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *market;

@property(nonatomic, readwrite) int32_t lang;

@property(nonatomic, readwrite) int32_t level;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankReq's @c sorttype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankReq_Sorttype_RawValue(OBJECT_QUOTERankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankReq's @c sorttype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankReq_Sorttype_RawValue(OBJECT_QUOTERankReq *message, int32_t value);

#pragma mark - OBJECT_QUOTEMultipleRankReq

typedef GPB_ENUM(OBJECT_QUOTEMultipleRankReq_FieldNumber) {
  OBJECT_QUOTEMultipleRankReq_FieldNumber_CodelistArray = 1,
};

GPB_FINAL @interface OBJECT_QUOTEMultipleRankReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankReq*> *codelistArray;
/** The number of items in @c codelistArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger codelistArray_Count;

@end

#pragma mark - OBJECT_QUOTEMultipleRankResp

typedef GPB_ENUM(OBJECT_QUOTEMultipleRankResp_FieldNumber) {
  OBJECT_QUOTEMultipleRankResp_FieldNumber_Code = 1,
  OBJECT_QUOTEMultipleRankResp_FieldNumber_Msg = 2,
  OBJECT_QUOTEMultipleRankResp_FieldNumber_Data_p = 3,
};

GPB_FINAL @interface OBJECT_QUOTEMultipleRankResp : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankRespList *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankRespList

typedef GPB_ENUM(OBJECT_QUOTERankRespList_FieldNumber) {
  OBJECT_QUOTERankRespList_FieldNumber_StockListArray = 1,
  OBJECT_QUOTERankRespList_FieldNumber_SectorListArray = 2,
};

GPB_FINAL @interface OBJECT_QUOTERankRespList : GPBMessage

/** 股票 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankStockGatherResp*> *stockListArray;
/** The number of items in @c stockListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stockListArray_Count;

/** 板块 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankSectorGatherResp*> *sectorListArray;
/** The number of items in @c sectorListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sectorListArray_Count;

@end

#pragma mark - OBJECT_QUOTERankStockGatherResp

typedef GPB_ENUM(OBJECT_QUOTERankStockGatherResp_FieldNumber) {
  OBJECT_QUOTERankStockGatherResp_FieldNumber_Code = 1,
  OBJECT_QUOTERankStockGatherResp_FieldNumber_Msg = 2,
  OBJECT_QUOTERankStockGatherResp_FieldNumber_Level = 3,
  OBJECT_QUOTERankStockGatherResp_FieldNumber_Data_p = 4,
};

GPB_FINAL @interface OBJECT_QUOTERankStockGatherResp : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankStockRespData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankStockRespData

typedef GPB_ENUM(OBJECT_QUOTERankStockRespData_FieldNumber) {
  OBJECT_QUOTERankStockRespData_FieldNumber_From = 1,
  OBJECT_QUOTERankStockRespData_FieldNumber_Count = 2,
  OBJECT_QUOTERankStockRespData_FieldNumber_Total = 3,
  OBJECT_QUOTERankStockRespData_FieldNumber_Rise = 4,
  OBJECT_QUOTERankStockRespData_FieldNumber_Draw = 5,
  OBJECT_QUOTERankStockRespData_FieldNumber_Fall = 6,
  OBJECT_QUOTERankStockRespData_FieldNumber_LimitUp = 7,
  OBJECT_QUOTERankStockRespData_FieldNumber_LimitDown = 8,
  OBJECT_QUOTERankStockRespData_FieldNumber_Suspend = 9,
  OBJECT_QUOTERankStockRespData_FieldNumber_DetailArray = 10,
  OBJECT_QUOTERankStockRespData_FieldNumber_RankCode = 11,
  OBJECT_QUOTERankStockRespData_FieldNumber_RankMarket = 12,
  OBJECT_QUOTERankStockRespData_FieldNumber_Sorttype = 13,
  OBJECT_QUOTERankStockRespData_FieldNumber_Sortdirection = 14,
  OBJECT_QUOTERankStockRespData_FieldNumber_Pagedirection = 15,
  OBJECT_QUOTERankStockRespData_FieldNumber_ListArray = 16,
};

GPB_FINAL @interface OBJECT_QUOTERankStockRespData : GPBMessage

/** 请求的起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 当前返回的结果集（list）数量 */
@property(nonatomic, readwrite) uint64_t count;

/** 总数 */
@property(nonatomic, readwrite) uint64_t total;

/** 涨家数 */
@property(nonatomic, readwrite) int32_t rise;

/** 平家数 */
@property(nonatomic, readwrite) int32_t draw;

/** 跌家数 */
@property(nonatomic, readwrite) int32_t fall;

/** 涨停数 */
@property(nonatomic, readwrite) int32_t limitUp;

/** 涨跌数 */
@property(nonatomic, readwrite) int32_t limitDown;

/** 停牌数 */
@property(nonatomic, readwrite) int32_t suspend;

/** 市场总览 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *detailArray;
/** The number of items in @c detailArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detailArray_Count;

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankCode;

/** 请求的市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankMarket;

/** 请求的排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sorttype;

/** 请求的排序方向 */
@property(nonatomic, readwrite) int32_t sortdirection;

/** 请求的翻页方向 */
@property(nonatomic, readwrite) int32_t pagedirection;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankStockResp*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankStockRespData's @c sorttype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankStockRespData_Sorttype_RawValue(OBJECT_QUOTERankStockRespData *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankStockRespData's @c sorttype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankStockRespData_Sorttype_RawValue(OBJECT_QUOTERankStockRespData *message, int32_t value);

#pragma mark - OBJECT_QUOTERankStockResp

typedef GPB_ENUM(OBJECT_QUOTERankStockResp_FieldNumber) {
  OBJECT_QUOTERankStockResp_FieldNumber_SecuCode = 1,
  OBJECT_QUOTERankStockResp_FieldNumber_ChsNameAbbr = 2,
  OBJECT_QUOTERankStockResp_FieldNumber_TrdMarket = 3,
  OBJECT_QUOTERankStockResp_FieldNumber_PriceBase = 4,
  OBJECT_QUOTERankStockResp_FieldNumber_QuoteTime = 5,
  OBJECT_QUOTERankStockResp_FieldNumber_QuoteType = 6,
  OBJECT_QUOTERankStockResp_FieldNumber_PrevClose = 7,
  OBJECT_QUOTERankStockResp_FieldNumber_OpenPrice = 8,
  OBJECT_QUOTERankStockResp_FieldNumber_LatestPrice = 9,
  OBJECT_QUOTERankStockResp_FieldNumber_HighPrice = 10,
  OBJECT_QUOTERankStockResp_FieldNumber_LowPrice = 11,
  OBJECT_QUOTERankStockResp_FieldNumber_ClosePrice = 12,
  OBJECT_QUOTERankStockResp_FieldNumber_AvgPrice = 13,
  OBJECT_QUOTERankStockResp_FieldNumber_Netchng = 14,
  OBJECT_QUOTERankStockResp_FieldNumber_Pctchng = 15,
  OBJECT_QUOTERankStockResp_FieldNumber_Volume = 16,
  OBJECT_QUOTERankStockResp_FieldNumber_Trunover = 17,
  OBJECT_QUOTERankStockResp_FieldNumber_OutstandingShares = 18,
  OBJECT_QUOTERankStockResp_FieldNumber_OutstandingCap = 19,
  OBJECT_QUOTERankStockResp_FieldNumber_TotalStockissue = 20,
  OBJECT_QUOTERankStockResp_FieldNumber_TotalMarcketvalue = 21,
  OBJECT_QUOTERankStockResp_FieldNumber_Inner = 22,
  OBJECT_QUOTERankStockResp_FieldNumber_Outer = 23,
  OBJECT_QUOTERankStockResp_FieldNumber_PeStatic = 24,
  OBJECT_QUOTERankStockResp_FieldNumber_PeTtm = 25,
  OBJECT_QUOTERankStockResp_FieldNumber_Pb = 26,
  OBJECT_QUOTERankStockResp_FieldNumber_TurnoverRate = 27,
  OBJECT_QUOTERankStockResp_FieldNumber_Amplitude = 28,
  OBJECT_QUOTERankStockResp_FieldNumber_VolRatio = 29,
  OBJECT_QUOTERankStockResp_FieldNumber_Ipoflag = 30,
  OBJECT_QUOTERankStockResp_FieldNumber_ListDate = 31,
  OBJECT_QUOTERankStockResp_FieldNumber_ListDays = 32,
  OBJECT_QUOTERankStockResp_FieldNumber_IssuePrice = 33,
  OBJECT_QUOTERankStockResp_FieldNumber_IpoDayPctchng = 34,
  OBJECT_QUOTERankStockResp_FieldNumber_IpoDayClose = 35,
  OBJECT_QUOTERankStockResp_FieldNumber_AccuPctchng = 36,
  OBJECT_QUOTERankStockResp_FieldNumber_TradingStatus = 37,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrCode = 38,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrMarket = 39,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrExchangePrice = 40,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrPctchng = 41,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrPriceSpread = 42,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrPriceSpreadRate = 43,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrName = 44,
  OBJECT_QUOTERankStockResp_FieldNumber_AdrDisplay = 45,
};

GPB_FINAL @interface OBJECT_QUOTERankStockResp : GPBMessage

/** 代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *secuCode;

/** 名字简称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chsNameAbbr;

/** 市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trdMarket;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

/** 行情时间 */
@property(nonatomic, readwrite) uint64_t quoteTime;

/** 类型 */
@property(nonatomic, readwrite) enum OBJECT_QUOTEQuoteType quoteType;

/** 昨收价 */
@property(nonatomic, readwrite) uint64_t prevClose;

/** 开盘价 */
@property(nonatomic, readwrite) uint64_t openPrice;

/** 最新价 */
@property(nonatomic, readwrite) uint64_t latestPrice;

/** 最高价 */
@property(nonatomic, readwrite) uint64_t highPrice;

/** 最低价 */
@property(nonatomic, readwrite) uint64_t lowPrice;

/** 收盘价 */
@property(nonatomic, readwrite) uint64_t closePrice;

/** 均价 */
@property(nonatomic, readwrite) uint64_t avgPrice;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t netchng;

/** 涨跌幅 */
@property(nonatomic, readwrite) int64_t pctchng;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 成交额 */
@property(nonatomic, readwrite) uint64_t trunover;

/** 流通股本 */
@property(nonatomic, readwrite) uint64_t outstandingShares;

/** 流通市值 */
@property(nonatomic, readwrite) uint64_t outstandingCap;

/** 总股本 */
@property(nonatomic, readwrite) uint64_t totalStockissue;

/** 总市值 */
@property(nonatomic, readwrite) uint64_t totalMarcketvalue;

/** 资金流入 */
@property(nonatomic, readwrite) uint64_t inner;

/** 资金流出 */
@property(nonatomic, readwrite) uint64_t outer;

/** 市盈率（静） */
@property(nonatomic, readwrite) int32_t peStatic;

/** 市盈率（动） */
@property(nonatomic, readwrite) int32_t peTtm;

/** 市净率 */
@property(nonatomic, readwrite) int32_t pb;

/** 换手率 */
@property(nonatomic, readwrite) uint64_t turnoverRate;

/** 振幅 */
@property(nonatomic, readwrite) uint64_t amplitude;

/** 量比 */
@property(nonatomic, readwrite) int32_t volRatio;

/** 是否是新股 */
@property(nonatomic, readwrite) BOOL ipoflag;

/** 上市时间 */
@property(nonatomic, readwrite) uint64_t listDate;

/** 上市天数 */
@property(nonatomic, readwrite) uint64_t listDays;

/** 发行价 */
@property(nonatomic, readwrite) int64_t issuePrice;

/** 首日涨跌幅 */
@property(nonatomic, readwrite) int32_t ipoDayPctchng;

/** 首日收盘价 */
@property(nonatomic, readwrite) int64_t ipoDayClose;

/** 累计涨跌幅 */
@property(nonatomic, readwrite) int32_t accuPctchng;

/** 交易状态 */
@property(nonatomic, readwrite) int32_t tradingStatus;

/** adr代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrCode;

/** adr所在市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrMarket;

/** adr换算价 */
@property(nonatomic, readwrite) uint64_t adrExchangePrice;

/** adr涨跌幅 */
@property(nonatomic, readwrite) int64_t adrPctchng;

/** adr相对价差 */
@property(nonatomic, readwrite) int64_t adrPriceSpread;

/** adr相对价差幅度 */
@property(nonatomic, readwrite) int64_t adrPriceSpreadRate;

/** adr名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrName;

/** adr列表展示的名字（正股或ADR） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrDisplay;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankStockResp's @c quoteType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankStockResp_QuoteType_RawValue(OBJECT_QUOTERankStockResp *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankStockResp's @c quoteType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankStockResp_QuoteType_RawValue(OBJECT_QUOTERankStockResp *message, int32_t value);

#pragma mark - OBJECT_QUOTERankSectorGatherResp

typedef GPB_ENUM(OBJECT_QUOTERankSectorGatherResp_FieldNumber) {
  OBJECT_QUOTERankSectorGatherResp_FieldNumber_Code = 1,
  OBJECT_QUOTERankSectorGatherResp_FieldNumber_Msg = 2,
  OBJECT_QUOTERankSectorGatherResp_FieldNumber_Level = 3,
  OBJECT_QUOTERankSectorGatherResp_FieldNumber_Data_p = 4,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorGatherResp : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankSectorRespData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankSectorRespData

typedef GPB_ENUM(OBJECT_QUOTERankSectorRespData_FieldNumber) {
  OBJECT_QUOTERankSectorRespData_FieldNumber_From = 1,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Count = 2,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Total = 3,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Rise = 4,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Draw = 5,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Fall = 6,
  OBJECT_QUOTERankSectorRespData_FieldNumber_LimitUp = 7,
  OBJECT_QUOTERankSectorRespData_FieldNumber_LimitDown = 8,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Suspend = 9,
  OBJECT_QUOTERankSectorRespData_FieldNumber_DetailArray = 10,
  OBJECT_QUOTERankSectorRespData_FieldNumber_RankCode = 11,
  OBJECT_QUOTERankSectorRespData_FieldNumber_RankMarket = 12,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Sorttype = 13,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Sortdirection = 14,
  OBJECT_QUOTERankSectorRespData_FieldNumber_Pagedirection = 15,
  OBJECT_QUOTERankSectorRespData_FieldNumber_ListArray = 16,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorRespData : GPBMessage

/** 请求的起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 当前返回的结果集（list）数量 */
@property(nonatomic, readwrite) uint64_t count;

/** 总数 */
@property(nonatomic, readwrite) uint64_t total;

/** 涨家数 */
@property(nonatomic, readwrite) int32_t rise;

/** 平家数 */
@property(nonatomic, readwrite) int32_t draw;

/** 跌家数 */
@property(nonatomic, readwrite) int32_t fall;

/** 涨停数 */
@property(nonatomic, readwrite) int32_t limitUp;

/** 涨跌数 */
@property(nonatomic, readwrite) int32_t limitDown;

/** 停牌数 */
@property(nonatomic, readwrite) int32_t suspend;

/** 市场总览 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *detailArray;
/** The number of items in @c detailArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detailArray_Count;

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankCode;

/** 请求的市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankMarket;

/** 请求的排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sorttype;

/** 请求的排序方向 */
@property(nonatomic, readwrite) int32_t sortdirection;

/** 请求的翻页方向 */
@property(nonatomic, readwrite) int32_t pagedirection;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankSectorResp*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankSectorRespData's @c sorttype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankSectorRespData_Sorttype_RawValue(OBJECT_QUOTERankSectorRespData *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankSectorRespData's @c sorttype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankSectorRespData_Sorttype_RawValue(OBJECT_QUOTERankSectorRespData *message, int32_t value);

#pragma mark - OBJECT_QUOTERankSectorResp

typedef GPB_ENUM(OBJECT_QUOTERankSectorResp_FieldNumber) {
  OBJECT_QUOTERankSectorResp_FieldNumber_SecuCode = 1,
  OBJECT_QUOTERankSectorResp_FieldNumber_ChsNameAbbr = 2,
  OBJECT_QUOTERankSectorResp_FieldNumber_TrdMarket = 3,
  OBJECT_QUOTERankSectorResp_FieldNumber_PriceBase = 4,
  OBJECT_QUOTERankSectorResp_FieldNumber_QuoteTime = 5,
  OBJECT_QUOTERankSectorResp_FieldNumber_QuoteType = 6,
  OBJECT_QUOTERankSectorResp_FieldNumber_PrevClose = 7,
  OBJECT_QUOTERankSectorResp_FieldNumber_OpenPrice = 8,
  OBJECT_QUOTERankSectorResp_FieldNumber_LatestPrice = 9,
  OBJECT_QUOTERankSectorResp_FieldNumber_HighPrice = 10,
  OBJECT_QUOTERankSectorResp_FieldNumber_LowPrice = 11,
  OBJECT_QUOTERankSectorResp_FieldNumber_ClosePrice = 12,
  OBJECT_QUOTERankSectorResp_FieldNumber_AvgPrice = 13,
  OBJECT_QUOTERankSectorResp_FieldNumber_Netchng = 14,
  OBJECT_QUOTERankSectorResp_FieldNumber_Pctchng = 15,
  OBJECT_QUOTERankSectorResp_FieldNumber_Amplitude = 16,
  OBJECT_QUOTERankSectorResp_FieldNumber_Volume = 17,
  OBJECT_QUOTERankSectorResp_FieldNumber_Trunover = 18,
  OBJECT_QUOTERankSectorResp_FieldNumber_TurnoverRate = 19,
  OBJECT_QUOTERankSectorResp_FieldNumber_Rise = 20,
  OBJECT_QUOTERankSectorResp_FieldNumber_Draw = 21,
  OBJECT_QUOTERankSectorResp_FieldNumber_Fall = 22,
  OBJECT_QUOTERankSectorResp_FieldNumber_LeadStock = 23,
  OBJECT_QUOTERankSectorResp_FieldNumber_YxCode = 24,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorResp : GPBMessage

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *secuCode;

/** 名字简称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chsNameAbbr;

/** 市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trdMarket;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

/** 行情时间 */
@property(nonatomic, readwrite) uint64_t quoteTime;

/** 类型 */
@property(nonatomic, readwrite) enum OBJECT_QUOTEQuoteType quoteType;

/** 昨收价 */
@property(nonatomic, readwrite) uint64_t prevClose;

/** 开盘价 */
@property(nonatomic, readwrite) uint64_t openPrice;

/** 最新价 */
@property(nonatomic, readwrite) uint64_t latestPrice;

/** 最高价 */
@property(nonatomic, readwrite) uint64_t highPrice;

/** 最低价 */
@property(nonatomic, readwrite) uint64_t lowPrice;

/** 收盘价 */
@property(nonatomic, readwrite) uint64_t closePrice;

/** 均价 */
@property(nonatomic, readwrite) uint64_t avgPrice;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t netchng;

/** 涨跌幅 */
@property(nonatomic, readwrite) int64_t pctchng;

/** 振幅 */
@property(nonatomic, readwrite) uint64_t amplitude;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 成交额 */
@property(nonatomic, readwrite) uint64_t trunover;

/** 换手率 */
@property(nonatomic, readwrite) uint64_t turnoverRate;

/** 涨家数 */
@property(nonatomic, readwrite) uint64_t rise;

/** 平家数 */
@property(nonatomic, readwrite) uint64_t draw;

/** 跌家数 */
@property(nonatomic, readwrite) uint64_t fall;

/** 领涨股 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankStockResp *leadStock;
/** Test to see if @c leadStock has been set. */
@property(nonatomic, readwrite) BOOL hasLeadStock;

/** 板块代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *yxCode;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankSectorResp's @c quoteType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankSectorResp_QuoteType_RawValue(OBJECT_QUOTERankSectorResp *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankSectorResp's @c quoteType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankSectorResp_QuoteType_RawValue(OBJECT_QUOTERankSectorResp *message, int32_t value);

#pragma mark - OBJECT_QUOTERankReqV2

typedef GPB_ENUM(OBJECT_QUOTERankReqV2_FieldNumber) {
  OBJECT_QUOTERankReqV2_FieldNumber_SortType = 1,
  OBJECT_QUOTERankReqV2_FieldNumber_SortDirection = 2,
  OBJECT_QUOTERankReqV2_FieldNumber_PageDirection = 3,
  OBJECT_QUOTERankReqV2_FieldNumber_From = 4,
  OBJECT_QUOTERankReqV2_FieldNumber_Count = 5,
  OBJECT_QUOTERankReqV2_FieldNumber_Code = 6,
  OBJECT_QUOTERankReqV2_FieldNumber_Market = 7,
  OBJECT_QUOTERankReqV2_FieldNumber_Lang = 8,
  OBJECT_QUOTERankReqV2_FieldNumber_Level = 9,
};

/**
 * ****************************************************************************
 * V2
 * ****************************************************************************
 **/
GPB_FINAL @interface OBJECT_QUOTERankReqV2 : GPBMessage

@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sortType;

@property(nonatomic, readwrite) int32_t sortDirection;

@property(nonatomic, readwrite) int32_t pageDirection;

@property(nonatomic, readwrite) int32_t from;

@property(nonatomic, readwrite) uint64_t count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *market;

@property(nonatomic, readwrite) int32_t lang;

@property(nonatomic, readwrite) int32_t level;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankReqV2's @c sortType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankReqV2_SortType_RawValue(OBJECT_QUOTERankReqV2 *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankReqV2's @c sortType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankReqV2_SortType_RawValue(OBJECT_QUOTERankReqV2 *message, int32_t value);

#pragma mark - OBJECT_QUOTEMultipleRankReqV2

typedef GPB_ENUM(OBJECT_QUOTEMultipleRankReqV2_FieldNumber) {
  OBJECT_QUOTEMultipleRankReqV2_FieldNumber_CodeListArray = 1,
};

GPB_FINAL @interface OBJECT_QUOTEMultipleRankReqV2 : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankReqV2*> *codeListArray;
/** The number of items in @c codeListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger codeListArray_Count;

@end

#pragma mark - OBJECT_QUOTEMultipleRankRespV2

typedef GPB_ENUM(OBJECT_QUOTEMultipleRankRespV2_FieldNumber) {
  OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Code = 1,
  OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Msg = 2,
  OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Data_p = 3,
};

GPB_FINAL @interface OBJECT_QUOTEMultipleRankRespV2 : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankRespListV2 *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankRespListV2

typedef GPB_ENUM(OBJECT_QUOTERankRespListV2_FieldNumber) {
  OBJECT_QUOTERankRespListV2_FieldNumber_StockListArray = 1,
  OBJECT_QUOTERankRespListV2_FieldNumber_SectorListArray = 2,
};

GPB_FINAL @interface OBJECT_QUOTERankRespListV2 : GPBMessage

/** 股票 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankStockGatherRespV2*> *stockListArray;
/** The number of items in @c stockListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stockListArray_Count;

/** 板块 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankSectorGatherRespV2*> *sectorListArray;
/** The number of items in @c sectorListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sectorListArray_Count;

@end

#pragma mark - OBJECT_QUOTERankStockGatherRespV2

typedef GPB_ENUM(OBJECT_QUOTERankStockGatherRespV2_FieldNumber) {
  OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Code = 1,
  OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Msg = 2,
  OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Level = 3,
  OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Data_p = 4,
};

GPB_FINAL @interface OBJECT_QUOTERankStockGatherRespV2 : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankStockRespDataV2 *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankStockRespDataV2

typedef GPB_ENUM(OBJECT_QUOTERankStockRespDataV2_FieldNumber) {
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_From = 1,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Count = 2,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Total = 3,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Up = 4,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Unchange = 5,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Down = 6,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_LimitUp = 7,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_LimitDown = 8,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_Suspend = 9,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_DetailArray = 10,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_RankCode = 11,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_RankMarket = 12,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortType = 13,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortDirection = 14,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_PageDirection = 15,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_ListArray = 16,
  OBJECT_QUOTERankStockRespDataV2_FieldNumber_DetailZtArray = 17,
};

GPB_FINAL @interface OBJECT_QUOTERankStockRespDataV2 : GPBMessage

/** 请求的起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 当前返回的结果集（list）数量 */
@property(nonatomic, readwrite) uint64_t count;

/** 总数 */
@property(nonatomic, readwrite) uint64_t total;

/** 涨家数 */
@property(nonatomic, readwrite) int32_t up;

/** 平家数 */
@property(nonatomic, readwrite) int32_t unchange;

/** 跌家数 */
@property(nonatomic, readwrite) int32_t down;

/** 涨停数 */
@property(nonatomic, readwrite) int32_t limitUp;

/** 涨跌数 */
@property(nonatomic, readwrite) int32_t limitDown;

/** 停牌数 */
@property(nonatomic, readwrite) int32_t suspend;

/** 市场总览 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *detailArray;
/** The number of items in @c detailArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detailArray_Count;

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankCode;

/** 请求的市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankMarket;

/** 请求的排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sortType;

/** 请求的排序方向 */
@property(nonatomic, readwrite) int32_t sortDirection;

/** 请求的翻页方向 */
@property(nonatomic, readwrite) int32_t pageDirection;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankStockRespV2*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

/** 市场总览-涨停大师 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *detailZtArray;
/** The number of items in @c detailZtArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detailZtArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankStockRespDataV2's @c sortType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankStockRespDataV2_SortType_RawValue(OBJECT_QUOTERankStockRespDataV2 *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankStockRespDataV2's @c sortType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankStockRespDataV2_SortType_RawValue(OBJECT_QUOTERankStockRespDataV2 *message, int32_t value);

#pragma mark - OBJECT_QUOTERankStockRespV2

typedef GPB_ENUM(OBJECT_QUOTERankStockRespV2_FieldNumber) {
  OBJECT_QUOTERankStockRespV2_FieldNumber_SecuCode = 1,
  OBJECT_QUOTERankStockRespV2_FieldNumber_ChsNameAbbr = 2,
  OBJECT_QUOTERankStockRespV2_FieldNumber_TrdMarket = 3,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PriceBase = 4,
  OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteTime = 5,
  OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteType = 6,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PrevClose = 7,
  OBJECT_QUOTERankStockRespV2_FieldNumber_OpenPrice = 8,
  OBJECT_QUOTERankStockRespV2_FieldNumber_LatestPrice = 9,
  OBJECT_QUOTERankStockRespV2_FieldNumber_HighPrice = 10,
  OBJECT_QUOTERankStockRespV2_FieldNumber_LowPrice = 11,
  OBJECT_QUOTERankStockRespV2_FieldNumber_ClosePrice = 12,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AvgPrice = 13,
  OBJECT_QUOTERankStockRespV2_FieldNumber_NetChng = 14,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChng = 15,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Volume = 16,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Turnover = 17,
  OBJECT_QUOTERankStockRespV2_FieldNumber_OutstandingShares = 18,
  OBJECT_QUOTERankStockRespV2_FieldNumber_OutstandingCap = 19,
  OBJECT_QUOTERankStockRespV2_FieldNumber_TotalStockIssue = 20,
  OBJECT_QUOTERankStockRespV2_FieldNumber_TotalMarketValue = 21,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Inner = 22,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Outer = 23,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PeStatic = 24,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PeTtm = 25,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Pb = 26,
  OBJECT_QUOTERankStockRespV2_FieldNumber_TurnoverRate = 27,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Amplitude = 28,
  OBJECT_QUOTERankStockRespV2_FieldNumber_VolRatio = 29,
  OBJECT_QUOTERankStockRespV2_FieldNumber_IpoFlag = 30,
  OBJECT_QUOTERankStockRespV2_FieldNumber_ListDate = 31,
  OBJECT_QUOTERankStockRespV2_FieldNumber_ListDays = 32,
  OBJECT_QUOTERankStockRespV2_FieldNumber_IssuePrice = 33,
  OBJECT_QUOTERankStockRespV2_FieldNumber_IpoDayPctchng = 34,
  OBJECT_QUOTERankStockRespV2_FieldNumber_IpoDayClose = 35,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AccuPctchng = 36,
  OBJECT_QUOTERankStockRespV2_FieldNumber_TradingStatus = 37,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrCode = 38,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrMarket = 39,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrExchangePrice = 40,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPctchng = 41,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPriceSpread = 42,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPriceSpreadRate = 43,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrName = 44,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AdrDisplay = 45,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Accer5 = 46,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Accer3 = 47,
  OBJECT_QUOTERankStockRespV2_FieldNumber_DividendYield = 48,
  OBJECT_QUOTERankStockRespV2_FieldNumber_NetInflow = 49,
  OBJECT_QUOTERankStockRespV2_FieldNumber_MainInflow = 50,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhCode = 51,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhMarket = 52,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhLastestPrice = 53,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhPreclose = 54,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhPctchng = 55,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhExchangePrice = 56,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhPriceSpread = 57,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhPriceSpreadRate = 58,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AhName = 59,
  OBJECT_QUOTERankStockRespV2_FieldNumber_HNameAbbr = 60,
  OBJECT_QUOTERankStockRespV2_FieldNumber_MarginRatio = 61,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Bail = 62,
  OBJECT_QUOTERankStockRespV2_FieldNumber_GreyChgPct = 63,
  OBJECT_QUOTERankStockRespV2_FieldNumber_WinningRate = 64,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg5Day = 65,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg10Day = 66,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg30Day = 67,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg60Day = 68,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg120Day = 69,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg250Day = 70,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg1Year = 71,
  OBJECT_QUOTERankStockRespV2_FieldNumber_GearingRatio = 72,
  OBJECT_QUOTERankStockRespV2_FieldNumber_High52Week = 73,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Low52Week = 74,
  OBJECT_QUOTERankStockRespV2_FieldNumber_PctChgWeek = 75,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Bid = 76,
  OBJECT_QUOTERankStockRespV2_FieldNumber_BidSize = 77,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Ask = 78,
  OBJECT_QUOTERankStockRespV2_FieldNumber_AskSize = 79,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Cittthan = 80,
  OBJECT_QUOTERankStockRespV2_FieldNumber_Currency = 81,
  OBJECT_QUOTERankStockRespV2_FieldNumber_ExpiryDate = 82,
};

GPB_FINAL @interface OBJECT_QUOTERankStockRespV2 : GPBMessage

/** 代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *secuCode;

/** 名字简称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chsNameAbbr;

/** 市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trdMarket;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

/** 行情时间 */
@property(nonatomic, readwrite) uint64_t quoteTime;

/** 类型 */
@property(nonatomic, readwrite) enum OBJECT_QUOTEQuoteType quoteType;

/** 昨收价 */
@property(nonatomic, readwrite) uint64_t prevClose;

/** 开盘价 */
@property(nonatomic, readwrite) uint64_t openPrice;

/** 最新价 */
@property(nonatomic, readwrite) uint64_t latestPrice;

/** 最高价 */
@property(nonatomic, readwrite) uint64_t highPrice;

/** 最低价 */
@property(nonatomic, readwrite) uint64_t lowPrice;

/** 收盘价 */
@property(nonatomic, readwrite) uint64_t closePrice;

/** 均价 */
@property(nonatomic, readwrite) uint64_t avgPrice;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t netChng;

/** 涨跌幅 */
@property(nonatomic, readwrite) int64_t pctChng;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 成交额 */
@property(nonatomic, readwrite) uint64_t turnover;

/** 流通股本 */
@property(nonatomic, readwrite) uint64_t outstandingShares;

/** 流通市值 */
@property(nonatomic, readwrite) uint64_t outstandingCap;

/** 总股本 */
@property(nonatomic, readwrite) uint64_t totalStockIssue;

/** 总市值 */
@property(nonatomic, readwrite) uint64_t totalMarketValue;

/** 资金流入 */
@property(nonatomic, readwrite) uint64_t inner;

/** 资金流出 */
@property(nonatomic, readwrite) uint64_t outer;

/** 市盈率（静） */
@property(nonatomic, readwrite) int32_t peStatic;

/** 市盈率（动） */
@property(nonatomic, readwrite) int32_t peTtm;

/** 市净率 */
@property(nonatomic, readwrite) int32_t pb;

/** 换手率 */
@property(nonatomic, readwrite) uint64_t turnoverRate;

/** 振幅 */
@property(nonatomic, readwrite) uint64_t amplitude;

/** 量比 */
@property(nonatomic, readwrite) int32_t volRatio;

/** 是否是新股 */
@property(nonatomic, readwrite) BOOL ipoFlag;

/** 上市时间 */
@property(nonatomic, readwrite) uint64_t listDate;

/** 上市天数 */
@property(nonatomic, readwrite) uint64_t listDays;

/** 发行价 */
@property(nonatomic, readwrite) int64_t issuePrice;

/** 首日涨跌幅 */
@property(nonatomic, readwrite) int32_t ipoDayPctchng;

/** 首日收盘价 */
@property(nonatomic, readwrite) int64_t ipoDayClose;

/** 累计涨跌幅 */
@property(nonatomic, readwrite) int32_t accuPctchng;

/** 交易状态 */
@property(nonatomic, readwrite) int32_t tradingStatus;

/** adr代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrCode;

/** adr所在市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrMarket;

/** adr换算价 */
@property(nonatomic, readwrite) uint64_t adrExchangePrice;

/** adr涨跌幅 */
@property(nonatomic, readwrite) int64_t adrPctchng;

/** adr相对价差 */
@property(nonatomic, readwrite) int64_t adrPriceSpread;

/** adr相对价差幅度 */
@property(nonatomic, readwrite) int64_t adrPriceSpreadRate;

/** adr名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrName;

/** adr列表展示的名字（正股或ADR名字） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adrDisplay;

/** 5分钟涨速 */
@property(nonatomic, readwrite) int32_t accer5;

/** 3分钟涨速 */
@property(nonatomic, readwrite) int32_t accer3;

/** 股息率 */
@property(nonatomic, readwrite) int64_t dividendYield;

/** 资金净流入 */
@property(nonatomic, readwrite) int64_t netInflow;

/** 主力净流入 */
@property(nonatomic, readwrite) int64_t mainInflow;

/** ah代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ahCode;

/** ah所在市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ahMarket;

@property(nonatomic, readwrite) int64_t ahLastestPrice;

@property(nonatomic, readwrite) int64_t ahPreclose;

/** ah涨跌幅 */
@property(nonatomic, readwrite) int64_t ahPctchng;

/** ah换算价 */
@property(nonatomic, readwrite) uint64_t ahExchangePrice;

/** ah相对价差 */
@property(nonatomic, readwrite) int64_t ahPriceSpread;

/** ah相对价差幅度 */
@property(nonatomic, readwrite) int64_t ahPriceSpreadRate;

/** ah名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ahName;

/** h名字简称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hNameAbbr;

/** 融资比例 */
@property(nonatomic, readwrite) int64_t marginRatio;

/** 保证金 */
@property(nonatomic, readwrite) int64_t bail;

/** 暗盘涨跌幅 */
@property(nonatomic, readwrite) int64_t greyChgPct;

/** 一手中签率 */
@property(nonatomic, readwrite) int64_t winningRate;

/**
 *
 * ! rpc接口的pb字段定义统一采用驼峰方式，避免protobuf编码成json数据格式
 * 与系统json库编码成json数据格式采用不同的字段名 !!
 **/
@property(nonatomic, readwrite) int64_t pctChg5Day;

@property(nonatomic, readwrite) int64_t pctChg10Day;

@property(nonatomic, readwrite) int64_t pctChg30Day;

@property(nonatomic, readwrite) int64_t pctChg60Day;

@property(nonatomic, readwrite) int64_t pctChg120Day;

@property(nonatomic, readwrite) int64_t pctChg250Day;

@property(nonatomic, readwrite) int64_t pctChg1Year;

@property(nonatomic, readwrite) int64_t gearingRatio;

@property(nonatomic, readwrite) int64_t high52Week;

@property(nonatomic, readwrite) int64_t low52Week;

@property(nonatomic, readwrite) int64_t pctChgWeek;

/** 委买 */
@property(nonatomic, readwrite) int64_t bid;

/** 委买量 */
@property(nonatomic, readwrite) int64_t bidSize;

/** 委卖 */
@property(nonatomic, readwrite) int64_t ask;

/** 委卖量 */
@property(nonatomic, readwrite) int64_t askSize;

/** 委比 */
@property(nonatomic, readwrite) int32_t cittthan;

/** 货币 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

/** 到期日 */
@property(nonatomic, readwrite) uint64_t expiryDate;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankStockRespV2's @c quoteType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankStockRespV2_QuoteType_RawValue(OBJECT_QUOTERankStockRespV2 *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankStockRespV2's @c quoteType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankStockRespV2_QuoteType_RawValue(OBJECT_QUOTERankStockRespV2 *message, int32_t value);

#pragma mark - OBJECT_QUOTERankSectorGatherRespV2

typedef GPB_ENUM(OBJECT_QUOTERankSectorGatherRespV2_FieldNumber) {
  OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Code = 1,
  OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Msg = 2,
  OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Level = 3,
  OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Data_p = 4,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorGatherRespV2 : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite) int32_t level;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankSectorRespDataV2 *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTERankSectorRespDataV2

typedef GPB_ENUM(OBJECT_QUOTERankSectorRespDataV2_FieldNumber) {
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_From = 1,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Count = 2,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Total = 3,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Up = 4,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Unchange = 5,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Down = 6,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_LimitUp = 7,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_LimitDown = 8,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Suspend = 9,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_DetailArray = 10,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_RankCode = 11,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_RankMarket = 12,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortType = 13,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortDirection = 14,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_PageDirection = 15,
  OBJECT_QUOTERankSectorRespDataV2_FieldNumber_ListArray = 16,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorRespDataV2 : GPBMessage

/** 请求的起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 当前返回的结果集（list）数量 */
@property(nonatomic, readwrite) uint64_t count;

/** 总数 */
@property(nonatomic, readwrite) uint64_t total;

/** 涨家数 */
@property(nonatomic, readwrite) int32_t up;

/** 平家数 */
@property(nonatomic, readwrite) int32_t unchange;

/** 跌家数 */
@property(nonatomic, readwrite) int32_t down;

/** 涨停数 */
@property(nonatomic, readwrite) int32_t limitUp;

/** 涨跌数 */
@property(nonatomic, readwrite) int32_t limitDown;

/** 停牌数 */
@property(nonatomic, readwrite) int32_t suspend;

/** 市场总览 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *detailArray;
/** The number of items in @c detailArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger detailArray_Count;

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankCode;

/** 请求的市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rankMarket;

/** 请求的排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sortType;

/** 请求的排序方向 */
@property(nonatomic, readwrite) int32_t sortDirection;

/** 请求的翻页方向 */
@property(nonatomic, readwrite) int32_t pageDirection;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTERankSectorRespV2*> *listArray;
/** The number of items in @c listArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger listArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankSectorRespDataV2's @c sortType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankSectorRespDataV2_SortType_RawValue(OBJECT_QUOTERankSectorRespDataV2 *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankSectorRespDataV2's @c sortType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankSectorRespDataV2_SortType_RawValue(OBJECT_QUOTERankSectorRespDataV2 *message, int32_t value);

#pragma mark - OBJECT_QUOTERankSectorRespV2

typedef GPB_ENUM(OBJECT_QUOTERankSectorRespV2_FieldNumber) {
  OBJECT_QUOTERankSectorRespV2_FieldNumber_SecuCode = 1,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_ChsNameAbbr = 2,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_TrdMarket = 3,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_PriceBase = 4,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteTime = 5,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteType = 6,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_PrevClose = 7,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_OpenPrice = 8,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_LatestPrice = 9,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_HighPrice = 10,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_LowPrice = 11,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_ClosePrice = 12,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_AvgPrice = 13,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_NetChng = 14,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChng = 15,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Amplitude = 16,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Volume = 17,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Turnover = 18,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_TurnoverRate = 19,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Rise = 20,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Draw = 21,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Fall = 22,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_LeadStock = 23,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_YxCode = 24,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Inflow = 25,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_Outflow = 26,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_NetInflow = 27,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_MainInflow = 28,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChg5Day = 29,
  OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChgWeek = 30,
};

GPB_FINAL @interface OBJECT_QUOTERankSectorRespV2 : GPBMessage

/** 请求的代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *secuCode;

/** 名字简称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *chsNameAbbr;

/** 市场 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trdMarket;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

/** 行情时间 */
@property(nonatomic, readwrite) uint64_t quoteTime;

/** 类型 */
@property(nonatomic, readwrite) enum OBJECT_QUOTEQuoteType quoteType;

/** 昨收价 */
@property(nonatomic, readwrite) uint64_t prevClose;

/** 开盘价 */
@property(nonatomic, readwrite) uint64_t openPrice;

/** 最新价 */
@property(nonatomic, readwrite) uint64_t latestPrice;

/** 最高价 */
@property(nonatomic, readwrite) uint64_t highPrice;

/** 最低价 */
@property(nonatomic, readwrite) uint64_t lowPrice;

/** 收盘价 */
@property(nonatomic, readwrite) uint64_t closePrice;

/** 均价 */
@property(nonatomic, readwrite) uint64_t avgPrice;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t netChng;

/** 涨跌幅 */
@property(nonatomic, readwrite) int64_t pctChng;

/** 振幅 */
@property(nonatomic, readwrite) uint64_t amplitude;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 成交额 */
@property(nonatomic, readwrite) uint64_t turnover;

/** 换手率 */
@property(nonatomic, readwrite) uint64_t turnoverRate;

/** 涨家数 */
@property(nonatomic, readwrite) uint64_t rise;

/** 平家数 */
@property(nonatomic, readwrite) uint64_t draw;

/** 跌家数 */
@property(nonatomic, readwrite) uint64_t fall;

/** 领涨股 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTERankStockRespV2 *leadStock;
/** Test to see if @c leadStock has been set. */
@property(nonatomic, readwrite) BOOL hasLeadStock;

/** 板块代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *yxCode;

/** 资金流入 */
@property(nonatomic, readwrite) int64_t inflow;

/** 资金流出 */
@property(nonatomic, readwrite) int64_t outflow;

/** 资金净流入 */
@property(nonatomic, readwrite) int64_t netInflow;

/** 主力净流入 */
@property(nonatomic, readwrite) int64_t mainInflow;

/** 5日涨跌幅 */
@property(nonatomic, readwrite) int64_t pctChg5Day;

@property(nonatomic, readwrite) int64_t pctChgWeek;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTERankSectorRespV2's @c quoteType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTERankSectorRespV2_QuoteType_RawValue(OBJECT_QUOTERankSectorRespV2 *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTERankSectorRespV2's @c quoteType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTERankSectorRespV2_QuoteType_RawValue(OBJECT_QUOTERankSectorRespV2 *message, int32_t value);

#pragma mark - OBJECT_QUOTESectorHistoryRankReq

typedef GPB_ENUM(OBJECT_QUOTESectorHistoryRankReq_FieldNumber) {
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Date = 1,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortType = 2,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortDirection = 3,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_PageDirection = 4,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_From = 5,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Count = 6,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Market = 7,
  OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Lang = 8,
};

/**
 * 行业历史排行榜请求
 **/
GPB_FINAL @interface OBJECT_QUOTESectorHistoryRankReq : GPBMessage

/** 日期 */
@property(nonatomic, readwrite) int64_t date;

/** 排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sortType;

/** 排序方向 */
@property(nonatomic, readwrite) enum COMMONSortDirection sortDirection;

@property(nonatomic, readwrite) enum COMMONPageDirection pageDirection;

/** 起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 数量 */
@property(nonatomic, readwrite) int32_t count;

/** 市场 */
@property(nonatomic, readwrite) enum OBJECT_MARKETMarketId market;

/** 语言 */
@property(nonatomic, readwrite) enum COMMONLangType lang;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryRankReq's @c sortType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryRankReq_SortType_RawValue(OBJECT_QUOTESectorHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryRankReq's @c sortType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryRankReq_SortType_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryRankReq's @c sortDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryRankReq's @c sortDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryRankReq's @c pageDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryRankReq's @c pageDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryRankReq's @c market property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryRankReq_Market_RawValue(OBJECT_QUOTESectorHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryRankReq's @c market property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryRankReq_Market_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryRankReq's @c lang property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryRankReq_Lang_RawValue(OBJECT_QUOTESectorHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryRankReq's @c lang property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryRankReq_Lang_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value);

#pragma mark - OBJECT_QUOTESectorHistoryRankReply

typedef GPB_ENUM(OBJECT_QUOTESectorHistoryRankReply_FieldNumber) {
  OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Code = 1,
  OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Msg = 2,
  OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Data_p = 5,
};

/**
 * 行业历史排行榜响应
 **/
GPB_FINAL @interface OBJECT_QUOTESectorHistoryRankReply : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTESectorHistoryData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTESectorHistoryData

typedef GPB_ENUM(OBJECT_QUOTESectorHistoryData_FieldNumber) {
  OBJECT_QUOTESectorHistoryData_FieldNumber_Market = 1,
  OBJECT_QUOTESectorHistoryData_FieldNumber_Date = 2,
  OBJECT_QUOTESectorHistoryData_FieldNumber_SectorDataArray = 3,
};

/**
 * 行业历史排行
 **/
GPB_FINAL @interface OBJECT_QUOTESectorHistoryData : GPBMessage

/** 市场 */
@property(nonatomic, readwrite) enum OBJECT_MARKETMarketId market;

/** 日期 */
@property(nonatomic, readwrite) int64_t date;

/** 排行数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTESectorData*> *sectorDataArray;
/** The number of items in @c sectorDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sectorDataArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTESectorHistoryData's @c market property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTESectorHistoryData_Market_RawValue(OBJECT_QUOTESectorHistoryData *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTESectorHistoryData's @c market property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTESectorHistoryData_Market_RawValue(OBJECT_QUOTESectorHistoryData *message, int32_t value);

#pragma mark - OBJECT_QUOTESectorData

typedef GPB_ENUM(OBJECT_QUOTESectorData_FieldNumber) {
  OBJECT_QUOTESectorData_FieldNumber_Code = 1,
  OBJECT_QUOTESectorData_FieldNumber_Name = 2,
  OBJECT_QUOTESectorData_FieldNumber_PriceChange = 3,
  OBJECT_QUOTESectorData_FieldNumber_PriceChangeRate = 4,
  OBJECT_QUOTESectorData_FieldNumber_InFlow = 5,
  OBJECT_QUOTESectorData_FieldNumber_OutFlow = 6,
  OBJECT_QUOTESectorData_FieldNumber_PriceBase = 7,
};

/**
 * 行业历史排行数据
 **/
GPB_FINAL @interface OBJECT_QUOTESectorData : GPBMessage

/** 代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t priceChange;

/** 涨跌幅 */
@property(nonatomic, readwrite) int32_t priceChangeRate;

/** 资金流入 */
@property(nonatomic, readwrite) int64_t inFlow;

/** 资金流出 */
@property(nonatomic, readwrite) int64_t outFlow;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

@end

#pragma mark - OBJECT_QUOTEStockHistoryRankReq

typedef GPB_ENUM(OBJECT_QUOTEStockHistoryRankReq_FieldNumber) {
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Date = 1,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortType = 2,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortDirection = 3,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_PageDirection = 4,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_From = 5,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Count = 6,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Market = 7,
  OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Lang = 8,
};

/**
 * 股票历史排行榜请求
 **/
GPB_FINAL @interface OBJECT_QUOTEStockHistoryRankReq : GPBMessage

/** 日期 */
@property(nonatomic, readwrite) int64_t date;

/** 排序字段 */
@property(nonatomic, readwrite) OBJECT_QUOTERankSortType sortType;

/** 排序方向 */
@property(nonatomic, readwrite) enum COMMONSortDirection sortDirection;

@property(nonatomic, readwrite) enum COMMONPageDirection pageDirection;

/** 起始索引 */
@property(nonatomic, readwrite) int32_t from;

/** 数量 */
@property(nonatomic, readwrite) int32_t count;

/** 市场 */
@property(nonatomic, readwrite) enum OBJECT_MARKETMarketId market;

/** 语言 */
@property(nonatomic, readwrite) enum COMMONLangType lang;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryRankReq's @c sortType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryRankReq_SortType_RawValue(OBJECT_QUOTEStockHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryRankReq's @c sortType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryRankReq_SortType_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryRankReq's @c sortDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryRankReq's @c sortDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryRankReq's @c pageDirection property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryRankReq's @c pageDirection property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryRankReq's @c market property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryRankReq_Market_RawValue(OBJECT_QUOTEStockHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryRankReq's @c market property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryRankReq_Market_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryRankReq's @c lang property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryRankReq_Lang_RawValue(OBJECT_QUOTEStockHistoryRankReq *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryRankReq's @c lang property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryRankReq_Lang_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value);

#pragma mark - OBJECT_QUOTEStockHistoryRankReply

typedef GPB_ENUM(OBJECT_QUOTEStockHistoryRankReply_FieldNumber) {
  OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Code = 1,
  OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Msg = 2,
  OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Data_p = 3,
};

/**
 * 股票历史排行榜响应
 **/
GPB_FINAL @interface OBJECT_QUOTEStockHistoryRankReply : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *msg;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_QUOTEStockHistoryData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

#pragma mark - OBJECT_QUOTEStockHistoryData

typedef GPB_ENUM(OBJECT_QUOTEStockHistoryData_FieldNumber) {
  OBJECT_QUOTEStockHistoryData_FieldNumber_Market = 1,
  OBJECT_QUOTEStockHistoryData_FieldNumber_Date = 2,
  OBJECT_QUOTEStockHistoryData_FieldNumber_StockDataArray = 3,
};

/**
 * 股票历史排行
 **/
GPB_FINAL @interface OBJECT_QUOTEStockHistoryData : GPBMessage

/** 市场 */
@property(nonatomic, readwrite) enum OBJECT_MARKETMarketId market;

/** 日期 */
@property(nonatomic, readwrite) int64_t date;

/** 排行数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_QUOTEStockData*> *stockDataArray;
/** The number of items in @c stockDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stockDataArray_Count;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTEStockHistoryData's @c market property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEStockHistoryData_Market_RawValue(OBJECT_QUOTEStockHistoryData *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEStockHistoryData's @c market property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEStockHistoryData_Market_RawValue(OBJECT_QUOTEStockHistoryData *message, int32_t value);

#pragma mark - OBJECT_QUOTEStockData

typedef GPB_ENUM(OBJECT_QUOTEStockData_FieldNumber) {
  OBJECT_QUOTEStockData_FieldNumber_Code = 1,
  OBJECT_QUOTEStockData_FieldNumber_Name = 2,
  OBJECT_QUOTEStockData_FieldNumber_PriceChange = 3,
  OBJECT_QUOTEStockData_FieldNumber_PriceChangeRate = 4,
  OBJECT_QUOTEStockData_FieldNumber_LatestPrice = 5,
  OBJECT_QUOTEStockData_FieldNumber_PriceBase = 6,
};

/**
 * 股票历史排行数据
 **/
GPB_FINAL @interface OBJECT_QUOTEStockData : GPBMessage

/** 代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 涨跌额 */
@property(nonatomic, readwrite) int64_t priceChange;

/** 涨跌幅 */
@property(nonatomic, readwrite) int32_t priceChangeRate;

/** 最新价 */
@property(nonatomic, readwrite) int64_t latestPrice;

/** 价格转换基准 */
@property(nonatomic, readwrite) uint32_t priceBase;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
