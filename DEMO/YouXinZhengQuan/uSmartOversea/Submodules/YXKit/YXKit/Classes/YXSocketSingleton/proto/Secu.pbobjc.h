// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secu.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class OBJECT_SECUAdjustInfo;
@class OBJECT_SECUBondInfo;
@class OBJECT_SECUBriefInfo;
@class OBJECT_SECUFullID;
@class OBJECT_SECUFundInfo;
@class OBJECT_SECUIndexInfo;
@class OBJECT_SECUInfo;
@class OBJECT_SECUOptionInfo;
@class OBJECT_SECUSectorInfo;
@class OBJECT_SECUSecurityName;
@class OBJECT_SECUStockInfo;
@class OBJECT_SECUUsAdjustInfo;
@class OBJECT_SECUWarrantInfo;
GPB_ENUM_FWD_DECLARE(COMMONLangType);
GPB_ENUM_FWD_DECLARE(OBJECT_MARKETExchange);
GPB_ENUM_FWD_DECLARE(OBJECT_MARKETListedSector);
GPB_ENUM_FWD_DECLARE(OBJECT_MARKETMarketId);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum OBJECT_SECUSecuType1

/** 证券一级类型 */
typedef GPB_ENUM(OBJECT_SECUSecuType1) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSecuType1_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSecuType1_St1None = 0,

  /** 股票 */
  OBJECT_SECUSecuType1_StStock = 1,

  /** 基金 */
  OBJECT_SECUSecuType1_StFund = 2,

  /** future */
  OBJECT_SECUSecuType1_StFuture = 3,

  /** 债券 */
  OBJECT_SECUSecuType1_StBond = 4,

  /** option(warrant, CBBC) */
  OBJECT_SECUSecuType1_StOption = 5,

  /** 指数 */
  OBJECT_SECUSecuType1_StIndex = 6,

  /** 外汇 */
  OBJECT_SECUSecuType1_StForex = 7,

  /** 数字货币 */
  OBJECT_SECUSecuType1_StCryptos = 8,

  /** 板块 */
  OBJECT_SECUSecuType1_StSector = 9,
};

GPBEnumDescriptor *OBJECT_SECUSecuType1_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSecuType1_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUSecuType2

typedef GPB_ENUM(OBJECT_SECUSecuType2) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSecuType2_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSecuType2_St2None = 0,

  /** 股票综合 */
  OBJECT_SECUSecuType2_StComStock = 101,

  /** 高级ADR */
  OBJECT_SECUSecuType2_StHighAdr = 102,

  /** 低级ADR */
  OBJECT_SECUSecuType2_StLowAdr = 103,

  /** 场内基金 */
  OBJECT_SECUSecuType2_StFieldFund = 201,

  /** 场外基金 */
  OBJECT_SECUSecuType2_StOtcFund = 202,

  /** 商品期货 */
  OBJECT_SECUSecuType2_StComdFut = 301,

  /** 金融期货 */
  OBJECT_SECUSecuType2_StFitf = 302,

  /** 香港市场债券 */
  OBJECT_SECUSecuType2_StHkBond = 401,

  /** 美国债券类产品 */
  OBJECT_SECUSecuType2_StUsBond = 402,

  /** 沪深市场债券产品 */
  OBJECT_SECUSecuType2_StHsBond = 403,

  /** 香港结构性产品 */
  OBJECT_SECUSecuType2_StComOpt = 501,

  /** 美国结构性产品，权利，权证 */
  OBJECT_SECUSecuType2_StUsWt = 502,

  /** 沪深期权 */
  OBJECT_SECUSecuType2_StHsOpt = 503,

  /** 美股期权 */
  OBJECT_SECUSecuType2_StUsOpt = 504,

  /** 新加坡期权 */
  OBJECT_SECUSecuType2_StSgOpt = 505,

  /** 指数综合 */
  OBJECT_SECUSecuType2_StComIdx = 601,

  /** 外汇综合 */
  OBJECT_SECUSecuType2_StComForex = 701,

  /** 其他综合   此处为兼容老版本 */
  OBJECT_SECUSecuType2_StCryptosCom = 801,

  /** 板块使用 */
  OBJECT_SECUSecuType2_StIndustry = 901,

  /** 地域 */
  OBJECT_SECUSecuType2_StRegion = 902,

  /** 概念 */
  OBJECT_SECUSecuType2_StConcept = 903,

  /** 排行 */
  OBJECT_SECUSecuType2_StRank = 904,
};

GPBEnumDescriptor *OBJECT_SECUSecuType2_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSecuType2_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUSecuType3

typedef GPB_ENUM(OBJECT_SECUSecuType3) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSecuType3_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSecuType3_St3None = 0,

  /** other stock */
  OBJECT_SECUSecuType3_StOtherStock = 10100,

  /** hs A */
  OBJECT_SECUSecuType3_StHsaStock = 10101,

  /** hs B */
  OBJECT_SECUSecuType3_StHsbStock = 10102,

  /** new third board */
  OBJECT_SECUSecuType3_StNtbStock = 10103,

  /** HKEX stock */
  OBJECT_SECUSecuType3_StHkStock = 10104,

  /** US stock */
  OBJECT_SECUSecuType3_StUsStock = 10105,

  /** CDR */
  OBJECT_SECUSecuType3_StCdr = 10106,

  /** HDR */
  OBJECT_SECUSecuType3_StHdr = 10107,

  /** ADR(高级ADR) 废弃 */
  OBJECT_SECUSecuType3_StAdrOld = 10108,

  /** 低级ADR，一级二级ADR，主要是粉单及OTCBB市场 废弃 */
  OBJECT_SECUSecuType3_StLowAdrOld = 10109,

  /** 新加坡股票 */
  OBJECT_SECUSecuType3_StSgStock = 10110,

  /** 高级ADR 其他市场 */
  OBJECT_SECUSecuType3_StHighAdrOther = 10200,

  /** 高级ADR 港股市场 */
  OBJECT_SECUSecuType3_StHighAdrHk = 10201,

  /** OTCBB,PINK MARKET 低级ADR 其他市场上市ADR */
  OBJECT_SECUSecuType3_StLowAdrOther = 10300,

  /** OTCBB,PINK MARKET 低级ADR 港股上市 ADR */
  OBJECT_SECUSecuType3_StLowAdrHk = 10301,

  /** OTCBB PINK MARKET 非ADR */
  OBJECT_SECUSecuType3_StNoAdrOther = 10302,

  /** other fund */
  OBJECT_SECUSecuType3_StOtherFund = 20100,

  /** cose-ended fund */
  OBJECT_SECUSecuType3_StEndFund = 20101,

  /** ETF */
  OBJECT_SECUSecuType3_StEtf = 20102,

  /** LOF */
  OBJECT_SECUSecuType3_StLof = 20103,

  /** 场内创新基金 */
  OBJECT_SECUSecuType3_StInInnoFund = 20104,

  /** 信托基金 */
  OBJECT_SECUSecuType3_StTrustFund = 20105,

  /** 美股ETN */
  OBJECT_SECUSecuType3_StFundUsEtn = 20106,

  /** 房地产信托基金 */
  OBJECT_SECUSecuType3_StTrustFundReit = 20107,

  /** 开放式基金 */
  OBJECT_SECUSecuType3_StOpenFund = 20201,
  OBJECT_SECUSecuType3_StQdiiFund = 20202,
  OBJECT_SECUSecuType3_StQfiiFund = 20203,
  OBJECT_SECUSecuType3_StFof = 20204,

  /** 货币基金 */
  OBJECT_SECUSecuType3_StMoneyFund = 20205,

  /** 场外创新基金 */
  OBJECT_SECUSecuType3_StOutInnoFund = 20206,

  /** 股票型基金 */
  OBJECT_SECUSecuType3_StOutStockFund = 20207,

  /** 债券型基金 */
  OBJECT_SECUSecuType3_StOutBondFund = 20208,

  /** 混合型基金 */
  OBJECT_SECUSecuType3_StOutMixFund = 20209,

  /** 指数型基金 */
  OBJECT_SECUSecuType3_StOutIndexFund = 20210,

  /** Agricultural and sideline product futures 农副产品期货 */
  OBJECT_SECUSecuType3_StAsFut = 30101,

  /** 金属产品期货 */
  OBJECT_SECUSecuType3_StMetalFut = 30102,

  /** 化工产品期货 */
  OBJECT_SECUSecuType3_StChemFut = 30103,

  /** 林业产品期货 */
  OBJECT_SECUSecuType3_StForestFut = 30104,

  /** 货币期货 */
  OBJECT_SECUSecuType3_StMoneyFut = 30201,

  /** 利率期货 */
  OBJECT_SECUSecuType3_StRateFut = 30202,

  /** 指数期货 */
  OBJECT_SECUSecuType3_StIdxFut = 30203,

  /** 香港市场债券 */
  OBJECT_SECUSecuType3_StHkComBd = 40100,

  /** 香港市场EFN(外汇基金票据) */
  OBJECT_SECUSecuType3_StHkEfn = 40101,

  /** 原为美股ETN，暂时废弃不用 */
  OBJECT_SECUSecuType3_StUsEtn = 40200,

  /** 美股市场其它债券 */
  OBJECT_SECUSecuType3_StUsObdBd = 40201,

  /** 国债,暂时未用 */
  OBJECT_SECUSecuType3_StHsGbfBd = 40300,

  /** 企业债,暂时未用 */
  OBJECT_SECUSecuType3_StHsCbfBd = 40301,

  /** 公司债,暂时未用 */
  OBJECT_SECUSecuType3_StHsCpfBd = 40302,

  /** 可转债,暂时未用 */
  OBJECT_SECUSecuType3_StHsCbdBd = 40303,

  /** 其它债,暂时未用 */
  OBJECT_SECUSecuType3_StHsObdBd = 40304,

  /** 个股期权 */
  OBJECT_SECUSecuType3_StHkOptStock = 50101,

  /** 认股证/warrant */
  OBJECT_SECUSecuType3_StWarrant = 50102,

  /** 牛熊证 */
  OBJECT_SECUSecuType3_StCbbc = 50103,

  /** 界内证 */
  OBJECT_SECUSecuType3_StInlineWarrant = 50104,

  /** 美国市场权利,暂时没用到 */
  OBJECT_SECUSecuType3_StUsRights = 50201,

  /** 美国市场 Warrant */
  OBJECT_SECUSecuType3_StUsWarrant = 50202,

  /** 美股股票期权 */
  OBJECT_SECUSecuType3_StUsOptStock = 50401,

  /** 美股指数期权 */
  OBJECT_SECUSecuType3_StUsOptIndex = 50402,

  /** 认股证 */
  OBJECT_SECUSecuType3_StSgWarrant = 50501,

  /** 每日杠杆证书 */
  OBJECT_SECUSecuType3_StSgDlc = 50502,

  /** 中国指数 */
  OBJECT_SECUSecuType3_StChinaIdx = 60101,

  /** */
  OBJECT_SECUSecuType3_StHkIdx = 60102,
  OBJECT_SECUSecuType3_StUsIdx = 60103,

  /** Binance(币安) */
  OBJECT_SECUSecuType3_StCryptosComBianance = 80100,

  /** Huobi */
  OBJECT_SECUSecuType3_StCryptosComHuobi = 80101,

  /** OKex */
  OBJECT_SECUSecuType3_StCryptosComOkex = 80102,

  /** Gate.io */
  OBJECT_SECUSecuType3_StCryptosComGate = 80103,

  /** Bithumb */
  OBJECT_SECUSecuType3_StCryptosComBithumb = 80104,

  /** Bitfinex */
  OBJECT_SECUSecuType3_StCryptosComBitfinex = 80105,

  /** Bittrex */
  OBJECT_SECUSecuType3_StCryptosComBittrex = 80106,

  /** Bitstamp */
  OBJECT_SECUSecuType3_StCryptosComBitstamp = 80107,

  /** HS行业 */
  OBJECT_SECUSecuType3_StHsIndustry = 90101,

  /** 港股行业 */
  OBJECT_SECUSecuType3_StHkIndustry = 90102,

  /** 美股行业 */
  OBJECT_SECUSecuType3_StUsIndustry = 90103,

  /** HS地域 */
  OBJECT_SECUSecuType3_StHsRegion = 90201,

  /** HS概念 */
  OBJECT_SECUSecuType3_StHsConcept = 90301,

  /** 香港概念 */
  OBJECT_SECUSecuType3_StHkConcept = 90302,

  /** 沪深概念 */
  OBJECT_SECUSecuType3_StHsRank = 90401,
};

GPBEnumDescriptor *OBJECT_SECUSecuType3_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSecuType3_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUCurrencyType

typedef GPB_ENUM(OBJECT_SECUCurrencyType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUCurrencyType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUCurrencyType_Oth = 0,

  /** 在岸人民币 */
  OBJECT_SECUCurrencyType_Cny = 1,

  /** 美元 */
  OBJECT_SECUCurrencyType_Usd = 2,

  /** 港币 */
  OBJECT_SECUCurrencyType_Hkd = 3,

  /** Chinese Renm */
  OBJECT_SECUCurrencyType_Cnh = 4,

  /** 新加坡元 */
  OBJECT_SECUCurrencyType_Sgd = 5,

  /** 日元 */
  OBJECT_SECUCurrencyType_Jpy = 6,

  /** 英鎊 */
  OBJECT_SECUCurrencyType_Gbp = 7,

  /** 欧元 */
  OBJECT_SECUCurrencyType_Eur = 8,

  /** 加拿大元 */
  OBJECT_SECUCurrencyType_Cad = 9,

  /** 澳元 */
  OBJECT_SECUCurrencyType_Aud = 10,

  /** 奥地利先令 */
  OBJECT_SECUCurrencyType_Ats = 11,

  /** 孟加拉塔卡 */
  OBJECT_SECUCurrencyType_Bdt = 12,

  /** 巴林第纳尔 */
  OBJECT_SECUCurrencyType_Bhd = 13,

  /** 比利时法郎“商业” */
  OBJECT_SECUCurrencyType_Bec = 14,

  /** 比利时法郎“金融” */
  OBJECT_SECUCurrencyType_Bel = 15,

  /** 文莱元 */
  OBJECT_SECUCurrencyType_Bnd = 16,

  /** 缅元 */
  OBJECT_SECUCurrencyType_Buk = 17,

  /** 斯里兰卡卢比 */
  OBJECT_SECUCurrencyType_Lkr = 18,

  /** 塞浦路斯镑 */
  OBJECT_SECUCurrencyType_Cyp = 19,

  /** 丹麦克朗 */
  OBJECT_SECUCurrencyType_Dkk = 20,

  /** 德国马克 */
  OBJECT_SECUCurrencyType_Dem = 21,

  /** 荷兰盾 */
  OBJECT_SECUCurrencyType_Nlg = 22,

  /** 斐济元 */
  OBJECT_SECUCurrencyType_Fjd = 23,

  /** 芬兰元 */
  OBJECT_SECUCurrencyType_Fim = 24,

  /** 法国法郎 */
  OBJECT_SECUCurrencyType_Frf = 25,

  /** 印度卢比 */
  OBJECT_SECUCurrencyType_Inr = 26,

  /** 印度尼西亚盾 */
  OBJECT_SECUCurrencyType_Idr = 27,

  /** 意大利里拉 */
  OBJECT_SECUCurrencyType_Itl = 28,

  /** 科威特第纳尔 */
  OBJECT_SECUCurrencyType_Kwd = 29,

  /** 肯尼亚先令 */
  OBJECT_SECUCurrencyType_Kes = 30,

  /** 黎巴嫩镑 */
  OBJECT_SECUCurrencyType_Lbp = 31,

  /** 毛里求斯卢比 */
  OBJECT_SECUCurrencyType_Mur = 32,

  /** 马来西亚林吉特 */
  OBJECT_SECUCurrencyType_Myr = 33,

  /** 新西兰元 */
  OBJECT_SECUCurrencyType_Nzd = 34,

  /** 尼日利亚奈拉 */
  OBJECT_SECUCurrencyType_Ngn = 35,

  /** 挪威克朗 */
  OBJECT_SECUCurrencyType_Nok = 36,

  /** 阿曼里亚尔 */
  OBJECT_SECUCurrencyType_Omr = 37,

  /** 巴基斯坦卢比 */
  OBJECT_SECUCurrencyType_Pkr = 38,

  /** 菲律宾比索 */
  OBJECT_SECUCurrencyType_Php = 39,

  /** 葡萄牙埃斯库多 */
  OBJECT_SECUCurrencyType_Pte = 40,

  /** 卡塔尔里亚尔 */
  OBJECT_SECUCurrencyType_Qar = 41,

  /** 沙特里亚尔 */
  OBJECT_SECUCurrencyType_Sar = 42,

  /** 塞舌尔卢比 */
  OBJECT_SECUCurrencyType_Scr = 43,

  /** 塞拉利昂雷昂内斯 */
  OBJECT_SECUCurrencyType_Sll = 44,

  /** 南非货币兰特 */
  OBJECT_SECUCurrencyType_Zar = 45,

  /** 韩元 */
  OBJECT_SECUCurrencyType_Krw = 46,

  /** 西班牙比塞塔 */
  OBJECT_SECUCurrencyType_Esp = 47,

  /** 瑞典克朗 */
  OBJECT_SECUCurrencyType_Sek = 48,

  /** 瑞士法郎 */
  OBJECT_SECUCurrencyType_Chf = 49,

  /** 泰国泰铢 */
  OBJECT_SECUCurrencyType_Thb = 50,

  /** 阿联酋迪拉姆 */
  OBJECT_SECUCurrencyType_Aed = 51,

  /** 爱尔兰镑 */
  OBJECT_SECUCurrencyType_Iep = 52,

  /** 特别提款权 */
  OBJECT_SECUCurrencyType_Sdr = 53,

  /** 澳门澳元 */
  OBJECT_SECUCurrencyType_Mop = 54,

  /** 巴西雷亚尔 */
  OBJECT_SECUCurrencyType_Brc = 55,

  /** 欧洲货币单位 */
  OBJECT_SECUCurrencyType_Ecu = 56,

  /** 墨西哥比索 */
  OBJECT_SECUCurrencyType_Mxn = 57,
  OBJECT_SECUCurrencyType_CurrencyNone = 99,
};

GPBEnumDescriptor *OBJECT_SECUCurrencyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUCurrencyType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUInfoLevel

typedef GPB_ENUM(OBJECT_SECUInfoLevel) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUInfoLevel_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不包含任何 Info 信息 */
  OBJECT_SECUInfoLevel_None = 0,

  /** 仅基本信息，目前指证券名称 */
  OBJECT_SECUInfoLevel_Basic = 1,

  /** 静态信息，包含 2-6 */
  OBJECT_SECUInfoLevel_Static = 2,

  /** 财务信息，包含 20-22 */
  OBJECT_SECUInfoLevel_Fin = 4,

  /** 全部 */
  OBJECT_SECUInfoLevel_Full = 63,
};

GPBEnumDescriptor *OBJECT_SECUInfoLevel_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUInfoLevel_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUListStatus

typedef GPB_ENUM(OBJECT_SECUListStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUListStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUListStatus_LsNone = 0,

  /** 正常交易 */
  OBJECT_SECUListStatus_Listed = 1,

  /** 停牌 */
  OBJECT_SECUListStatus_Paused = 2,

  /** 退市 */
  OBJECT_SECUListStatus_Delisted = 3,
  OBJECT_SECUListStatus_Canceled = 4,
  OBJECT_SECUListStatus_PreList = 5,

  /** 暂停上市 */
  OBJECT_SECUListStatus_SuspendList = 6,
  OBJECT_SECUListStatus_PreDelist = 7,
};

GPBEnumDescriptor *OBJECT_SECUListStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUListStatus_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUCallPutType

typedef GPB_ENUM(OBJECT_SECUCallPutType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUCallPutType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * 全部类型
   *
   * or in other word meaning the original UNKNOWN
   *
   **/
  OBJECT_SECUCallPutType_All = 0,

  /** warrant:call, ELI & CBBC: bull */
  OBJECT_SECUCallPutType_Call = 1,

  /** warrant:put, ELI & CBBC: bear/rang */
  OBJECT_SECUCallPutType_Put = 2,

  /** 其他类型 */
  OBJECT_SECUCallPutType_Other = 3,
};

GPBEnumDescriptor *OBJECT_SECUCallPutType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUCallPutType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUReportPeriodType

typedef GPB_ENUM(OBJECT_SECUReportPeriodType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUReportPeriodType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUReportPeriodType_RptNone = 0,

  /** 1季度 */
  OBJECT_SECUReportPeriodType_RptFirst = 1,

  /** 2季度 */
  OBJECT_SECUReportPeriodType_RptSecond = 2,

  /** 3季度 */
  OBJECT_SECUReportPeriodType_RptThird = 3,

  /** 4季度 */
  OBJECT_SECUReportPeriodType_RptFourth = 4,
};

GPBEnumDescriptor *OBJECT_SECUReportPeriodType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUReportPeriodType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUSpreadTableCode

typedef GPB_ENUM(OBJECT_SECUSpreadTableCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSpreadTableCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSpreadTableCode_StcNone = 0,

  /** hk:A类型，sg: 股票、房地产投资信托基金（REIT）、商业信托、公司权证 */
  OBJECT_SECUSpreadTableCode_StcPartA = 1,

  /** hk:B类型，sg: 结构性认股权证 */
  OBJECT_SECUSpreadTableCode_StcPartB = 3,

  /** hk:C类型，sg: 易所买卖基金和交易所买卖票据 */
  OBJECT_SECUSpreadTableCode_StcPartC = 4,

  /** hk:D类型，sg:债权证、债券、债权股和优先股 */
  OBJECT_SECUSpreadTableCode_StcPartD = 5,

  /** sg: 以港元计价的证券 */
  OBJECT_SECUSpreadTableCode_StcPartE = 6,

  /** sg: 以日元计价的证券 */
  OBJECT_SECUSpreadTableCode_StcPartF = 7,
};

GPBEnumDescriptor *OBJECT_SECUSpreadTableCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSpreadTableCode_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUSecuTypeTips

typedef GPB_ENUM(OBJECT_SECUSecuTypeTips) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSecuTypeTips_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSecuTypeTips_SttNone = 0,

  /** 存托凭证 */
  OBJECT_SECUSecuTypeTips_SttCdr = 1,

  /** 创新企业 */
  OBJECT_SECUSecuTypeTips_SttIe = 2,
};

GPBEnumDescriptor *OBJECT_SECUSecuTypeTips_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSecuTypeTips_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUWarrantType

/** 涡轮权证类型 */
typedef GPB_ENUM(OBJECT_SECUWarrantType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUWarrantType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUWarrantType_WarrantNone = 0,

  /** 标准 */
  OBJECT_SECUWarrantType_WarrantStd = 1,

  /** 特种 */
  OBJECT_SECUWarrantType_WarrantSup = 2,

  /** 其他 */
  OBJECT_SECUWarrantType_WarrantOth = 99,
};

GPBEnumDescriptor *OBJECT_SECUWarrantType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUWarrantType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUDerivativeType

/** 衍生品类型 */
typedef GPB_ENUM(OBJECT_SECUDerivativeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUDerivativeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUDerivativeType_DtNone = 0,

  /** 窝轮 */
  OBJECT_SECUDerivativeType_DtWarrants = 1,

  /** 牛熊 */
  OBJECT_SECUDerivativeType_DtCbbc = 2,

  /** 界内证 */
  OBJECT_SECUDerivativeType_DtInline = 4,
  OBJECT_SECUDerivativeType_DtAll = 8,
};

GPBEnumDescriptor *OBJECT_SECUDerivativeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUDerivativeType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUWarrantCharacter

/** 权证性质 */
typedef GPB_ENUM(OBJECT_SECUWarrantCharacter) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUWarrantCharacter_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUWarrantCharacter_WarrantChNone = 0,

  /** 认购 */
  OBJECT_SECUWarrantCharacter_WarrantChSub = 1,

  /** 认沽 */
  OBJECT_SECUWarrantCharacter_WarrantChPut = 2,

  /** 牛证 */
  OBJECT_SECUWarrantCharacter_WarrantChBull = 3,

  /** 熊证 */
  OBJECT_SECUWarrantCharacter_WarrantChBear = 4,

  /** 其他 */
  OBJECT_SECUWarrantCharacter_WarrantChOth = 5,

  /** 界内证 */
  OBJECT_SECUWarrantCharacter_WarrantChInline = 6,
};

GPBEnumDescriptor *OBJECT_SECUWarrantCharacter_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUWarrantCharacter_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUWarrantIssuerId

/** 权证发行人 */
typedef GPB_ENUM(OBJECT_SECUWarrantIssuerId) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUWarrantIssuerId_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUWarrantIssuerId_IssuerNone = 0,

  /** 法兴 */
  OBJECT_SECUWarrantIssuerId_IssuerFaxing = 1,

  /** 法巴 */
  OBJECT_SECUWarrantIssuerId_IssuerFaba = 2,

  /** 瑞信 */
  OBJECT_SECUWarrantIssuerId_IssuerRuixin = 3,

  /** 花旗 */
  OBJECT_SECUWarrantIssuerId_IssuerHuaqi = 4,

  /** 东亚 */
  OBJECT_SECUWarrantIssuerId_IssuerDongya = 5,

  /** 高盛 */
  OBJECT_SECUWarrantIssuerId_IssuerGaosheng = 6,

  /** 汇丰 */
  OBJECT_SECUWarrantIssuerId_IssuerHuifeng = 7,

  /** 摩通 */
  OBJECT_SECUWarrantIssuerId_IssuerMotong = 8,

  /** 麦银 */
  OBJECT_SECUWarrantIssuerId_IssuerMaiyin = 9,

  /** 瑞银 */
  OBJECT_SECUWarrantIssuerId_IssuerRuiyin = 10,

  /** 中银 */
  OBJECT_SECUWarrantIssuerId_IssuerZhongyin = 11,

  /** 海通 */
  OBJECT_SECUWarrantIssuerId_IssuerHaitong = 12,

  /** 瑞通 */
  OBJECT_SECUWarrantIssuerId_IssuerRuitong = 13,

  /** 摩利 */
  OBJECT_SECUWarrantIssuerId_IssuerMoli = 14,

  /** 国君 */
  OBJECT_SECUWarrantIssuerId_IssuerGuojun = 15,
  OBJECT_SECUWarrantIssuerId_IssuerAll = 16,
};

GPBEnumDescriptor *OBJECT_SECUWarrantIssuerId_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUWarrantIssuerId_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUExerciseStyle

/** 行市方式 */
typedef GPB_ENUM(OBJECT_SECUExerciseStyle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUExerciseStyle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUExerciseStyle_ExerNone = 0,

  /** 欧式 */
  OBJECT_SECUExerciseStyle_ExerEur = 1,

  /** 美式 */
  OBJECT_SECUExerciseStyle_ExerUsa = 2,

  /** 百慕大 */
  OBJECT_SECUExerciseStyle_ExerBmd = 3,

  /** 其他 */
  OBJECT_SECUExerciseStyle_ExerOth = 99,
};

GPBEnumDescriptor *OBJECT_SECUExerciseStyle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUExerciseStyle_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUSettleMode

/** 交收方式 */
typedef GPB_ENUM(OBJECT_SECUSettleMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUSettleMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUSettleMode_SettleNone = 0,

  /** 现金 */
  OBJECT_SECUSettleMode_SettleCash = 1,

  /** 股票 */
  OBJECT_SECUSettleMode_SettleStock = 2,

  /** 其他 */
  OBJECT_SECUSettleMode_SettleOth = 3,
};

GPBEnumDescriptor *OBJECT_SECUSettleMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUSettleMode_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUGreyType

/** 暗盘类型 */
typedef GPB_ENUM(OBJECT_SECUGreyType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUGreyType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUGreyType_GreyNone = 0,

  /** 暗盘全天 */
  OBJECT_SECUGreyType_GreyAllday = 1,

  /** 暗盘半天 */
  OBJECT_SECUGreyType_GreyMorning = 2,
};

GPBEnumDescriptor *OBJECT_SECUGreyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUGreyType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUFundAssetType

/** 基金资产类型 */
typedef GPB_ENUM(OBJECT_SECUFundAssetType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUFundAssetType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUFundAssetType_FundAssetNone = 0,

  /** 股票 */
  OBJECT_SECUFundAssetType_FundAssetStock = 1,

  /** 商品 */
  OBJECT_SECUFundAssetType_FundAssetCommodity = 2,

  /** 货币 */
  OBJECT_SECUFundAssetType_FundAssetCurrency = 3,

  /** 期货 */
  OBJECT_SECUFundAssetType_FundAssetFuture = 4,

  /** 掉期 */
  OBJECT_SECUFundAssetType_FundAssetCds = 5,

  /** 多元化资产 */
  OBJECT_SECUFundAssetType_FundAssetMultiAsset = 6,

  /** 定息产品 */
  OBJECT_SECUFundAssetType_FundAssetFixed = 7,
};

GPBEnumDescriptor *OBJECT_SECUFundAssetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUFundAssetType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUStockFlagType

typedef GPB_ENUM(OBJECT_SECUStockFlagType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUStockFlagType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUStockFlagType_StockFlagNone = 0,

  /** 是否注册制 */
  OBJECT_SECUStockFlagType_StockFlagIsreg = 1,

  /** 是否尚未盈利 */
  OBJECT_SECUStockFlagType_StockFlagNoprofit = 2,

  /** 是否存在投票权差异 */
  OBJECT_SECUStockFlagType_StockFlagWtvr = 4,

  /** 是否具有协议控制架构 */
  OBJECT_SECUStockFlagType_StockFlagIsvie = 8,
};

GPBEnumDescriptor *OBJECT_SECUStockFlagType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUStockFlagType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUHKSecuFlagType

typedef GPB_ENUM(OBJECT_SECUHKSecuFlagType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUHKSecuFlagType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUHKSecuFlagType_HkSecuFlagNone = 0,

  /** 是否支持VCM */
  OBJECT_SECUHKSecuFlagType_HkSecuFlagVcm = 1,

  /** 是否支持CAS */
  OBJECT_SECUHKSecuFlagType_HkSecuFlagCas = 2,

  /** 是否支持POS */
  OBJECT_SECUHKSecuFlagType_HkSecuFlagPos = 4,

  /** 是否CCASS */
  OBJECT_SECUHKSecuFlagType_HkSecuFlagCcass = 8,

  /** 是否 Dummy security */
  OBJECT_SECUHKSecuFlagType_HkSecuFlagDummy = 16,
};

GPBEnumDescriptor *OBJECT_SECUHKSecuFlagType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUHKSecuFlagType_IsValidValue(int32_t value);

#pragma mark - Enum OBJECT_SECUOptionType

typedef GPB_ENUM(OBJECT_SECUOptionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OBJECT_SECUOptionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OBJECT_SECUOptionType_OtUnknown = 0,

  /** 正股期权 */
  OBJECT_SECUOptionType_OtSecurity = 1,

  /** 指数期权 */
  OBJECT_SECUOptionType_OtIndex = 2,
};

GPBEnumDescriptor *OBJECT_SECUOptionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OBJECT_SECUOptionType_IsValidValue(int32_t value);

#pragma mark - OBJECT_SECUSecuRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface OBJECT_SECUSecuRoot : GPBRootObject
@end

#pragma mark - OBJECT_SECUFullID

typedef GPB_ENUM(OBJECT_SECUFullID_FieldNumber) {
  OBJECT_SECUFullID_FieldNumber_Exchange = 1,
  OBJECT_SECUFullID_FieldNumber_Market = 2,
  OBJECT_SECUFullID_FieldNumber_Code = 3,
};

GPB_FINAL @interface OBJECT_SECUFullID : GPBMessage

@property(nonatomic, readwrite) enum OBJECT_MARKETExchange exchange;

@property(nonatomic, readwrite) enum OBJECT_MARKETMarketId market;

/** 证券代码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUFullID's @c exchange property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUFullID_Exchange_RawValue(OBJECT_SECUFullID *message);
/**
 * Sets the raw value of an @c OBJECT_SECUFullID's @c exchange property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUFullID_Exchange_RawValue(OBJECT_SECUFullID *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUFullID's @c market property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUFullID_Market_RawValue(OBJECT_SECUFullID *message);
/**
 * Sets the raw value of an @c OBJECT_SECUFullID's @c market property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUFullID_Market_RawValue(OBJECT_SECUFullID *message, int32_t value);

#pragma mark - OBJECT_SECUCorrectSecuName

typedef GPB_ENUM(OBJECT_SECUCorrectSecuName_FieldNumber) {
  OBJECT_SECUCorrectSecuName_FieldNumber_Id_p = 1,
  OBJECT_SECUCorrectSecuName_FieldNumber_SecuNamesArray = 2,
};

GPB_FINAL @interface OBJECT_SECUCorrectSecuName : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUSecurityName*> *secuNamesArray;
/** The number of items in @c secuNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger secuNamesArray_Count;

@end

#pragma mark - OBJECT_SECUBriefInfo

typedef GPB_ENUM(OBJECT_SECUBriefInfo_FieldNumber) {
  OBJECT_SECUBriefInfo_FieldNumber_Name = 1,
  OBJECT_SECUBriefInfo_FieldNumber_SecuNamesArray = 2,
};

GPB_FINAL @interface OBJECT_SECUBriefInfo : GPBMessage

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 国际化 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUSecurityName*> *secuNamesArray;
/** The number of items in @c secuNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger secuNamesArray_Count;

@end

#pragma mark - OBJECT_SECUSecurityName

typedef GPB_ENUM(OBJECT_SECUSecurityName_FieldNumber) {
  OBJECT_SECUSecurityName_FieldNumber_Lang = 1,
  OBJECT_SECUSecurityName_FieldNumber_Name = 2,
};

GPB_FINAL @interface OBJECT_SECUSecurityName : GPBMessage

/** 语言 */
@property(nonatomic, readwrite) enum COMMONLangType lang;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUSecurityName's @c lang property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUSecurityName_Lang_RawValue(OBJECT_SECUSecurityName *message);
/**
 * Sets the raw value of an @c OBJECT_SECUSecurityName's @c lang property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUSecurityName_Lang_RawValue(OBJECT_SECUSecurityName *message, int32_t value);

#pragma mark - OBJECT_SECUInfo

typedef GPB_ENUM(OBJECT_SECUInfo_FieldNumber) {
  OBJECT_SECUInfo_FieldNumber_Name = 1,
  OBJECT_SECUInfo_FieldNumber_Exchange = 2,
  OBJECT_SECUInfo_FieldNumber_Type1 = 3,
  OBJECT_SECUInfo_FieldNumber_Type2 = 4,
  OBJECT_SECUInfo_FieldNumber_Type3 = 5,
  OBJECT_SECUInfo_FieldNumber_ListStatus = 6,
  OBJECT_SECUInfo_FieldNumber_SecuNamesArray = 7,
  OBJECT_SECUInfo_FieldNumber_ScmType = 8,
  OBJECT_SECUInfo_FieldNumber_VcmFlag = 9,
  OBJECT_SECUInfo_FieldNumber_CasFlag = 10,
  OBJECT_SECUInfo_FieldNumber_ShortSellFlag = 11,
  OBJECT_SECUInfo_FieldNumber_GreyFlag = 12,
  OBJECT_SECUInfo_FieldNumber_Stc = 13,
  OBJECT_SECUInfo_FieldNumber_ListSector = 14,
  OBJECT_SECUInfo_FieldNumber_Margin = 15,
  OBJECT_SECUInfo_FieldNumber_MarginRatio = 16,
  OBJECT_SECUInfo_FieldNumber_DailyMargin = 17,
  OBJECT_SECUInfo_FieldNumber_DailyMarginGearing = 18,
  OBJECT_SECUInfo_FieldNumber_AStockFlag = 19,
  OBJECT_SECUInfo_FieldNumber_HkSecuFlag = 20,
  OBJECT_SECUInfo_FieldNumber_Stock = 21,
  OBJECT_SECUInfo_FieldNumber_Fund = 22,
  OBJECT_SECUInfo_FieldNumber_Bond = 23,
  OBJECT_SECUInfo_FieldNumber_Warrant = 24,
  OBJECT_SECUInfo_FieldNumber_Index = 25,
  OBJECT_SECUInfo_FieldNumber_Sector = 26,
  OBJECT_SECUInfo_FieldNumber_Option = 27,
  OBJECT_SECUInfo_FieldNumber_SpreadTab = 28,
};

GPB_FINAL @interface OBJECT_SECUInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) enum OBJECT_MARKETExchange exchange;

@property(nonatomic, readwrite) OBJECT_SECUSecuType1 type1;

@property(nonatomic, readwrite) OBJECT_SECUSecuType2 type2;

@property(nonatomic, readwrite) OBJECT_SECUSecuType3 type3;

@property(nonatomic, readwrite) OBJECT_SECUListStatus listStatus;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUSecurityName*> *secuNamesArray;
/** The number of items in @c secuNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger secuNamesArray_Count;

/** 按位使用，0x1-沪股通,0x2-深股通,0x4-港股通（沪）, 0x8-港股通（深） */
@property(nonatomic, readwrite) uint32_t scmType;

/** 以后不使用，为了兼容性先保留 */
@property(nonatomic, readwrite) BOOL vcmFlag;

/** 以后不使用，为了兼容性先保留 */
@property(nonatomic, readwrite) BOOL casFlag;

/** 沽空标志 */
@property(nonatomic, readwrite) BOOL shortSellFlag;

@property(nonatomic, readwrite) OBJECT_SECUGreyType greyFlag;

/** 价位表 */
@property(nonatomic, readwrite) OBJECT_SECUSpreadTableCode stc;

/** 上市板块 */
@property(nonatomic, readwrite) enum OBJECT_MARKETListedSector listSector;

@property(nonatomic, readwrite) int32_t margin;

@property(nonatomic, readwrite) double marginRatio;

/** 日内融标识 */
@property(nonatomic, readwrite) BOOL dailyMargin;

/** 日内融杠杆比例 */
@property(nonatomic, readwrite) double dailyMarginGearing;

/** A股相关股票标识 科创版,创业板相关,按位与，参考枚举：StockFlagType */
@property(nonatomic, readwrite) int32_t aStockFlag;

/** 港股证券相关标识: VCM,CAS,POS,CCASS,Dummy security, 参考HKSecuFlagType */
@property(nonatomic, readwrite) int32_t hkSecuFlag;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUStockInfo *stock;
/** Test to see if @c stock has been set. */
@property(nonatomic, readwrite) BOOL hasStock;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFundInfo *fund;
/** Test to see if @c fund has been set. */
@property(nonatomic, readwrite) BOOL hasFund;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUBondInfo *bond;
/** Test to see if @c bond has been set. */
@property(nonatomic, readwrite) BOOL hasBond;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUWarrantInfo *warrant;
/** Test to see if @c warrant has been set. */
@property(nonatomic, readwrite) BOOL hasWarrant;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUIndexInfo *index;
/** Test to see if @c index has been set. */
@property(nonatomic, readwrite) BOOL hasIndex;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUSectorInfo *sector;
/** Test to see if @c sector has been set. */
@property(nonatomic, readwrite) BOOL hasSector;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUOptionInfo *option;
/** Test to see if @c option has been set. */
@property(nonatomic, readwrite) BOOL hasOption;

/**
 * 价差，sg市场使用，形如："0.001 0.199 0.005 0.995 0.01 99.99 0.1 199.9 0.2 499.8 0.5"
 * 含义为：小于等于0.199价差为0.001，大于0.199小于等于0.995价差为0.005，大于0.995小于等于99.99价差为0.01，大于499.8为0.5
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *spreadTab;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c exchange property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_Exchange_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c exchange property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_Exchange_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c type1 property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_Type1_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c type1 property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_Type1_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c type2 property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_Type2_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c type2 property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_Type2_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c type3 property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_Type3_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c type3 property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_Type3_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c listStatus property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_ListStatus_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c listStatus property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_ListStatus_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c greyFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_GreyFlag_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c greyFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_GreyFlag_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c stc property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_Stc_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c stc property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_Stc_RawValue(OBJECT_SECUInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUInfo's @c listSector property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUInfo_ListSector_RawValue(OBJECT_SECUInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUInfo's @c listSector property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUInfo_ListSector_RawValue(OBJECT_SECUInfo *message, int32_t value);

#pragma mark - OBJECT_SECUStockInfo

typedef GPB_ENUM(OBJECT_SECUStockInfo_FieldNumber) {
  OBJECT_SECUStockInfo_FieldNumber_AhId = 1,
  OBJECT_SECUStockInfo_FieldNumber_AhInfo = 2,
  OBJECT_SECUStockInfo_FieldNumber_Currency = 3,
  OBJECT_SECUStockInfo_FieldNumber_IssuedShare = 4,
  OBJECT_SECUStockInfo_FieldNumber_FloatShare = 5,
  OBJECT_SECUStockInfo_FieldNumber_Eps = 6,
  OBJECT_SECUStockInfo_FieldNumber_EpsTtm = 7,
  OBJECT_SECUStockInfo_FieldNumber_Bvps = 8,
  OBJECT_SECUStockInfo_FieldNumber_Dividend = 9,
  OBJECT_SECUStockInfo_FieldNumber_NetAsset = 10,
  OBJECT_SECUStockInfo_FieldNumber_NetIncomeLastYear = 11,
  OBJECT_SECUStockInfo_FieldNumber_NetIncomeLtm = 12,
  OBJECT_SECUStockInfo_FieldNumber_TotalDividend = 13,
  OBJECT_SECUStockInfo_FieldNumber_TotalRevenues = 14,
  OBJECT_SECUStockInfo_FieldNumber_TrdUnit = 16,
  OBJECT_SECUStockInfo_FieldNumber_ListDate = 17,
  OBJECT_SECUStockInfo_FieldNumber_IssuePrice = 18,
  OBJECT_SECUStockInfo_FieldNumber_FirstDayClosePrice = 19,
  OBJECT_SECUStockInfo_FieldNumber_IndustrySectorId = 20,
  OBJECT_SECUStockInfo_FieldNumber_IndustryInfo = 21,
  OBJECT_SECUStockInfo_FieldNumber_AdrId = 30,
  OBJECT_SECUStockInfo_FieldNumber_AdrInfo = 31,
  OBJECT_SECUStockInfo_FieldNumber_RelateId = 32,
  OBJECT_SECUStockInfo_FieldNumber_RelateInfo = 33,
};

GPB_FINAL @interface OBJECT_SECUStockInfo : GPBMessage

/** AH对应股 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *ahId;
/** Test to see if @c ahId has been set. */
@property(nonatomic, readwrite) BOOL hasAhId;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *ahInfo;
/** Test to see if @c ahInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAhInfo;

/** 货币类型 */
@property(nonatomic, readwrite) OBJECT_SECUCurrencyType currency;

/** 总股本 */
@property(nonatomic, readwrite) uint64_t issuedShare;

/** 流通股本 */
@property(nonatomic, readwrite) uint64_t floatShare;

/** 每股收益 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t eps;

/** 每股收益预测，用于计算市盈率 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t epsTtm;

/** 每股净资产 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t bvps;

/** 股息 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t dividend;

/** 最新年度净资产 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netAsset;

/** 最新年度净利润 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netIncomeLastYear;

/** 滚动年度净利润 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netIncomeLtm;

/** 近12个月分红综合 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t totalDividend;

/** 营业收入 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t totalRevenues;

/** 每手股数 */
@property(nonatomic, readwrite) uint32_t trdUnit;

/** 上市日期 */
@property(nonatomic, readwrite) int64_t listDate;

/** 发行价  实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t issuePrice;

/** 上市首日收盘价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t firstDayClosePrice;

/** 股票所属行业板块 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *industrySectorId;
/** Test to see if @c industrySectorId has been set. */
@property(nonatomic, readwrite) BOOL hasIndustrySectorId;

/** 所属行业静态数据 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUBriefInfo *industryInfo;
/** Test to see if @c industryInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIndustryInfo;

/** ADR对应股票 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *adrId;
/** Test to see if @c adrId has been set. */
@property(nonatomic, readwrite) BOOL hasAdrId;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *adrInfo;
/** Test to see if @c adrInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAdrInfo;

/** 代码关联 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *relateId;
/** Test to see if @c relateId has been set. */
@property(nonatomic, readwrite) BOOL hasRelateId;

/** */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *relateInfo;
/** Test to see if @c relateInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRelateInfo;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUStockInfo's @c currency property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUStockInfo_Currency_RawValue(OBJECT_SECUStockInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUStockInfo's @c currency property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUStockInfo_Currency_RawValue(OBJECT_SECUStockInfo *message, int32_t value);

#pragma mark - OBJECT_SECUFundInfo

typedef GPB_ENUM(OBJECT_SECUFundInfo_FieldNumber) {
  OBJECT_SECUFundInfo_FieldNumber_Currency = 1,
  OBJECT_SECUFundInfo_FieldNumber_NavPs = 2,
  OBJECT_SECUFundInfo_FieldNumber_TrdUnit = 3,
  OBJECT_SECUFundInfo_FieldNumber_IssuedShare = 4,
  OBJECT_SECUFundInfo_FieldNumber_FloatShare = 5,
  OBJECT_SECUFundInfo_FieldNumber_Eps = 6,
  OBJECT_SECUFundInfo_FieldNumber_EpsTtm = 7,
  OBJECT_SECUFundInfo_FieldNumber_Bvps = 8,
  OBJECT_SECUFundInfo_FieldNumber_Dividend = 9,
  OBJECT_SECUFundInfo_FieldNumber_NetAsset = 10,
  OBJECT_SECUFundInfo_FieldNumber_NetIncomeLastYear = 11,
  OBJECT_SECUFundInfo_FieldNumber_NetIncomeLtm = 12,
  OBJECT_SECUFundInfo_FieldNumber_TotalDividend = 13,
  OBJECT_SECUFundInfo_FieldNumber_IssuePrice = 14,
  OBJECT_SECUFundInfo_FieldNumber_ListDate = 15,
  OBJECT_SECUFundInfo_FieldNumber_TotalAsset = 16,
  OBJECT_SECUFundInfo_FieldNumber_AssetType = 17,
  OBJECT_SECUFundInfo_FieldNumber_Lever = 18,
  OBJECT_SECUFundInfo_FieldNumber_IndustrySectorId = 19,
  OBJECT_SECUFundInfo_FieldNumber_IndustryInfo = 20,
};

GPB_FINAL @interface OBJECT_SECUFundInfo : GPBMessage

/** 货币类型 */
@property(nonatomic, readwrite) OBJECT_SECUCurrencyType currency;

/** 基金净值 */
@property(nonatomic, readwrite) int64_t navPs;

/** 每手股数 */
@property(nonatomic, readwrite) uint32_t trdUnit;

/** 总股本 */
@property(nonatomic, readwrite) uint64_t issuedShare;

/** 流通股数 */
@property(nonatomic, readwrite) uint64_t floatShare;

/** 每股收益 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t eps;

/** 每股收益预测，用于计算市盈率 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t epsTtm;

/** 每股净资产 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t bvps;

/** 股息 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t dividend;

/** 最新年度净资产 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netAsset;

/** 最新年度净利润 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netIncomeLastYear;

/** 滚动年度净利润 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t netIncomeLtm;

/** 近12个月分红综合 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t totalDividend;

/** 发行价  实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t issuePrice;

/** 上市日期 */
@property(nonatomic, readwrite) int64_t listDate;

/** 总资产 */
@property(nonatomic, readwrite) int64_t totalAsset;

/** 资产类型 */
@property(nonatomic, readwrite) OBJECT_SECUFundAssetType assetType;

/** 杠杆比例 */
@property(nonatomic, readwrite) int32_t lever;

/** 股票所属行业板块 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *industrySectorId;
/** Test to see if @c industrySectorId has been set. */
@property(nonatomic, readwrite) BOOL hasIndustrySectorId;

/** 所属行业静态数据 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUBriefInfo *industryInfo;
/** Test to see if @c industryInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIndustryInfo;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUFundInfo's @c currency property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUFundInfo_Currency_RawValue(OBJECT_SECUFundInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUFundInfo's @c currency property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUFundInfo_Currency_RawValue(OBJECT_SECUFundInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUFundInfo's @c assetType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUFundInfo_AssetType_RawValue(OBJECT_SECUFundInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUFundInfo's @c assetType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUFundInfo_AssetType_RawValue(OBJECT_SECUFundInfo *message, int32_t value);

#pragma mark - OBJECT_SECUWarrantInfo

typedef GPB_ENUM(OBJECT_SECUWarrantInfo_FieldNumber) {
  OBJECT_SECUWarrantInfo_FieldNumber_Currency = 1,
  OBJECT_SECUWarrantInfo_FieldNumber_CallPutFlag = 2,
  OBJECT_SECUWarrantInfo_FieldNumber_ConversionRatio = 3,
  OBJECT_SECUWarrantInfo_FieldNumber_TrdUnit = 4,
  OBJECT_SECUWarrantInfo_FieldNumber_StrikePrice = 5,
  OBJECT_SECUWarrantInfo_FieldNumber_MaturityDate = 6,
  OBJECT_SECUWarrantInfo_FieldNumber_LastTrdDate = 8,
  OBJECT_SECUWarrantInfo_FieldNumber_OutstandingQty = 9,
  OBJECT_SECUWarrantInfo_FieldNumber_OutstandingPct = 10,
  OBJECT_SECUWarrantInfo_FieldNumber_CallPrice = 11,
  OBJECT_SECUWarrantInfo_FieldNumber_UnderlingId = 12,
  OBJECT_SECUWarrantInfo_FieldNumber_UnderlingInfo = 13,
  OBJECT_SECUWarrantInfo_FieldNumber_StrikeUpper = 15,
  OBJECT_SECUWarrantInfo_FieldNumber_StrikeLower = 16,
  OBJECT_SECUWarrantInfo_FieldNumber_IssueShares = 17,
};

GPB_FINAL @interface OBJECT_SECUWarrantInfo : GPBMessage

/** 货币类型 */
@property(nonatomic, readwrite) OBJECT_SECUCurrencyType currency;

/** 类型 */
@property(nonatomic, readwrite) OBJECT_SECUCallPutType callPutFlag;

/** 换股比率 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) uint64_t conversionRatio;

/** 每手股数 */
@property(nonatomic, readwrite) uint32_t trdUnit;

/** 行使价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t strikePrice;

/** 到期时间 YYYYMMDDHHMMSSsss */
@property(nonatomic, readwrite) uint64_t maturityDate;

/** 最后交易日 */
@property(nonatomic, readwrite) uint64_t lastTrdDate;

/** 街货量 */
@property(nonatomic, readwrite) uint64_t outstandingQty;

/** 街货比  实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int32_t outstandingPct;

/** 牛熊证收回价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t callPrice;

/** 相关资产 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *underlingId;
/** Test to see if @c underlingId has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlingId;

/** 资产信息 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *underlingInfo;
/** Test to see if @c underlingInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlingInfo;

/** 界内证上限价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t strikeUpper;

/** 界内证下限价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t strikeLower;

/** 界内证发行量 */
@property(nonatomic, readwrite) int64_t issueShares;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUWarrantInfo's @c currency property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUWarrantInfo_Currency_RawValue(OBJECT_SECUWarrantInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUWarrantInfo's @c currency property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUWarrantInfo_Currency_RawValue(OBJECT_SECUWarrantInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUWarrantInfo's @c callPutFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUWarrantInfo_CallPutFlag_RawValue(OBJECT_SECUWarrantInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUWarrantInfo's @c callPutFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUWarrantInfo_CallPutFlag_RawValue(OBJECT_SECUWarrantInfo *message, int32_t value);

#pragma mark - OBJECT_SECUBondInfo

typedef GPB_ENUM(OBJECT_SECUBondInfo_FieldNumber) {
  OBJECT_SECUBondInfo_FieldNumber_Currency = 1,
  OBJECT_SECUBondInfo_FieldNumber_TrdUnit = 2,
  OBJECT_SECUBondInfo_FieldNumber_TotalAsset = 3,
};

GPB_FINAL @interface OBJECT_SECUBondInfo : GPBMessage

/** 货币类型 */
@property(nonatomic, readwrite) OBJECT_SECUCurrencyType currency;

/** 每手股数 */
@property(nonatomic, readwrite) uint32_t trdUnit;

/** 资产规模 */
@property(nonatomic, readwrite) int64_t totalAsset;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUBondInfo's @c currency property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUBondInfo_Currency_RawValue(OBJECT_SECUBondInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUBondInfo's @c currency property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUBondInfo_Currency_RawValue(OBJECT_SECUBondInfo *message, int32_t value);

#pragma mark - OBJECT_SECUSectorInfo

typedef GPB_ENUM(OBJECT_SECUSectorInfo_FieldNumber) {
  OBJECT_SECUSectorInfo_FieldNumber_IssuedShare = 1,
  OBJECT_SECUSectorInfo_FieldNumber_FloatShare = 2,
};

GPB_FINAL @interface OBJECT_SECUSectorInfo : GPBMessage

/** 总股本 */
@property(nonatomic, readwrite) uint64_t issuedShare;

/** 流通股数 */
@property(nonatomic, readwrite) uint64_t floatShare;

@end

#pragma mark - OBJECT_SECUIndexInfo

GPB_FINAL @interface OBJECT_SECUIndexInfo : GPBMessage

@end

#pragma mark - OBJECT_SECUOptionInfo

typedef GPB_ENUM(OBJECT_SECUOptionInfo_FieldNumber) {
  OBJECT_SECUOptionInfo_FieldNumber_Currency = 1,
  OBJECT_SECUOptionInfo_FieldNumber_CallPutFlag = 2,
  OBJECT_SECUOptionInfo_FieldNumber_ContractSize = 3,
  OBJECT_SECUOptionInfo_FieldNumber_StrikePrice = 4,
  OBJECT_SECUOptionInfo_FieldNumber_ExpDate = 5,
  OBJECT_SECUOptionInfo_FieldNumber_UnderlingId = 6,
  OBJECT_SECUOptionInfo_FieldNumber_UnderlingInfo = 7,
  OBJECT_SECUOptionInfo_FieldNumber_ExerciseStyle = 8,
  OBJECT_SECUOptionInfo_FieldNumber_Multiplier = 9,
  OBJECT_SECUOptionInfo_FieldNumber_OptionSymbol = 10,
};

GPB_FINAL @interface OBJECT_SECUOptionInfo : GPBMessage

/** 货币类型 */
@property(nonatomic, readwrite) OBJECT_SECUCurrencyType currency;

/** 类型 */
@property(nonatomic, readwrite) OBJECT_SECUCallPutType callPutFlag;

/** 合约规模 */
@property(nonatomic, readwrite) uint32_t contractSize;

/** 行权价 实际值 =  除10^pricebase */
@property(nonatomic, readwrite) int64_t strikePrice;

/** 到期时间 YYYYMMDDHHMMSSsss */
@property(nonatomic, readwrite) uint64_t expDate;

/** 相关资产 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *underlingId;
/** Test to see if @c underlingId has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlingId;

/** 资产信息 */
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *underlingInfo;
/** Test to see if @c underlingInfo has been set. */
@property(nonatomic, readwrite) BOOL hasUnderlingInfo;

/** 行权方式 */
@property(nonatomic, readwrite) OBJECT_SECUExerciseStyle exerciseStyle;

/** 合约乘数 */
@property(nonatomic, readwrite) uint32_t multiplier;

/**
 * 当其他股票合并到当前股票时，如APHA合并到TLRY,其所产生对应的期权标的代码为TLRY1，区别为合约规模不同
 * 形成的对应关系: 期权*合约乘数（100）兑付 标的 * 合约规模（83）的价值关系
 **/
@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *optionSymbol;
/** Test to see if @c optionSymbol has been set. */
@property(nonatomic, readwrite) BOOL hasOptionSymbol;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUOptionInfo's @c currency property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUOptionInfo_Currency_RawValue(OBJECT_SECUOptionInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUOptionInfo's @c currency property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUOptionInfo_Currency_RawValue(OBJECT_SECUOptionInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUOptionInfo's @c callPutFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUOptionInfo_CallPutFlag_RawValue(OBJECT_SECUOptionInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUOptionInfo's @c callPutFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUOptionInfo_CallPutFlag_RawValue(OBJECT_SECUOptionInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUOptionInfo's @c exerciseStyle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUOptionInfo_ExerciseStyle_RawValue(OBJECT_SECUOptionInfo *message);
/**
 * Sets the raw value of an @c OBJECT_SECUOptionInfo's @c exerciseStyle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUOptionInfo_ExerciseStyle_RawValue(OBJECT_SECUOptionInfo *message, int32_t value);

#pragma mark - OBJECT_SECUSecuMeta

typedef GPB_ENUM(OBJECT_SECUSecuMeta_FieldNumber) {
  OBJECT_SECUSecuMeta_FieldNumber_Id_p = 1,
  OBJECT_SECUSecuMeta_FieldNumber_Pinyin = 2,
  OBJECT_SECUSecuMeta_FieldNumber_Info = 3,
  OBJECT_SECUSecuMeta_FieldNumber_AdjustArray = 4,
  OBJECT_SECUSecuMeta_FieldNumber_UsAdjustArray = 5,
  OBJECT_SECUSecuMeta_FieldNumber_PriceBase = 6,
};

GPB_FINAL @interface OBJECT_SECUSecuMeta : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pinyin;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUAdjustInfo*> *adjustArray;
/** The number of items in @c adjustArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger adjustArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUUsAdjustInfo*> *usAdjustArray;
/** The number of items in @c usAdjustArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger usAdjustArray_Count;

/** 价格小数计算基数，10的幂次表示 */
@property(nonatomic, readwrite) uint32_t priceBase;

@end

#pragma mark - OBJECT_SECUSectorMeta

typedef GPB_ENUM(OBJECT_SECUSectorMeta_FieldNumber) {
  OBJECT_SECUSectorMeta_FieldNumber_Id_p = 1,
  OBJECT_SECUSectorMeta_FieldNumber_Info = 2,
  OBJECT_SECUSectorMeta_FieldNumber_ConstituentArray = 3,
  OBJECT_SECUSectorMeta_FieldNumber_Pinyin = 4,
};

GPB_FINAL @interface OBJECT_SECUSectorMeta : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *constituentArray;
/** The number of items in @c constituentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger constituentArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pinyin;

@end

#pragma mark - OBJECT_SECUIndexMeta

typedef GPB_ENUM(OBJECT_SECUIndexMeta_FieldNumber) {
  OBJECT_SECUIndexMeta_FieldNumber_Id_p = 1,
  OBJECT_SECUIndexMeta_FieldNumber_Info = 2,
  OBJECT_SECUIndexMeta_FieldNumber_ConstituentArray = 3,
  OBJECT_SECUIndexMeta_FieldNumber_Pinyin = 4,
};

GPB_FINAL @interface OBJECT_SECUIndexMeta : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *constituentArray;
/** The number of items in @c constituentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger constituentArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pinyin;

@end

#pragma mark - OBJECT_SECUCodeListMeta

typedef GPB_ENUM(OBJECT_SECUCodeListMeta_FieldNumber) {
  OBJECT_SECUCodeListMeta_FieldNumber_SseArray = 1,
  OBJECT_SECUCodeListMeta_FieldNumber_ShgtArray = 2,
  OBJECT_SECUCodeListMeta_FieldNumber_SzseArray = 3,
  OBJECT_SECUCodeListMeta_FieldNumber_SzgtArray = 4,
  OBJECT_SECUCodeListMeta_FieldNumber_SectArray = 5,
  OBJECT_SECUCodeListMeta_FieldNumber_HkexArray = 6,
  OBJECT_SECUCodeListMeta_FieldNumber_HksectArray = 7,
  OBJECT_SECUCodeListMeta_FieldNumber_NasdaqArray = 8,
  OBJECT_SECUCodeListMeta_FieldNumber_NyseArray = 9,
  OBJECT_SECUCodeListMeta_FieldNumber_AmexArray = 10,
  OBJECT_SECUCodeListMeta_FieldNumber_ArcaArray = 11,
  OBJECT_SECUCodeListMeta_FieldNumber_BatsArray = 12,
  OBJECT_SECUCodeListMeta_FieldNumber_OtcArray = 13,
  OBJECT_SECUCodeListMeta_FieldNumber_GtshArray = 14,
  OBJECT_SECUCodeListMeta_FieldNumber_GtszArray = 15,
  OBJECT_SECUCodeListMeta_FieldNumber_UscomArray = 16,
};

/**
 * 代码链
 **/
GPB_FINAL @interface OBJECT_SECUCodeListMeta : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *sseArray;
/** The number of items in @c sseArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sseArray_Count;

/** 港股通（沪） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *shgtArray;
/** The number of items in @c shgtArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shgtArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *szseArray;
/** The number of items in @c szseArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger szseArray_Count;

/** 港股通（深） */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *szgtArray;
/** The number of items in @c szgtArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger szgtArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *sectArray;
/** The number of items in @c sectArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sectArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *hkexArray;
/** The number of items in @c hkexArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hkexArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *hksectArray;
/** The number of items in @c hksectArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hksectArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *nasdaqArray;
/** The number of items in @c nasdaqArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nasdaqArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *nyseArray;
/** The number of items in @c nyseArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nyseArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *amexArray;
/** The number of items in @c amexArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger amexArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *arcaArray;
/** The number of items in @c arcaArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger arcaArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *batsArray;
/** The number of items in @c batsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger batsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *otcArray;
/** The number of items in @c otcArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger otcArray_Count;

/** 沪股通 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *gtshArray;
/** The number of items in @c gtshArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gtshArray_Count;

/** 深股通 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *gtszArray;
/** The number of items in @c gtszArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gtszArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUFullID*> *uscomArray;
/** The number of items in @c uscomArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger uscomArray_Count;

@end

#pragma mark - OBJECT_SECUAdjustInfo

typedef GPB_ENUM(OBJECT_SECUAdjustInfo_FieldNumber) {
  OBJECT_SECUAdjustInfo_FieldNumber_Seq = 1,
  OBJECT_SECUAdjustInfo_FieldNumber_Date = 2,
  OBJECT_SECUAdjustInfo_FieldNumber_AdjustingFactor = 3,
  OBJECT_SECUAdjustInfo_FieldNumber_AdjustingConst = 4,
  OBJECT_SECUAdjustInfo_FieldNumber_AdjustFactor = 5,
  OBJECT_SECUAdjustInfo_FieldNumber_AdjustConst = 6,
  OBJECT_SECUAdjustInfo_FieldNumber_RadioAdjustingFactor = 7,
};

/**
 * 除复权
 **/
GPB_FINAL @interface OBJECT_SECUAdjustInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t seq;

@property(nonatomic, readwrite) uint64_t date;

/** 精确累计复权因子 */
@property(nonatomic, readwrite) float adjustingFactor;

/** 精确累计复权常数 */
@property(nonatomic, readwrite) float adjustingConst;

/** 精确复权因子 */
@property(nonatomic, readwrite) float adjustFactor;

/** 精确复权常数 */
@property(nonatomic, readwrite) float adjustConst;

/** 比例复权因子 */
@property(nonatomic, readwrite) float radioAdjustingFactor;

@end

#pragma mark - OBJECT_SECUUsAdjustInfo

typedef GPB_ENUM(OBJECT_SECUUsAdjustInfo_FieldNumber) {
  OBJECT_SECUUsAdjustInfo_FieldNumber_Seq = 1,
  OBJECT_SECUUsAdjustInfo_FieldNumber_Date = 2,
  OBJECT_SECUUsAdjustInfo_FieldNumber_BackwardFactor = 3,
  OBJECT_SECUUsAdjustInfo_FieldNumber_AccumulateFactor = 4,
  OBJECT_SECUUsAdjustInfo_FieldNumber_ForwardFactor = 5,
};

GPB_FINAL @interface OBJECT_SECUUsAdjustInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t seq;

@property(nonatomic, readwrite) uint64_t date;

/** 后复权因子 */
@property(nonatomic, readwrite) float backwardFactor;

/** 累计复权因子 */
@property(nonatomic, readwrite) float accumulateFactor;

/** 前复权因子 */
@property(nonatomic, readwrite) float forwardFactor;

@end

#pragma mark - OBJECT_SECUAHID

typedef GPB_ENUM(OBJECT_SECUAHID_FieldNumber) {
  OBJECT_SECUAHID_FieldNumber_Hid = 1,
  OBJECT_SECUAHID_FieldNumber_Aid = 2,
};

GPB_FINAL @interface OBJECT_SECUAHID : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *hid;
/** Test to see if @c hid has been set. */
@property(nonatomic, readwrite) BOOL hasHid;

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *aid;
/** Test to see if @c aid has been set. */
@property(nonatomic, readwrite) BOOL hasAid;

@end

#pragma mark - OBJECT_SECUCurrencyRate

typedef GPB_ENUM(OBJECT_SECUCurrencyRate_FieldNumber) {
  OBJECT_SECUCurrencyRate_FieldNumber_Local = 1,
  OBJECT_SECUCurrencyRate_FieldNumber_Foreign = 2,
  OBJECT_SECUCurrencyRate_FieldNumber_Factor = 3,
  OBJECT_SECUCurrencyRate_FieldNumber_Rate = 4,
};

GPB_FINAL @interface OBJECT_SECUCurrencyRate : GPBMessage

@property(nonatomic, readwrite) OBJECT_SECUCurrencyType local;

@property(nonatomic, readwrite) OBJECT_SECUCurrencyType foreign;

@property(nonatomic, readwrite) int64_t factor;

@property(nonatomic, readwrite) int64_t rate;

@end

/**
 * Fetches the raw value of a @c OBJECT_SECUCurrencyRate's @c local property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUCurrencyRate_Local_RawValue(OBJECT_SECUCurrencyRate *message);
/**
 * Sets the raw value of an @c OBJECT_SECUCurrencyRate's @c local property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUCurrencyRate_Local_RawValue(OBJECT_SECUCurrencyRate *message, int32_t value);

/**
 * Fetches the raw value of a @c OBJECT_SECUCurrencyRate's @c foreign property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_SECUCurrencyRate_Foreign_RawValue(OBJECT_SECUCurrencyRate *message);
/**
 * Sets the raw value of an @c OBJECT_SECUCurrencyRate's @c foreign property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_SECUCurrencyRate_Foreign_RawValue(OBJECT_SECUCurrencyRate *message, int32_t value);

#pragma mark - OBJECT_SECUAHInfo

typedef GPB_ENUM(OBJECT_SECUAHInfo_FieldNumber) {
  OBJECT_SECUAHInfo_FieldNumber_AhId = 1,
  OBJECT_SECUAHInfo_FieldNumber_Name = 2,
  OBJECT_SECUAHInfo_FieldNumber_SecuNamesArray = 3,
};

GPB_FINAL @interface OBJECT_SECUAHInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) OBJECT_SECUFullID *ahId;
/** Test to see if @c ahId has been set. */
@property(nonatomic, readwrite) BOOL hasAhId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OBJECT_SECUSecurityName*> *secuNamesArray;
/** The number of items in @c secuNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger secuNamesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
