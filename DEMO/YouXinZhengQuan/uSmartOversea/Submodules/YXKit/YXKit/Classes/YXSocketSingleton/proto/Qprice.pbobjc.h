// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qprice.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

GPB_ENUM_FWD_DECLARE(OBJECT_MARKETExchange);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - OBJECT_QUOTEQpriceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface OBJECT_QUOTEQpriceRoot : GPBRootObject
@end

#pragma mark - OBJECT_QUOTEQPriceData

typedef GPB_ENUM(OBJECT_QUOTEQPriceData_FieldNumber) {
  OBJECT_QUOTEQPriceData_FieldNumber_TradePrice = 1,
  OBJECT_QUOTEQPriceData_FieldNumber_Volume = 2,
  OBJECT_QUOTEQPriceData_FieldNumber_AskSize = 3,
  OBJECT_QUOTEQPriceData_FieldNumber_BidSize = 4,
  OBJECT_QUOTEQPriceData_FieldNumber_BothSize = 5,
  OBJECT_QUOTEQPriceData_FieldNumber_Rate = 6,
};

/**
 * 量价分布行情数据
 **/
GPB_FINAL @interface OBJECT_QUOTEQPriceData : GPBMessage

/** 价格 */
@property(nonatomic, readwrite) int64_t tradePrice;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 主卖成交量 */
@property(nonatomic, readwrite) uint64_t askSize;

/** 主买成交量 */
@property(nonatomic, readwrite) uint64_t bidSize;

/** 平盘成交量 */
@property(nonatomic, readwrite) uint64_t bothSize;

/** 占总成交量比例，使用时除100 */
@property(nonatomic, readwrite) int32_t rate;

@end

#pragma mark - OBJECT_QUOTEQExchangeData

typedef GPB_ENUM(OBJECT_QUOTEQExchangeData_FieldNumber) {
  OBJECT_QUOTEQExchangeData_FieldNumber_Exchange = 1,
  OBJECT_QUOTEQExchangeData_FieldNumber_Amount = 2,
  OBJECT_QUOTEQExchangeData_FieldNumber_Volume = 3,
  OBJECT_QUOTEQExchangeData_FieldNumber_AskSize = 4,
  OBJECT_QUOTEQExchangeData_FieldNumber_BidSize = 5,
  OBJECT_QUOTEQExchangeData_FieldNumber_BothSize = 6,
  OBJECT_QUOTEQExchangeData_FieldNumber_AmtRate = 7,
  OBJECT_QUOTEQExchangeData_FieldNumber_VolRate = 8,
};

/**
 * 交易所成交分布行情数据
 **/
GPB_FINAL @interface OBJECT_QUOTEQExchangeData : GPBMessage

/** 交易所 */
@property(nonatomic, readwrite) enum OBJECT_MARKETExchange exchange;

/** 成交额 */
@property(nonatomic, readwrite) uint64_t amount;

/** 成交量 */
@property(nonatomic, readwrite) uint64_t volume;

/** 主卖成交量 */
@property(nonatomic, readwrite) uint64_t askSize;

/** 主买成交量 */
@property(nonatomic, readwrite) uint64_t bidSize;

/** 平盘成交量 */
@property(nonatomic, readwrite) uint64_t bothSize;

/** 占总成交额比例，使用时除100 */
@property(nonatomic, readwrite) int32_t amtRate;

/** 占总成交量比例，使用时除100 */
@property(nonatomic, readwrite) int32_t volRate;

@end

/**
 * Fetches the raw value of a @c OBJECT_QUOTEQExchangeData's @c exchange property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OBJECT_QUOTEQExchangeData_Exchange_RawValue(OBJECT_QUOTEQExchangeData *message);
/**
 * Sets the raw value of an @c OBJECT_QUOTEQExchangeData's @c exchange property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOBJECT_QUOTEQExchangeData_Exchange_RawValue(OBJECT_QUOTEQExchangeData *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
