// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rank.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Rank.pbobjc.h"
#import "Quote.pbobjc.h"
#import "Market.pbobjc.h"
#import "Const.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(OBJECT_QUOTERankReq);
GPBObjCClassDeclaration(OBJECT_QUOTERankReqV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankRespList);
GPBObjCClassDeclaration(OBJECT_QUOTERankRespListV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorGatherResp);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorGatherRespV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorResp);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorRespData);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorRespDataV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankSectorRespV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockGatherResp);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockGatherRespV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockResp);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockRespData);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockRespDataV2);
GPBObjCClassDeclaration(OBJECT_QUOTERankStockRespV2);
GPBObjCClassDeclaration(OBJECT_QUOTESectorData);
GPBObjCClassDeclaration(OBJECT_QUOTESectorHistoryData);
GPBObjCClassDeclaration(OBJECT_QUOTEStockData);
GPBObjCClassDeclaration(OBJECT_QUOTEStockHistoryData);

#pragma mark - OBJECT_QUOTERankRoot

@implementation OBJECT_QUOTERankRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - OBJECT_QUOTERankRoot_FileDescriptor

static GPBFileDescriptor *OBJECT_QUOTERankRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"yx.quote.v2.object.quote"
                                                 objcPrefix:@"OBJECT_QUOTE"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum OBJECT_QUOTERankSortType

GPBEnumDescriptor *OBJECT_QUOTERankSortType_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "RstNone\000RstChangePct\000RstNow\000RstPclose\000Rs"
        "tVolume\000RstAmount\000RstOpen\000RstHigh\000RstLow"
        "\000RstCode\000RstTurnover\000RstPe\000RstChange\000Rst"
        "Fav\000RstAmplitude\000RstAccer5Min\000RstNetInfl"
        "ow\000RstContribution\000RstPremium\000RstMarturi"
        "tyDate\000RstShareValue\000RstPb\000RstListDate\000R"
        "stIssuePrice\000RstListDays\000RstIpoDayClose\000"
        "RstIpoDayChangePct\000RstAccuChangePct\000RstG"
        "reyChgPct\000RstWinningRate\000RstVolRatio\000Rst"
        "ChangePctAhA\000RstNowAhA\000RstCodeAhA\000RstCha"
        "ngeAhA\000RstAccer3Min\000RstDividendYield\000Rst"
        "MainNetin\000RstInFlow\000RstOutFlow\000RstMargin"
        "\000RstBail\000Rst5DayChgPct\000Rst10DayChgPct\000Rs"
        "t30DayChgPct\000Rst60DayChgPct\000Rst120DayChg"
        "Pct\000Rst250DayChgPct\000Rst1YearChgPct\000RstGe"
        "aringRatio\000RstMonthPlanUserNum\000RstLastwe"
        "ekChgPct\000";
    static const int32_t values[] = {
        OBJECT_QUOTERankSortType_RstNone,
        OBJECT_QUOTERankSortType_RstChangePct,
        OBJECT_QUOTERankSortType_RstNow,
        OBJECT_QUOTERankSortType_RstPclose,
        OBJECT_QUOTERankSortType_RstVolume,
        OBJECT_QUOTERankSortType_RstAmount,
        OBJECT_QUOTERankSortType_RstOpen,
        OBJECT_QUOTERankSortType_RstHigh,
        OBJECT_QUOTERankSortType_RstLow,
        OBJECT_QUOTERankSortType_RstCode,
        OBJECT_QUOTERankSortType_RstTurnover,
        OBJECT_QUOTERankSortType_RstPe,
        OBJECT_QUOTERankSortType_RstChange,
        OBJECT_QUOTERankSortType_RstFav,
        OBJECT_QUOTERankSortType_RstAmplitude,
        OBJECT_QUOTERankSortType_RstAccer5Min,
        OBJECT_QUOTERankSortType_RstNetInflow,
        OBJECT_QUOTERankSortType_RstContribution,
        OBJECT_QUOTERankSortType_RstPremium,
        OBJECT_QUOTERankSortType_RstMarturityDate,
        OBJECT_QUOTERankSortType_RstShareValue,
        OBJECT_QUOTERankSortType_RstPb,
        OBJECT_QUOTERankSortType_RstListDate,
        OBJECT_QUOTERankSortType_RstIssuePrice,
        OBJECT_QUOTERankSortType_RstListDays,
        OBJECT_QUOTERankSortType_RstIpoDayClose,
        OBJECT_QUOTERankSortType_RstIpoDayChangePct,
        OBJECT_QUOTERankSortType_RstAccuChangePct,
        OBJECT_QUOTERankSortType_RstGreyChgPct,
        OBJECT_QUOTERankSortType_RstWinningRate,
        OBJECT_QUOTERankSortType_RstVolRatio,
        OBJECT_QUOTERankSortType_RstChangePctAhA,
        OBJECT_QUOTERankSortType_RstNowAhA,
        OBJECT_QUOTERankSortType_RstCodeAhA,
        OBJECT_QUOTERankSortType_RstChangeAhA,
        OBJECT_QUOTERankSortType_RstAccer3Min,
        OBJECT_QUOTERankSortType_RstDividendYield,
        OBJECT_QUOTERankSortType_RstMainNetin,
        OBJECT_QUOTERankSortType_RstInFlow,
        OBJECT_QUOTERankSortType_RstOutFlow,
        OBJECT_QUOTERankSortType_RstMargin,
        OBJECT_QUOTERankSortType_RstBail,
        OBJECT_QUOTERankSortType_Rst5DayChgPct,
        OBJECT_QUOTERankSortType_Rst10DayChgPct,
        OBJECT_QUOTERankSortType_Rst30DayChgPct,
        OBJECT_QUOTERankSortType_Rst60DayChgPct,
        OBJECT_QUOTERankSortType_Rst120DayChgPct,
        OBJECT_QUOTERankSortType_Rst250DayChgPct,
        OBJECT_QUOTERankSortType_Rst1YearChgPct,
        OBJECT_QUOTERankSortType_RstGearingRatio,
        OBJECT_QUOTERankSortType_RstMonthPlanUserNum,
        OBJECT_QUOTERankSortType_RstLastweekChgPct,
    };
    static const char *extraTextFormatInfo = "\t\017c\345\201\343\000#c\345\201\343\000*c\202b\343\343\000+c\203b\343\343\000,c\203b\343\343\000-c\203b\343\343\000.c\204b\343\343\000/c\204b\343\343\0000c\205\343\343\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(OBJECT_QUOTERankSortType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:OBJECT_QUOTERankSortType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL OBJECT_QUOTERankSortType_IsValidValue(int32_t value__) {
  switch (value__) {
    case OBJECT_QUOTERankSortType_RstNone:
    case OBJECT_QUOTERankSortType_RstChangePct:
    case OBJECT_QUOTERankSortType_RstNow:
    case OBJECT_QUOTERankSortType_RstPclose:
    case OBJECT_QUOTERankSortType_RstVolume:
    case OBJECT_QUOTERankSortType_RstAmount:
    case OBJECT_QUOTERankSortType_RstOpen:
    case OBJECT_QUOTERankSortType_RstHigh:
    case OBJECT_QUOTERankSortType_RstLow:
    case OBJECT_QUOTERankSortType_RstCode:
    case OBJECT_QUOTERankSortType_RstTurnover:
    case OBJECT_QUOTERankSortType_RstPe:
    case OBJECT_QUOTERankSortType_RstChange:
    case OBJECT_QUOTERankSortType_RstFav:
    case OBJECT_QUOTERankSortType_RstAmplitude:
    case OBJECT_QUOTERankSortType_RstAccer5Min:
    case OBJECT_QUOTERankSortType_RstNetInflow:
    case OBJECT_QUOTERankSortType_RstContribution:
    case OBJECT_QUOTERankSortType_RstPremium:
    case OBJECT_QUOTERankSortType_RstMarturityDate:
    case OBJECT_QUOTERankSortType_RstShareValue:
    case OBJECT_QUOTERankSortType_RstPb:
    case OBJECT_QUOTERankSortType_RstListDate:
    case OBJECT_QUOTERankSortType_RstIssuePrice:
    case OBJECT_QUOTERankSortType_RstListDays:
    case OBJECT_QUOTERankSortType_RstIpoDayClose:
    case OBJECT_QUOTERankSortType_RstIpoDayChangePct:
    case OBJECT_QUOTERankSortType_RstAccuChangePct:
    case OBJECT_QUOTERankSortType_RstGreyChgPct:
    case OBJECT_QUOTERankSortType_RstWinningRate:
    case OBJECT_QUOTERankSortType_RstVolRatio:
    case OBJECT_QUOTERankSortType_RstChangePctAhA:
    case OBJECT_QUOTERankSortType_RstNowAhA:
    case OBJECT_QUOTERankSortType_RstCodeAhA:
    case OBJECT_QUOTERankSortType_RstChangeAhA:
    case OBJECT_QUOTERankSortType_RstAccer3Min:
    case OBJECT_QUOTERankSortType_RstDividendYield:
    case OBJECT_QUOTERankSortType_RstMainNetin:
    case OBJECT_QUOTERankSortType_RstInFlow:
    case OBJECT_QUOTERankSortType_RstOutFlow:
    case OBJECT_QUOTERankSortType_RstMargin:
    case OBJECT_QUOTERankSortType_RstBail:
    case OBJECT_QUOTERankSortType_Rst5DayChgPct:
    case OBJECT_QUOTERankSortType_Rst10DayChgPct:
    case OBJECT_QUOTERankSortType_Rst30DayChgPct:
    case OBJECT_QUOTERankSortType_Rst60DayChgPct:
    case OBJECT_QUOTERankSortType_Rst120DayChgPct:
    case OBJECT_QUOTERankSortType_Rst250DayChgPct:
    case OBJECT_QUOTERankSortType_Rst1YearChgPct:
    case OBJECT_QUOTERankSortType_RstGearingRatio:
    case OBJECT_QUOTERankSortType_RstMonthPlanUserNum:
    case OBJECT_QUOTERankSortType_RstLastweekChgPct:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - OBJECT_QUOTERankReq

@implementation OBJECT_QUOTERankReq

@dynamic sorttype;
@dynamic sortdirection;
@dynamic pagedirection;
@dynamic from;
@dynamic count;
@dynamic code;
@dynamic market;
@dynamic lang;
@dynamic level;

typedef struct OBJECT_QUOTERankReq__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_QUOTERankSortType sorttype;
  int32_t sortdirection;
  int32_t pagedirection;
  int32_t from;
  int32_t lang;
  int32_t level;
  NSString *code;
  NSString *market;
  uint64_t count;
} OBJECT_QUOTERankReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sorttype",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankReq_FieldNumber_Sorttype,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, sorttype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortdirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Sortdirection,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, sortdirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pagedirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Pagedirection,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, pagedirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_From,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Count,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Code,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "market",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Market,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lang",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Lang,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReq_FieldNumber_Level,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReq__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankReq class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankReq_Sorttype_RawValue(OBJECT_QUOTERankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankReq_FieldNumber_Sorttype];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankReq_Sorttype_RawValue(OBJECT_QUOTERankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankReq_FieldNumber_Sorttype];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTEMultipleRankReq

@implementation OBJECT_QUOTEMultipleRankReq

@dynamic codelistArray, codelistArray_Count;

typedef struct OBJECT_QUOTEMultipleRankReq__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *codelistArray;
} OBJECT_QUOTEMultipleRankReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "codelistArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankReq),
        .number = OBJECT_QUOTEMultipleRankReq_FieldNumber_CodelistArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankReq__storage_, codelistArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEMultipleRankReq class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEMultipleRankReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTEMultipleRankResp

@implementation OBJECT_QUOTEMultipleRankResp

@dynamic code;
@dynamic msg;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTEMultipleRankResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  NSString *msg;
  OBJECT_QUOTERankRespList *data_p;
} OBJECT_QUOTEMultipleRankResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEMultipleRankResp_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankResp__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEMultipleRankResp_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankResp__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankRespList),
        .number = OBJECT_QUOTEMultipleRankResp_FieldNumber_Data_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankResp__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEMultipleRankResp class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEMultipleRankResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankRespList

@implementation OBJECT_QUOTERankRespList

@dynamic stockListArray, stockListArray_Count;
@dynamic sectorListArray, sectorListArray_Count;

typedef struct OBJECT_QUOTERankRespList__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *stockListArray;
  NSMutableArray *sectorListArray;
} OBJECT_QUOTERankRespList__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "stockListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockGatherResp),
        .number = OBJECT_QUOTERankRespList_FieldNumber_StockListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankRespList__storage_, stockListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sectorListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorGatherResp),
        .number = OBJECT_QUOTERankRespList_FieldNumber_SectorListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankRespList__storage_, sectorListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankRespList class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankRespList__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\000stockList\000\002\000sectorList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankStockGatherResp

@implementation OBJECT_QUOTERankStockGatherResp

@dynamic code;
@dynamic msg;
@dynamic level;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTERankStockGatherResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t level;
  NSString *msg;
  OBJECT_QUOTERankStockRespData *data_p;
} OBJECT_QUOTERankStockGatherResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherResp_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherResp__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherResp_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherResp__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherResp_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherResp__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockRespData),
        .number = OBJECT_QUOTERankStockGatherResp_FieldNumber_Data_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherResp__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockGatherResp class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockGatherResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankStockRespData

@implementation OBJECT_QUOTERankStockRespData

@dynamic from;
@dynamic count;
@dynamic total;
@dynamic rise;
@dynamic draw;
@dynamic fall;
@dynamic limitUp;
@dynamic limitDown;
@dynamic suspend;
@dynamic detailArray, detailArray_Count;
@dynamic rankCode;
@dynamic rankMarket;
@dynamic sorttype;
@dynamic sortdirection;
@dynamic pagedirection;
@dynamic listArray, listArray_Count;

typedef struct OBJECT_QUOTERankStockRespData__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t rise;
  int32_t draw;
  int32_t fall;
  int32_t limitUp;
  int32_t limitDown;
  int32_t suspend;
  OBJECT_QUOTERankSortType sorttype;
  int32_t sortdirection;
  int32_t pagedirection;
  GPBInt32Array *detailArray;
  NSString *rankCode;
  NSString *rankMarket;
  NSMutableArray *listArray;
  uint64_t count;
  uint64_t total;
} OBJECT_QUOTERankStockRespData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "total",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Total,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, total),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "rise",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Rise,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, rise),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "draw",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Draw,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, draw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fall",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Fall,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, fall),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitUp",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_LimitUp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, limitUp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitDown",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_LimitDown,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, limitDown),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "suspend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Suspend,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, suspend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "detailArray",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_DetailArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, detailArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rankCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_RankCode,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, rankCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_RankMarket,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, rankMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sorttype",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Sorttype,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, sorttype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortdirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Sortdirection,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, sortdirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pagedirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_Pagedirection,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, pagedirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "listArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockResp),
        .number = OBJECT_QUOTERankStockRespData_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespData__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockRespData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockRespData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankStockRespData_Sorttype_RawValue(OBJECT_QUOTERankStockRespData *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespData_FieldNumber_Sorttype];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankStockRespData_Sorttype_RawValue(OBJECT_QUOTERankStockRespData *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespData_FieldNumber_Sorttype];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankStockResp

@implementation OBJECT_QUOTERankStockResp

@dynamic secuCode;
@dynamic chsNameAbbr;
@dynamic trdMarket;
@dynamic priceBase;
@dynamic quoteTime;
@dynamic quoteType;
@dynamic prevClose;
@dynamic openPrice;
@dynamic latestPrice;
@dynamic highPrice;
@dynamic lowPrice;
@dynamic closePrice;
@dynamic avgPrice;
@dynamic netchng;
@dynamic pctchng;
@dynamic volume;
@dynamic trunover;
@dynamic outstandingShares;
@dynamic outstandingCap;
@dynamic totalStockissue;
@dynamic totalMarcketvalue;
@dynamic inner;
@dynamic outer;
@dynamic peStatic;
@dynamic peTtm;
@dynamic pb;
@dynamic turnoverRate;
@dynamic amplitude;
@dynamic volRatio;
@dynamic ipoflag;
@dynamic listDate;
@dynamic listDays;
@dynamic issuePrice;
@dynamic ipoDayPctchng;
@dynamic ipoDayClose;
@dynamic accuPctchng;
@dynamic tradingStatus;
@dynamic adrCode;
@dynamic adrMarket;
@dynamic adrExchangePrice;
@dynamic adrPctchng;
@dynamic adrPriceSpread;
@dynamic adrPriceSpreadRate;
@dynamic adrName;
@dynamic adrDisplay;

typedef struct OBJECT_QUOTERankStockResp__storage_ {
  uint32_t _has_storage_[2];
  uint32_t priceBase;
  OBJECT_QUOTEQuoteType quoteType;
  int32_t peStatic;
  int32_t peTtm;
  int32_t pb;
  int32_t volRatio;
  int32_t ipoDayPctchng;
  int32_t accuPctchng;
  int32_t tradingStatus;
  NSString *secuCode;
  NSString *chsNameAbbr;
  NSString *trdMarket;
  NSString *adrCode;
  NSString *adrMarket;
  NSString *adrName;
  NSString *adrDisplay;
  uint64_t quoteTime;
  uint64_t prevClose;
  uint64_t openPrice;
  uint64_t latestPrice;
  uint64_t highPrice;
  uint64_t lowPrice;
  uint64_t closePrice;
  uint64_t avgPrice;
  int64_t netchng;
  int64_t pctchng;
  uint64_t volume;
  uint64_t trunover;
  uint64_t outstandingShares;
  uint64_t outstandingCap;
  uint64_t totalStockissue;
  uint64_t totalMarcketvalue;
  uint64_t inner;
  uint64_t outer;
  uint64_t turnoverRate;
  uint64_t amplitude;
  uint64_t listDate;
  uint64_t listDays;
  int64_t issuePrice;
  int64_t ipoDayClose;
  uint64_t adrExchangePrice;
  int64_t adrPctchng;
  int64_t adrPriceSpread;
  int64_t adrPriceSpreadRate;
} OBJECT_QUOTERankStockResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_SecuCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_ChsNameAbbr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "trdMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_TrdMarket,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, trdMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_PriceBase,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "quoteTime",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_QuoteTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, quoteTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "quoteType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTEQuoteType_EnumDescriptor,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_QuoteType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, quoteType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "prevClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_PrevClose,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, prevClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "openPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_OpenPrice,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, openPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "latestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_LatestPrice,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, latestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "highPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_HighPrice,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, highPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lowPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_LowPrice,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, lowPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "closePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_ClosePrice,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, closePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "avgPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AvgPrice,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, avgPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "netchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Netchng,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, netchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Pctchng,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, pctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Volume,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, volume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "trunover",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Trunover,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, trunover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outstandingShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_OutstandingShares,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, outstandingShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outstandingCap",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_OutstandingCap,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, outstandingCap),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalStockissue",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_TotalStockissue,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, totalStockissue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalMarcketvalue",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_TotalMarcketvalue,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, totalMarcketvalue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "inner",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Inner,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, inner),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outer",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Outer,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, outer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "peStatic",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_PeStatic,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, peStatic),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "peTtm",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_PeTtm,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, peTtm),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pb",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Pb,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, pb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "turnoverRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_TurnoverRate,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, turnoverRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "amplitude",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Amplitude,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, amplitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "volRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_VolRatio,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, volRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ipoflag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_Ipoflag,
        .hasIndex = 29,
        .offset = 30,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "listDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_ListDate,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, listDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "listDays",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_ListDays,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, listDays),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "issuePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_IssuePrice,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, issuePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ipoDayPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_IpoDayPctchng,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, ipoDayPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ipoDayClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_IpoDayClose,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, ipoDayClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "accuPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AccuPctchng,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, accuPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tradingStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_TradingStatus,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, tradingStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "adrCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrCode,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrMarket,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrExchangePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrExchangePrice,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrExchangePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "adrPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrPctchng,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrPriceSpread",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrPriceSpread,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrPriceSpread),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrPriceSpreadRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrPriceSpreadRate,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrPriceSpreadRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrName,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrDisplay",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockResp_FieldNumber_AdrDisplay,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockResp__storage_, adrDisplay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockResp class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankStockResp_QuoteType_RawValue(OBJECT_QUOTERankStockResp *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockResp descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockResp_FieldNumber_QuoteType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankStockResp_QuoteType_RawValue(OBJECT_QUOTERankStockResp *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockResp descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockResp_FieldNumber_QuoteType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankSectorGatherResp

@implementation OBJECT_QUOTERankSectorGatherResp

@dynamic code;
@dynamic msg;
@dynamic level;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTERankSectorGatherResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t level;
  NSString *msg;
  OBJECT_QUOTERankSectorRespData *data_p;
} OBJECT_QUOTERankSectorGatherResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherResp_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherResp__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherResp_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherResp__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherResp_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherResp__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorRespData),
        .number = OBJECT_QUOTERankSectorGatherResp_FieldNumber_Data_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherResp__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorGatherResp class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorGatherResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankSectorRespData

@implementation OBJECT_QUOTERankSectorRespData

@dynamic from;
@dynamic count;
@dynamic total;
@dynamic rise;
@dynamic draw;
@dynamic fall;
@dynamic limitUp;
@dynamic limitDown;
@dynamic suspend;
@dynamic detailArray, detailArray_Count;
@dynamic rankCode;
@dynamic rankMarket;
@dynamic sorttype;
@dynamic sortdirection;
@dynamic pagedirection;
@dynamic listArray, listArray_Count;

typedef struct OBJECT_QUOTERankSectorRespData__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t rise;
  int32_t draw;
  int32_t fall;
  int32_t limitUp;
  int32_t limitDown;
  int32_t suspend;
  OBJECT_QUOTERankSortType sorttype;
  int32_t sortdirection;
  int32_t pagedirection;
  GPBInt32Array *detailArray;
  NSString *rankCode;
  NSString *rankMarket;
  NSMutableArray *listArray;
  uint64_t count;
  uint64_t total;
} OBJECT_QUOTERankSectorRespData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "total",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Total,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, total),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "rise",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Rise,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, rise),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "draw",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Draw,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, draw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fall",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Fall,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, fall),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitUp",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_LimitUp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, limitUp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitDown",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_LimitDown,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, limitDown),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "suspend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Suspend,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, suspend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "detailArray",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_DetailArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, detailArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rankCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_RankCode,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, rankCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_RankMarket,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, rankMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sorttype",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Sorttype,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, sorttype),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortdirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Sortdirection,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, sortdirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pagedirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_Pagedirection,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, pagedirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "listArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorResp),
        .number = OBJECT_QUOTERankSectorRespData_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespData__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorRespData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorRespData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankSectorRespData_Sorttype_RawValue(OBJECT_QUOTERankSectorRespData *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespData_FieldNumber_Sorttype];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankSectorRespData_Sorttype_RawValue(OBJECT_QUOTERankSectorRespData *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespData_FieldNumber_Sorttype];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankSectorResp

@implementation OBJECT_QUOTERankSectorResp

@dynamic secuCode;
@dynamic chsNameAbbr;
@dynamic trdMarket;
@dynamic priceBase;
@dynamic quoteTime;
@dynamic quoteType;
@dynamic prevClose;
@dynamic openPrice;
@dynamic latestPrice;
@dynamic highPrice;
@dynamic lowPrice;
@dynamic closePrice;
@dynamic avgPrice;
@dynamic netchng;
@dynamic pctchng;
@dynamic amplitude;
@dynamic volume;
@dynamic trunover;
@dynamic turnoverRate;
@dynamic rise;
@dynamic draw;
@dynamic fall;
@dynamic hasLeadStock, leadStock;
@dynamic yxCode;

typedef struct OBJECT_QUOTERankSectorResp__storage_ {
  uint32_t _has_storage_[1];
  uint32_t priceBase;
  OBJECT_QUOTEQuoteType quoteType;
  NSString *secuCode;
  NSString *chsNameAbbr;
  NSString *trdMarket;
  OBJECT_QUOTERankStockResp *leadStock;
  NSString *yxCode;
  uint64_t quoteTime;
  uint64_t prevClose;
  uint64_t openPrice;
  uint64_t latestPrice;
  uint64_t highPrice;
  uint64_t lowPrice;
  uint64_t closePrice;
  uint64_t avgPrice;
  int64_t netchng;
  int64_t pctchng;
  uint64_t amplitude;
  uint64_t volume;
  uint64_t trunover;
  uint64_t turnoverRate;
  uint64_t rise;
  uint64_t draw;
  uint64_t fall;
} OBJECT_QUOTERankSectorResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_SecuCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_ChsNameAbbr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "trdMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_TrdMarket,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, trdMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_PriceBase,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "quoteTime",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_QuoteTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, quoteTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "quoteType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTEQuoteType_EnumDescriptor,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_QuoteType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, quoteType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "prevClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_PrevClose,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, prevClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "openPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_OpenPrice,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, openPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "latestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_LatestPrice,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, latestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "highPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_HighPrice,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, highPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lowPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_LowPrice,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, lowPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "closePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_ClosePrice,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, closePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "avgPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_AvgPrice,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, avgPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "netchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Netchng,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, netchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Pctchng,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, pctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "amplitude",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Amplitude,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, amplitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Volume,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, volume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "trunover",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Trunover,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, trunover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "turnoverRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_TurnoverRate,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, turnoverRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "rise",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Rise,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, rise),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "draw",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Draw,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, draw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fall",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_Fall,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, fall),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "leadStock",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockResp),
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_LeadStock,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, leadStock),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "yxCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorResp_FieldNumber_YxCode,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorResp__storage_, yxCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorResp class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorResp__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankSectorResp_QuoteType_RawValue(OBJECT_QUOTERankSectorResp *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorResp descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorResp_FieldNumber_QuoteType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankSectorResp_QuoteType_RawValue(OBJECT_QUOTERankSectorResp *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorResp descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorResp_FieldNumber_QuoteType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankReqV2

@implementation OBJECT_QUOTERankReqV2

@dynamic sortType;
@dynamic sortDirection;
@dynamic pageDirection;
@dynamic from;
@dynamic count;
@dynamic code;
@dynamic market;
@dynamic lang;
@dynamic level;

typedef struct OBJECT_QUOTERankReqV2__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_QUOTERankSortType sortType;
  int32_t sortDirection;
  int32_t pageDirection;
  int32_t from;
  int32_t lang;
  int32_t level;
  NSString *code;
  NSString *market;
  uint64_t count;
} OBJECT_QUOTERankReqV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sortType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_SortType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, sortType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_SortDirection,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, sortDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_PageDirection,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, pageDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_From,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_Count,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_Code,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "market",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_Market,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "lang",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_Lang,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankReqV2_FieldNumber_Level,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankReqV2__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankReqV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankReqV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010\000\002\r\000\003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankReqV2_SortType_RawValue(OBJECT_QUOTERankReqV2 *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankReqV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankReqV2_FieldNumber_SortType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankReqV2_SortType_RawValue(OBJECT_QUOTERankReqV2 *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankReqV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankReqV2_FieldNumber_SortType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTEMultipleRankReqV2

@implementation OBJECT_QUOTEMultipleRankReqV2

@dynamic codeListArray, codeListArray_Count;

typedef struct OBJECT_QUOTEMultipleRankReqV2__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *codeListArray;
} OBJECT_QUOTEMultipleRankReqV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "codeListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankReqV2),
        .number = OBJECT_QUOTEMultipleRankReqV2_FieldNumber_CodeListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankReqV2__storage_, codeListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEMultipleRankReqV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEMultipleRankReqV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\000codeList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTEMultipleRankRespV2

@implementation OBJECT_QUOTEMultipleRankRespV2

@dynamic code;
@dynamic msg;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTEMultipleRankRespV2__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  NSString *msg;
  OBJECT_QUOTERankRespListV2 *data_p;
} OBJECT_QUOTEMultipleRankRespV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankRespV2__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankRespV2__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankRespListV2),
        .number = OBJECT_QUOTEMultipleRankRespV2_FieldNumber_Data_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEMultipleRankRespV2__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEMultipleRankRespV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEMultipleRankRespV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankRespListV2

@implementation OBJECT_QUOTERankRespListV2

@dynamic stockListArray, stockListArray_Count;
@dynamic sectorListArray, sectorListArray_Count;

typedef struct OBJECT_QUOTERankRespListV2__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *stockListArray;
  NSMutableArray *sectorListArray;
} OBJECT_QUOTERankRespListV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "stockListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockGatherRespV2),
        .number = OBJECT_QUOTERankRespListV2_FieldNumber_StockListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankRespListV2__storage_, stockListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sectorListArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorGatherRespV2),
        .number = OBJECT_QUOTERankRespListV2_FieldNumber_SectorListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankRespListV2__storage_, sectorListArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankRespListV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankRespListV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\000stockList\000\002\000sectorList\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankStockGatherRespV2

@implementation OBJECT_QUOTERankStockGatherRespV2

@dynamic code;
@dynamic msg;
@dynamic level;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTERankStockGatherRespV2__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t level;
  NSString *msg;
  OBJECT_QUOTERankStockRespDataV2 *data_p;
} OBJECT_QUOTERankStockGatherRespV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherRespV2__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherRespV2__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherRespV2__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockRespDataV2),
        .number = OBJECT_QUOTERankStockGatherRespV2_FieldNumber_Data_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockGatherRespV2__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockGatherRespV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockGatherRespV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankStockRespDataV2

@implementation OBJECT_QUOTERankStockRespDataV2

@dynamic from;
@dynamic count;
@dynamic total;
@dynamic up;
@dynamic unchange;
@dynamic down;
@dynamic limitUp;
@dynamic limitDown;
@dynamic suspend;
@dynamic detailArray, detailArray_Count;
@dynamic rankCode;
@dynamic rankMarket;
@dynamic sortType;
@dynamic sortDirection;
@dynamic pageDirection;
@dynamic listArray, listArray_Count;
@dynamic detailZtArray, detailZtArray_Count;

typedef struct OBJECT_QUOTERankStockRespDataV2__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t up;
  int32_t unchange;
  int32_t down;
  int32_t limitUp;
  int32_t limitDown;
  int32_t suspend;
  OBJECT_QUOTERankSortType sortType;
  int32_t sortDirection;
  int32_t pageDirection;
  GPBInt32Array *detailArray;
  NSString *rankCode;
  NSString *rankMarket;
  NSMutableArray *listArray;
  GPBInt32Array *detailZtArray;
  uint64_t count;
  uint64_t total;
} OBJECT_QUOTERankStockRespDataV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "total",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Total,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, total),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "up",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Up,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, up),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unchange",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Unchange,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, unchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "down",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Down,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, down),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitUp",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_LimitUp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, limitUp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitDown",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_LimitDown,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, limitDown),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "suspend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_Suspend,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, suspend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "detailArray",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_DetailArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, detailArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rankCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_RankCode,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, rankCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_RankMarket,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, rankMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sortType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, sortType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortDirection,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, sortDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_PageDirection,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, pageDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "listArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockRespV2),
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "detailZtArray",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespDataV2_FieldNumber_DetailZtArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespDataV2__storage_, detailZtArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockRespDataV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockRespDataV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\007\007\000\010\t\000\013\010\000\014\n\000\r\010\000\016\r\000\017\r\000\021\000detailZT\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankStockRespDataV2_SortType_RawValue(OBJECT_QUOTERankStockRespDataV2 *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespDataV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankStockRespDataV2_SortType_RawValue(OBJECT_QUOTERankStockRespDataV2 *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespDataV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespDataV2_FieldNumber_SortType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankStockRespV2

@implementation OBJECT_QUOTERankStockRespV2

@dynamic secuCode;
@dynamic chsNameAbbr;
@dynamic trdMarket;
@dynamic priceBase;
@dynamic quoteTime;
@dynamic quoteType;
@dynamic prevClose;
@dynamic openPrice;
@dynamic latestPrice;
@dynamic highPrice;
@dynamic lowPrice;
@dynamic closePrice;
@dynamic avgPrice;
@dynamic netChng;
@dynamic pctChng;
@dynamic volume;
@dynamic turnover;
@dynamic outstandingShares;
@dynamic outstandingCap;
@dynamic totalStockIssue;
@dynamic totalMarketValue;
@dynamic inner;
@dynamic outer;
@dynamic peStatic;
@dynamic peTtm;
@dynamic pb;
@dynamic turnoverRate;
@dynamic amplitude;
@dynamic volRatio;
@dynamic ipoFlag;
@dynamic listDate;
@dynamic listDays;
@dynamic issuePrice;
@dynamic ipoDayPctchng;
@dynamic ipoDayClose;
@dynamic accuPctchng;
@dynamic tradingStatus;
@dynamic adrCode;
@dynamic adrMarket;
@dynamic adrExchangePrice;
@dynamic adrPctchng;
@dynamic adrPriceSpread;
@dynamic adrPriceSpreadRate;
@dynamic adrName;
@dynamic adrDisplay;
@dynamic accer5;
@dynamic accer3;
@dynamic dividendYield;
@dynamic netInflow;
@dynamic mainInflow;
@dynamic ahCode;
@dynamic ahMarket;
@dynamic ahLastestPrice;
@dynamic ahPreclose;
@dynamic ahPctchng;
@dynamic ahExchangePrice;
@dynamic ahPriceSpread;
@dynamic ahPriceSpreadRate;
@dynamic ahName;
@dynamic hNameAbbr;
@dynamic marginRatio;
@dynamic bail;
@dynamic greyChgPct;
@dynamic winningRate;
@dynamic pctChg5Day;
@dynamic pctChg10Day;
@dynamic pctChg30Day;
@dynamic pctChg60Day;
@dynamic pctChg120Day;
@dynamic pctChg250Day;
@dynamic pctChg1Year;
@dynamic gearingRatio;
@dynamic high52Week;
@dynamic low52Week;
@dynamic pctChgWeek;
@dynamic bid;
@dynamic bidSize;
@dynamic ask;
@dynamic askSize;
@dynamic cittthan;
@dynamic currency;
@dynamic expiryDate;

typedef struct OBJECT_QUOTERankStockRespV2__storage_ {
  uint32_t _has_storage_[3];
  uint32_t priceBase;
  OBJECT_QUOTEQuoteType quoteType;
  int32_t peStatic;
  int32_t peTtm;
  int32_t pb;
  int32_t volRatio;
  int32_t ipoDayPctchng;
  int32_t accuPctchng;
  int32_t tradingStatus;
  int32_t accer5;
  int32_t accer3;
  int32_t cittthan;
  NSString *secuCode;
  NSString *chsNameAbbr;
  NSString *trdMarket;
  NSString *adrCode;
  NSString *adrMarket;
  NSString *adrName;
  NSString *adrDisplay;
  NSString *ahCode;
  NSString *ahMarket;
  NSString *ahName;
  NSString *hNameAbbr;
  NSString *currency;
  uint64_t quoteTime;
  uint64_t prevClose;
  uint64_t openPrice;
  uint64_t latestPrice;
  uint64_t highPrice;
  uint64_t lowPrice;
  uint64_t closePrice;
  uint64_t avgPrice;
  int64_t netChng;
  int64_t pctChng;
  uint64_t volume;
  uint64_t turnover;
  uint64_t outstandingShares;
  uint64_t outstandingCap;
  uint64_t totalStockIssue;
  uint64_t totalMarketValue;
  uint64_t inner;
  uint64_t outer;
  uint64_t turnoverRate;
  uint64_t amplitude;
  uint64_t listDate;
  uint64_t listDays;
  int64_t issuePrice;
  int64_t ipoDayClose;
  uint64_t adrExchangePrice;
  int64_t adrPctchng;
  int64_t adrPriceSpread;
  int64_t adrPriceSpreadRate;
  int64_t dividendYield;
  int64_t netInflow;
  int64_t mainInflow;
  int64_t ahLastestPrice;
  int64_t ahPreclose;
  int64_t ahPctchng;
  uint64_t ahExchangePrice;
  int64_t ahPriceSpread;
  int64_t ahPriceSpreadRate;
  int64_t marginRatio;
  int64_t bail;
  int64_t greyChgPct;
  int64_t winningRate;
  int64_t pctChg5Day;
  int64_t pctChg10Day;
  int64_t pctChg30Day;
  int64_t pctChg60Day;
  int64_t pctChg120Day;
  int64_t pctChg250Day;
  int64_t pctChg1Year;
  int64_t gearingRatio;
  int64_t high52Week;
  int64_t low52Week;
  int64_t pctChgWeek;
  int64_t bid;
  int64_t bidSize;
  int64_t ask;
  int64_t askSize;
  uint64_t expiryDate;
} OBJECT_QUOTERankStockRespV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_SecuCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_ChsNameAbbr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "trdMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_TrdMarket,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, trdMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PriceBase,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "quoteTime",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, quoteTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "quoteType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTEQuoteType_EnumDescriptor,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, quoteType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "prevClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PrevClose,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, prevClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "openPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_OpenPrice,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, openPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "latestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_LatestPrice,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, latestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "highPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_HighPrice,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, highPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lowPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_LowPrice,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, lowPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "closePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_ClosePrice,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, closePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "avgPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AvgPrice,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, avgPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "netChng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_NetChng,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, netChng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChng,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Volume,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, volume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "turnover",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Turnover,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, turnover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outstandingShares",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_OutstandingShares,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, outstandingShares),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outstandingCap",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_OutstandingCap,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, outstandingCap),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalStockIssue",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_TotalStockIssue,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, totalStockIssue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "totalMarketValue",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_TotalMarketValue,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, totalMarketValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "inner",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Inner,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, inner),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "outer",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Outer,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, outer),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "peStatic",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PeStatic,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, peStatic),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "peTtm",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PeTtm,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, peTtm),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pb",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Pb,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pb),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "turnoverRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_TurnoverRate,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, turnoverRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "amplitude",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Amplitude,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, amplitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "volRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_VolRatio,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, volRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ipoFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_IpoFlag,
        .hasIndex = 29,
        .offset = 30,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "listDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_ListDate,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, listDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "listDays",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_ListDays,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, listDays),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "issuePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_IssuePrice,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, issuePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ipoDayPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_IpoDayPctchng,
        .hasIndex = 34,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ipoDayPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "ipoDayClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_IpoDayClose,
        .hasIndex = 35,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ipoDayClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "accuPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AccuPctchng,
        .hasIndex = 36,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, accuPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "tradingStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_TradingStatus,
        .hasIndex = 37,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, tradingStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "adrCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrCode,
        .hasIndex = 38,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrMarket,
        .hasIndex = 39,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrExchangePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrExchangePrice,
        .hasIndex = 40,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrExchangePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "adrPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPctchng,
        .hasIndex = 41,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrPriceSpread",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPriceSpread,
        .hasIndex = 42,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrPriceSpread),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrPriceSpreadRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrPriceSpreadRate,
        .hasIndex = 43,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrPriceSpreadRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "adrName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrName,
        .hasIndex = 44,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adrDisplay",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AdrDisplay,
        .hasIndex = 45,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, adrDisplay),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accer5",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Accer5,
        .hasIndex = 46,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, accer5),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "accer3",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Accer3,
        .hasIndex = 47,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, accer3),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dividendYield",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_DividendYield,
        .hasIndex = 48,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, dividendYield),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netInflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_NetInflow,
        .hasIndex = 49,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, netInflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "mainInflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_MainInflow,
        .hasIndex = 50,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, mainInflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhCode,
        .hasIndex = 51,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ahMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhMarket,
        .hasIndex = 52,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "ahLastestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhLastestPrice,
        .hasIndex = 53,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahLastestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahPreclose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhPreclose,
        .hasIndex = 54,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahPreclose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahPctchng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhPctchng,
        .hasIndex = 55,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahPctchng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahExchangePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhExchangePrice,
        .hasIndex = 56,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahExchangePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "ahPriceSpread",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhPriceSpread,
        .hasIndex = 57,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahPriceSpread),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahPriceSpreadRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhPriceSpreadRate,
        .hasIndex = 58,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahPriceSpreadRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ahName",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AhName,
        .hasIndex = 59,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ahName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "hNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_HNameAbbr,
        .hasIndex = 60,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, hNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "marginRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_MarginRatio,
        .hasIndex = 61,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, marginRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "bail",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Bail,
        .hasIndex = 62,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, bail),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "greyChgPct",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_GreyChgPct,
        .hasIndex = 63,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, greyChgPct),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "winningRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_WinningRate,
        .hasIndex = 64,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, winningRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg5Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg5Day,
        .hasIndex = 65,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg5Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg10Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg10Day,
        .hasIndex = 66,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg10Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg30Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg30Day,
        .hasIndex = 67,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg30Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg60Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg60Day,
        .hasIndex = 68,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg60Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg120Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg120Day,
        .hasIndex = 69,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg120Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg250Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg250Day,
        .hasIndex = 70,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg250Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg1Year",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChg1Year,
        .hasIndex = 71,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChg1Year),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "gearingRatio",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_GearingRatio,
        .hasIndex = 72,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, gearingRatio),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "high52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_High52Week,
        .hasIndex = 73,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, high52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "low52Week",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Low52Week,
        .hasIndex = 74,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, low52Week),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChgWeek",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_PctChgWeek,
        .hasIndex = 75,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, pctChgWeek),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "bid",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Bid,
        .hasIndex = 76,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, bid),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "bidSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_BidSize,
        .hasIndex = 77,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, bidSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "ask",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Ask,
        .hasIndex = 78,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, ask),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "askSize",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_AskSize,
        .hasIndex = 79,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, askSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "cittthan",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Cittthan,
        .hasIndex = 80,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, cittthan),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_Currency,
        .hasIndex = 81,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "expiryDate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankStockRespV2_FieldNumber_ExpiryDate,
        .hasIndex = 82,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankStockRespV2__storage_, expiryDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankStockRespV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankStockRespV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "D\001\010\000\002\013\000\003\t\000\004\t\000\005\t\000\006\t\000\007\t\000\010\t\000\t\013\000\n\t\000\013\010\000\014\n\000\r\010\000"
        "\016\007\000\017\007\000\022\021\000\023\016\000\024\017\000\025\020\000\030\010\000\031\005\000\033\014\000\035\010\000\036\007\000\037\010\000 \010\000!"
        "\n\000\"\r\000#\013\000$\013\000%\r\000&\007\000\'\t\000(\020\000)\n\000*\016\000+\022\000,\007\000-\n\0000\r"
        "\0001\t\0002\n\0003\006\0004\010\0005\016\0006\n\0007\t\0008\017\0009\r\000:\021\000;\006\000<\t\000=\013\000"
        "\?\n\000@\013\000A\003\243\201#\000B\003\243\202#\000C\003\243\202#\000D\003\243\202#\000E\003\243\203#\000F\003\243\203"
        "#\000G\003\243\201$\000H\014\000I\004\202$\000J\003\202$\000M\007\000O\007\000R\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankStockRespV2_QuoteType_RawValue(OBJECT_QUOTERankStockRespV2 *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankStockRespV2_QuoteType_RawValue(OBJECT_QUOTERankStockRespV2 *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankStockRespV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankStockRespV2_FieldNumber_QuoteType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankSectorGatherRespV2

@implementation OBJECT_QUOTERankSectorGatherRespV2

@dynamic code;
@dynamic msg;
@dynamic level;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTERankSectorGatherRespV2__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t level;
  NSString *msg;
  OBJECT_QUOTERankSectorRespDataV2 *data_p;
} OBJECT_QUOTERankSectorGatherRespV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherRespV2__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherRespV2__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "level",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Level,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherRespV2__storage_, level),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorRespDataV2),
        .number = OBJECT_QUOTERankSectorGatherRespV2_FieldNumber_Data_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorGatherRespV2__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorGatherRespV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorGatherRespV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTERankSectorRespDataV2

@implementation OBJECT_QUOTERankSectorRespDataV2

@dynamic from;
@dynamic count;
@dynamic total;
@dynamic up;
@dynamic unchange;
@dynamic down;
@dynamic limitUp;
@dynamic limitDown;
@dynamic suspend;
@dynamic detailArray, detailArray_Count;
@dynamic rankCode;
@dynamic rankMarket;
@dynamic sortType;
@dynamic sortDirection;
@dynamic pageDirection;
@dynamic listArray, listArray_Count;

typedef struct OBJECT_QUOTERankSectorRespDataV2__storage_ {
  uint32_t _has_storage_[1];
  int32_t from;
  int32_t up;
  int32_t unchange;
  int32_t down;
  int32_t limitUp;
  int32_t limitDown;
  int32_t suspend;
  OBJECT_QUOTERankSortType sortType;
  int32_t sortDirection;
  int32_t pageDirection;
  GPBInt32Array *detailArray;
  NSString *rankCode;
  NSString *rankMarket;
  NSMutableArray *listArray;
  uint64_t count;
  uint64_t total;
} OBJECT_QUOTERankSectorRespDataV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_From,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Count,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "total",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Total,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, total),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "up",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Up,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, up),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "unchange",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Unchange,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, unchange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "down",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Down,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, down),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitUp",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_LimitUp,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, limitUp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "limitDown",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_LimitDown,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, limitDown),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "suspend",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_Suspend,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, suspend),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "detailArray",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_DetailArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, detailArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "rankCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_RankCode,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, rankCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rankMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_RankMarket,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, rankMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sortType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortType,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, sortType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortDirection,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, sortDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "pageDirection",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_PageDirection,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, pageDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "listArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankSectorRespV2),
        .number = OBJECT_QUOTERankSectorRespDataV2_FieldNumber_ListArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespDataV2__storage_, listArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorRespDataV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorRespDataV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\007\007\000\010\t\000\013\010\000\014\n\000\r\010\000\016\r\000\017\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankSectorRespDataV2_SortType_RawValue(OBJECT_QUOTERankSectorRespDataV2 *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespDataV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankSectorRespDataV2_SortType_RawValue(OBJECT_QUOTERankSectorRespDataV2 *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespDataV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespDataV2_FieldNumber_SortType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTERankSectorRespV2

@implementation OBJECT_QUOTERankSectorRespV2

@dynamic secuCode;
@dynamic chsNameAbbr;
@dynamic trdMarket;
@dynamic priceBase;
@dynamic quoteTime;
@dynamic quoteType;
@dynamic prevClose;
@dynamic openPrice;
@dynamic latestPrice;
@dynamic highPrice;
@dynamic lowPrice;
@dynamic closePrice;
@dynamic avgPrice;
@dynamic netChng;
@dynamic pctChng;
@dynamic amplitude;
@dynamic volume;
@dynamic turnover;
@dynamic turnoverRate;
@dynamic rise;
@dynamic draw;
@dynamic fall;
@dynamic hasLeadStock, leadStock;
@dynamic yxCode;
@dynamic inflow;
@dynamic outflow;
@dynamic netInflow;
@dynamic mainInflow;
@dynamic pctChg5Day;
@dynamic pctChgWeek;

typedef struct OBJECT_QUOTERankSectorRespV2__storage_ {
  uint32_t _has_storage_[1];
  uint32_t priceBase;
  OBJECT_QUOTEQuoteType quoteType;
  NSString *secuCode;
  NSString *chsNameAbbr;
  NSString *trdMarket;
  OBJECT_QUOTERankStockRespV2 *leadStock;
  NSString *yxCode;
  uint64_t quoteTime;
  uint64_t prevClose;
  uint64_t openPrice;
  uint64_t latestPrice;
  uint64_t highPrice;
  uint64_t lowPrice;
  uint64_t closePrice;
  uint64_t avgPrice;
  int64_t netChng;
  int64_t pctChng;
  uint64_t amplitude;
  uint64_t volume;
  uint64_t turnover;
  uint64_t turnoverRate;
  uint64_t rise;
  uint64_t draw;
  uint64_t fall;
  int64_t inflow;
  int64_t outflow;
  int64_t netInflow;
  int64_t mainInflow;
  int64_t pctChg5Day;
  int64_t pctChgWeek;
} OBJECT_QUOTERankSectorRespV2__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "secuCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_SecuCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, secuCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "chsNameAbbr",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_ChsNameAbbr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, chsNameAbbr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "trdMarket",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_TrdMarket,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, trdMarket),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_PriceBase,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "quoteTime",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, quoteTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "quoteType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTEQuoteType_EnumDescriptor,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, quoteType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "prevClose",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_PrevClose,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, prevClose),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "openPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_OpenPrice,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, openPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "latestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_LatestPrice,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, latestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "highPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_HighPrice,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, highPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "lowPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_LowPrice,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, lowPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "closePrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_ClosePrice,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, closePrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "avgPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_AvgPrice,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, avgPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "netChng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_NetChng,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, netChng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChng",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChng,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, pctChng),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "amplitude",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Amplitude,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, amplitude),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "volume",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Volume,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, volume),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "turnover",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Turnover,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, turnover),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "turnoverRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_TurnoverRate,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, turnoverRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "rise",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Rise,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, rise),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "draw",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Draw,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, draw),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fall",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Fall,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, fall),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "leadStock",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTERankStockRespV2),
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_LeadStock,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, leadStock),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "yxCode",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_YxCode,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, yxCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "inflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Inflow,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, inflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "outflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_Outflow,
        .hasIndex = 25,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, outflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "netInflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_NetInflow,
        .hasIndex = 26,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, netInflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "mainInflow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_MainInflow,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, mainInflow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChg5Day",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChg5Day,
        .hasIndex = 28,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, pctChg5Day),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "pctChgWeek",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTERankSectorRespV2_FieldNumber_PctChgWeek,
        .hasIndex = 29,
        .offset = (uint32_t)offsetof(OBJECT_QUOTERankSectorRespV2__storage_, pctChgWeek),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTERankSectorRespV2 class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTERankSectorRespV2__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\025\001\010\000\002\013\000\003\t\000\004\t\000\005\t\000\006\t\000\007\t\000\010\t\000\t\013\000\n\t\000\013\010\000\014\n\000\r\010\000"
        "\016\007\000\017\007\000\023\014\000\027\t\000\030\006\000\033\t\000\034\n\000\035\003\243\201#\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTERankSectorRespV2_QuoteType_RawValue(OBJECT_QUOTERankSectorRespV2 *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTERankSectorRespV2_QuoteType_RawValue(OBJECT_QUOTERankSectorRespV2 *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTERankSectorRespV2 descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTERankSectorRespV2_FieldNumber_QuoteType];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTESectorHistoryRankReq

@implementation OBJECT_QUOTESectorHistoryRankReq

@dynamic date;
@dynamic sortType;
@dynamic sortDirection;
@dynamic pageDirection;
@dynamic from;
@dynamic count;
@dynamic market;
@dynamic lang;

typedef struct OBJECT_QUOTESectorHistoryRankReq__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_QUOTERankSortType sortType;
  COMMONSortDirection sortDirection;
  COMMONPageDirection pageDirection;
  int32_t from;
  int32_t count;
  OBJECT_MARKETMarketId market;
  COMMONLangType lang;
  int64_t date;
} OBJECT_QUOTESectorHistoryRankReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Date,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sortType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, sortType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortDirection",
        .dataTypeSpecific.enumDescFunc = COMMONSortDirection_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortDirection,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, sortDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "pageDirection",
        .dataTypeSpecific.enumDescFunc = COMMONPageDirection_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_PageDirection,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, pageDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_From,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Count,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Market,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "lang",
        .dataTypeSpecific.enumDescFunc = COMMONLangType_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Lang,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReq__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTESectorHistoryRankReq class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTESectorHistoryRankReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\002\010\000\003\r\000\004\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTESectorHistoryRankReq_SortType_RawValue(OBJECT_QUOTESectorHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryRankReq_SortType_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortType];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTESectorHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortDirection];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_SortDirection];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTESectorHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_PageDirection];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_PageDirection];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTESectorHistoryRankReq_Market_RawValue(OBJECT_QUOTESectorHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryRankReq_Market_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTESectorHistoryRankReq_Lang_RawValue(OBJECT_QUOTESectorHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Lang];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryRankReq_Lang_RawValue(OBJECT_QUOTESectorHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryRankReq_FieldNumber_Lang];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTESectorHistoryRankReply

@implementation OBJECT_QUOTESectorHistoryRankReply

@dynamic code;
@dynamic msg;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTESectorHistoryRankReply__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  NSString *msg;
  OBJECT_QUOTESectorHistoryData *data_p;
} OBJECT_QUOTESectorHistoryRankReply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReply__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReply__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTESectorHistoryData),
        .number = OBJECT_QUOTESectorHistoryRankReply_FieldNumber_Data_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryRankReply__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTESectorHistoryRankReply class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTESectorHistoryRankReply__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTESectorHistoryData

@implementation OBJECT_QUOTESectorHistoryData

@dynamic market;
@dynamic date;
@dynamic sectorDataArray, sectorDataArray_Count;

typedef struct OBJECT_QUOTESectorHistoryData__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSMutableArray *sectorDataArray;
  int64_t date;
} OBJECT_QUOTESectorHistoryData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_QUOTESectorHistoryData_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryData__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorHistoryData_FieldNumber_Date,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryData__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sectorDataArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTESectorData),
        .number = OBJECT_QUOTESectorHistoryData_FieldNumber_SectorDataArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorHistoryData__storage_, sectorDataArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTESectorHistoryData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTESectorHistoryData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\000sectorData\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTESectorHistoryData_Market_RawValue(OBJECT_QUOTESectorHistoryData *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryData_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTESectorHistoryData_Market_RawValue(OBJECT_QUOTESectorHistoryData *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTESectorHistoryData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTESectorHistoryData_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTESectorData

@implementation OBJECT_QUOTESectorData

@dynamic code;
@dynamic name;
@dynamic priceChange;
@dynamic priceChangeRate;
@dynamic inFlow;
@dynamic outFlow;
@dynamic priceBase;

typedef struct OBJECT_QUOTESectorData__storage_ {
  uint32_t _has_storage_[1];
  int32_t priceChangeRate;
  uint32_t priceBase;
  NSString *code;
  NSString *name;
  int64_t priceChange;
  int64_t inFlow;
  int64_t outFlow;
} OBJECT_QUOTESectorData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceChange",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_PriceChange,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, priceChange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceChangeRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_PriceChangeRate,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, priceChangeRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "inFlow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_InFlow,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, inFlow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "outFlow",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_OutFlow,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, outFlow),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTESectorData_FieldNumber_PriceBase,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTESectorData__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTESectorData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTESectorData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\003\013\000\004\017\000\005\006\000\006\007\000\007\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTEStockHistoryRankReq

@implementation OBJECT_QUOTEStockHistoryRankReq

@dynamic date;
@dynamic sortType;
@dynamic sortDirection;
@dynamic pageDirection;
@dynamic from;
@dynamic count;
@dynamic market;
@dynamic lang;

typedef struct OBJECT_QUOTEStockHistoryRankReq__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_QUOTERankSortType sortType;
  COMMONSortDirection sortDirection;
  COMMONPageDirection pageDirection;
  int32_t from;
  int32_t count;
  OBJECT_MARKETMarketId market;
  COMMONLangType lang;
  int64_t date;
} OBJECT_QUOTEStockHistoryRankReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Date,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sortType",
        .dataTypeSpecific.enumDescFunc = OBJECT_QUOTERankSortType_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortType,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, sortType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "sortDirection",
        .dataTypeSpecific.enumDescFunc = COMMONSortDirection_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortDirection,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, sortDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "pageDirection",
        .dataTypeSpecific.enumDescFunc = COMMONPageDirection_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_PageDirection,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, pageDirection),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "from",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_From,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, from),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "count",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Count,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, count),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Market,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "lang",
        .dataTypeSpecific.enumDescFunc = COMMONLangType_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Lang,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReq__storage_, lang),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEStockHistoryRankReq class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEStockHistoryRankReq__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\002\010\000\003\r\000\004\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTEStockHistoryRankReq_SortType_RawValue(OBJECT_QUOTEStockHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortType];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryRankReq_SortType_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortType];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTEStockHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortDirection];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryRankReq_SortDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_SortDirection];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTEStockHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_PageDirection];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryRankReq_PageDirection_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_PageDirection];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTEStockHistoryRankReq_Market_RawValue(OBJECT_QUOTEStockHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryRankReq_Market_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

int32_t OBJECT_QUOTEStockHistoryRankReq_Lang_RawValue(OBJECT_QUOTEStockHistoryRankReq *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Lang];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryRankReq_Lang_RawValue(OBJECT_QUOTEStockHistoryRankReq *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryRankReq descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryRankReq_FieldNumber_Lang];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTEStockHistoryRankReply

@implementation OBJECT_QUOTEStockHistoryRankReply

@dynamic code;
@dynamic msg;
@dynamic hasData_p, data_p;

typedef struct OBJECT_QUOTEStockHistoryRankReply__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  NSString *msg;
  OBJECT_QUOTEStockHistoryData *data_p;
} OBJECT_QUOTEStockHistoryRankReply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReply__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReply__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTEStockHistoryData),
        .number = OBJECT_QUOTEStockHistoryRankReply_FieldNumber_Data_p,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryRankReply__storage_, data_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEStockHistoryRankReply class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEStockHistoryRankReply__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - OBJECT_QUOTEStockHistoryData

@implementation OBJECT_QUOTEStockHistoryData

@dynamic market;
@dynamic date;
@dynamic stockDataArray, stockDataArray_Count;

typedef struct OBJECT_QUOTEStockHistoryData__storage_ {
  uint32_t _has_storage_[1];
  OBJECT_MARKETMarketId market;
  NSMutableArray *stockDataArray;
  int64_t date;
} OBJECT_QUOTEStockHistoryData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "market",
        .dataTypeSpecific.enumDescFunc = OBJECT_MARKETMarketId_EnumDescriptor,
        .number = OBJECT_QUOTEStockHistoryData_FieldNumber_Market,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryData__storage_, market),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "date",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockHistoryData_FieldNumber_Date,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryData__storage_, date),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "stockDataArray",
        .dataTypeSpecific.clazz = GPBObjCClass(OBJECT_QUOTEStockData),
        .number = OBJECT_QUOTEStockHistoryData_FieldNumber_StockDataArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockHistoryData__storage_, stockDataArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEStockHistoryData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEStockHistoryData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\003\000stockData\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t OBJECT_QUOTEStockHistoryData_Market_RawValue(OBJECT_QUOTEStockHistoryData *message) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryData_FieldNumber_Market];
  return GPBGetMessageRawEnumField(message, field);
}

void SetOBJECT_QUOTEStockHistoryData_Market_RawValue(OBJECT_QUOTEStockHistoryData *message, int32_t value) {
  GPBDescriptor *descriptor = [OBJECT_QUOTEStockHistoryData descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:OBJECT_QUOTEStockHistoryData_FieldNumber_Market];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - OBJECT_QUOTEStockData

@implementation OBJECT_QUOTEStockData

@dynamic code;
@dynamic name;
@dynamic priceChange;
@dynamic priceChangeRate;
@dynamic latestPrice;
@dynamic priceBase;

typedef struct OBJECT_QUOTEStockData__storage_ {
  uint32_t _has_storage_[1];
  int32_t priceChangeRate;
  uint32_t priceBase;
  NSString *code;
  NSString *name;
  int64_t priceChange;
  int64_t latestPrice;
} OBJECT_QUOTEStockData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, code),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "name",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_Name,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, name),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "priceChange",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_PriceChange,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, priceChange),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceChangeRate",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_PriceChangeRate,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, priceChangeRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "latestPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_LatestPrice,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, latestPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "priceBase",
        .dataTypeSpecific.clazz = Nil,
        .number = OBJECT_QUOTEStockData_FieldNumber_PriceBase,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(OBJECT_QUOTEStockData__storage_, priceBase),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[OBJECT_QUOTEStockData class]
                                     rootClass:[OBJECT_QUOTERankRoot class]
                                          file:OBJECT_QUOTERankRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(OBJECT_QUOTEStockData__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\003\013\000\004\017\000\005\013\000\006\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
